    'EDMA COMPILAR NRC
    Option Explicit
    'edma
    Public PRecompras As Object
    'edma
    Dim viEnganche As Integer
    Dim lstrADNSignoMoneda As String  ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    'ROLREM-I
    Dim CanalExterno
    'ROLREM-F
    'ROL005-I
    Public StrLog As String
    'ROL005-F
    'Dim objSaldosAlnova As New ADN2CtrlPresup.ctrlPresupuesto 'HLP
    Public NRCflag As Boolean 'Bandera para indicar si el presupuesto aplica en Nuevas Reglas de Credito 13/12/2010
    'edma
    Public lCN2 As New ADODB.Connection
    Public lRS2 As New Recordset
    'edma
    
    'VHSG 17/06/2011
    Public Adm As AdnAdmonAplC65.CtrAdmApl
    Dim PorcEngTemp As Double
    Dim DecXRec As Double
    Dim DClienteUnico  As String
    Dim AplicaPromocion As Boolean
    Dim i As Integer
    Dim EngancheXCliente As Double
    Dim flag As Integer
    
    'VHSG 04/06/2012
    'Public objSKUSeguro As New ADN2CtrlPresup.ctrlPresupuesto
    Public objSKUSeguro As Object
    'BOTP 21/11/2014 se quita varieble para Imagen
    'Public muestraImagen As Integer
    
    
    'ABBR ERV Credito Inmediato Febrero 2015
    Public PorcentajeCredInm As String
    Public CantidadCredInm As String
    Public bolCredInm As Boolean
    Public bolCredInmSKU As Boolean
    
    'ROLREQ88710-I Variables seguros
    Public bolSegMotoAgrXBoton As Boolean
    
    Public bolSegVidamaxAgr As Boolean
    Public bolSegMotoAgr As Boolean
    Public bolEsRecalculoVidamax As Boolean
    Public bolSegVidamaxAgrGraba As Boolean
    
    Public SkuSeguroVida As Long
    Public SkuSeguroMoto As Long
    Public DescSeguroVida As String
    Public DescSeguroMoto As String
    Public dblSegVidaPrecio As Double
    Public dblSegMotoPrecio As Double
    Public dblSegVidaSobrePrecio As Double
    Public dblSegMotoSobrePrecio As Double
    'variables de frm abonos con seguro
    Public PlazoConSeguro As Integer
    Public dblAbonoSinSeg As Double
    Public dblUltimoAbonoSinSeg As Double
    Public dblAbonoPuntualSinSeg As Double
    Public dblAbonoConSeg As Double
    Public dblUltimoAbonoConSeg As Double
    Public dblAbonoPuntualConSeg As Double
    
    Public bolPlazoConSeguroAunActivo As Boolean
    Public bolEsProdConsumo As Boolean
    Public bolEsProdMotos As Boolean
    Public bolEsProdRescate As Boolean
    
    Public lbolEsmoto As Boolean
    
    'desechar variables-I
    Public SkuSeguro As Long
    'desechar variables-F
    'ROLREQ88710-F Variables seguros
    Dim adnProductoResPuente As New ADN2Venta.VentaCredito
    
    'Declaracion de variables de telefonia
    '====================================
    Public isPagoSemanalTelefonia As Boolean
    Public isPagoQuincenalTelefonia As Boolean
    Public isPagoMensualTelefonia As Boolean
    Public PeriodoDePagoTelefonia As String
    Public NumPeriodoPagoTelefonia As Byte
    '========================FIN DE DECLARACION DE VARIABLES TELEFONIA==========
    
    
    'ROLREQ88710-I Agrega seguro vidamax
    Private Sub btnAgregaVidamax_Click()
        If bolSegMotoAgr = False Or bolEsRecalculoVidamax = True Then
           If CtrlSeguroVidamax.Precio > 0 Then
              'Obtenemos datos del seguro vidamax
              CtrlSeguroVidamax.SeguroFueAgregado = True
              
              
              SkuSeguroVida = CtrlSeguroVidamax.Precio()   'Por error en ocx de seguro se debe hacer esto la primera vez para que regrese bn el SKU (NOBORRAR)
              SkuSeguroVida = CtrlSeguroVidamax.SkuSeguro()
              dblSegVidaPrecio = CtrlSeguroVidamax.Precio()
              dblSegVidaSobrePrecio = CtrlSeguroVidamax.Sobreprecio()
              'Muestra y llena tabla de producto vidamax
              FrameSegurosProd.Enabled = True
              FrameSegurosProd.Visible = True
              LbCodigoSegVida.Item(0).Caption = SkuSeguroVida
              LbDescSegVida.Item(0).Caption = "SEGURO VIDAMAX $" & CtrlSeguroVidamax.PrecioBase & " SEMANAL"
              LbPrecioSegVida.Item(0).Caption = "$" & dblSegVidaPrecio
              'Enciende bandera de segvida activo
              bolSegVidamaxAgr = True
              btnAgregaVidamax.Enabled = False
              btnEliminarSeguroVida.Enabled = True
              CtrlSeguroVidamax.HabilitarCombo (False)
              CalculaAbonosConVidamax
           Else
              MsgBox "Debe seleccionar un seguro vidamax"
           End If
        Else
            MsgBox "Debe eliminar el seguro de da√±os de moto antes de agregar un seguro vidamax"
        End If
    End Sub
    'ROLREQ88710-F Agrega seguro vidamax
    
    'ROLREQ88710-I Recalcula abonos para FRM de abonos con vidamax
    Private Function CalculaAbonosConVidamax()
    
        FrameSegurosAbonos.Visible = True
        FrameSegurosAbonos.Enabled = True
          
        PlazoConSeguro = Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 0))
        dblAbonoSinSeg = Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 2))
        dblUltimoAbonoSinSeg = Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 3))
        dblAbonoPuntualSinSeg = Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 4))
          
    
        LbPlazoSeguro.Item(0).Caption = PlazoConSeguro
        dblAbonoConSeg = dblAbonoSinSeg + CtrlSeguroVidamax.PrecioBase
        LbAbonoConSeg.Item(0).Caption = "$" & dblAbonoSinSeg + CtrlSeguroVidamax.PrecioBase
        
        dblUltimoAbonoConSeg = dblUltimoAbonoSinSeg + CtrlSeguroVidamax.PrecioBase
        LbUltAbonoConSeg.Item(0).Caption = "$" & dblUltimoAbonoSinSeg + CtrlSeguroVidamax.PrecioBase
        
        dblAbonoPuntualConSeg = dblAbonoPuntualSinSeg + CtrlSeguroVidamax.PrecioBase
        LbAbonoPunConSeg.Item(0).Caption = "$" & dblAbonoPuntualSinSeg + CtrlSeguroVidamax.PrecioBase
          
    End Function
    'ROLREQ88710-F Recalcula abonos para FRM de abonos con vidamax
    
    'ROLREQ88710-I Elimina seguro vidamax
    Private Sub btnEliminarSeguroVida_Click()
              
        'Quita Frm de seguro vidamax argegado
        FrameSegurosProd.Visible = False
        FrameSegurosProd.Enabled = False
        LbCodigoSegVida.Item(0).Caption = ""
        LbDescSegVida.Item(0).Caption = ""
        LbPrecioSegVida.Item(0).Caption = ""
        'Quita Frm de Abonos de producto con vidamax
        FrameSegurosAbonos.Visible = False
        FrameSegurosAbonos.Enabled = False
        LbPlazoSeguro.Item(0).Caption = ""
        LbAbonoConSeg.Item(0).Caption = ""
        LbUltAbonoConSeg.Item(0).Caption = ""
        LbAbonoPunConSeg.Item(0).Caption = ""
        dblAbonoConSeg = 0
        dblUltimoAbonoConSeg = 0
        dblAbonoPuntualConSeg = 0
        dblAbonoSinSeg = 0
        dblUltimoAbonoSinSeg = 0
        dblAbonoPuntualSinSeg = 0
        SkuSeguroVida = 0
        DescSeguroVida = ""
        dblSegVidaPrecio = 0
        dblSegVidaSobrePrecio = 0
        
        If bolEsProdRescate Then
           btnAgregaVidamax.Enabled = False
           btnAgregaVidamax.Visible = False
           btnEliminarSeguroVida.Enabled = False
           btnEliminarSeguroVida.Visible = False
           FrCtrlSeguroVidamax.Enabled = False
           FrCtrlSeguroVidamax.Visible = False
        Else
           bolSegVidamaxAgr = False
        
           If bolEsRecalculoVidamax = True Then
              If objPrepGeneral.VentaCredito.Plazo <= 128 Then
                 'FrCtrlSeguroVidamax.Visible = True
                 'FrCtrlSeguroVidamax.Enabled = True
                 CtrlSeguroVidamax.HabilitarCombo (True)
                 CtrlSeguroVidamax.Usuario = NvoEnv.Usuario
                 CtrlSeguroVidamax.Password = NvoEnv.Password
                 CtrlSeguroVidamax.EstacionTrabajo = NvoEnv.ObtenerEstacionTrabajoFisica
                 CtrlSeguroVidamax.Periodo = objPrepGeneral.VentaCredito.Periodo
                 CtrlSeguroVidamax.Plazo = objPrepGeneral.VentaCredito.Plazo
                 CtrlSeguroVidamax.ProduictoID = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID
                 CtrlSeguroVidamax.CapacidadPago = (objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp - Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 4)))
                 CtrlSeguroVidamax.PaisCU = objPrepGeneral.VentaCredito.Cliente.Pais
                 CtrlSeguroVidamax.CanalCU = objPrepGeneral.VentaCredito.Cliente.Canal
                 CtrlSeguroVidamax.SucursalCU = objPrepGeneral.VentaCredito.Cliente.SucursalOrigen
                 CtrlSeguroVidamax.fiFolioCU = objPrepGeneral.VentaCredito.Cliente.Folio
                 CtrlSeguroVidamax.DibujaCombo
                 
                 If CtrlSeguroVidamax.AgregadoAunDisponible Then
                 
                    SkuSeguroVida = CtrlSeguroVidamax.Precio()   'Por error en ocx de seguro se debe hacer esto la primera vez para que regrese bn el SKU (NOBORRAR)
                    SkuSeguroVida = CtrlSeguroVidamax.SkuSeguro()
                    dblSegVidaPrecio = CtrlSeguroVidamax.Precio()
                    dblSegVidaSobrePrecio = CtrlSeguroVidamax.Sobreprecio()
                    'Muestra y llena tabla de producto vidamax
                 
                    btnAgregaVidamax.Visible = True
                    btnEliminarSeguroVida.Visible = True
                    bolEsRecalculoVidamax = False
                    bolSegVidamaxAgr = True
                 
                    FrameSegurosProd.Enabled = True
                    FrameSegurosProd.Visible = True
                    LbCodigoSegVida.Item(0).Caption = SkuSeguroVida
                    LbDescSegVida.Item(0).Caption = "SEGURO VIDAMAX $" & CtrlSeguroVidamax.PrecioBase & " SEMANAL"
                    LbPrecioSegVida.Item(0).Caption = "$" & dblSegVidaPrecio
                 
                    btnAgregaVidamax.Enabled = False
                    btnEliminarSeguroVida.Enabled = True
                    CtrlSeguroVidamax.HabilitarCombo (False)
                    CalculaAbonosConVidamax
                    
                 Else
                    If CtrlSeguroVidamax.SeguroFueAgregado = True Then
                       'bolSegVidamaxAgr = True
                       bolEsRecalculoVidamax = False
                       PlazoConSeguro = 0
                       'CtrlSeguroVidamax.HabilitarCombo (False)
                    End If
                 End If
              Else
                 btnAgregaVidamax.Visible = False
                 btnEliminarSeguroVida.Visible = False
                 FrCtrlSeguroVidamax.Visible = False
                 PlazoConSeguro = objPrepGeneral.VentaCredito.Plazo
                 bolEsRecalculoVidamax = False
              End If
           Else
              btnAgregaVidamax.Enabled = True
              btnEliminarSeguroVida.Enabled = False
              CtrlSeguroVidamax.HabilitarCombo (True)
              CtrlSeguroVidamax.SeguroFueAgregado = False
              bolEsRecalculoVidamax = False
              'CtrlSeguroVidamax.ExisteCombo = False
           End If
        End If
    
    End Sub
    'ROLREQ88710-F Elimina seguro vidamax
    
    'ROLREQ88710-I Elimina seguro de moto
    Private Sub btnEliminarSeguroMotos_Click()
    Dim SegMotoInd As Integer
    Dim Venta As Integer
    Dim strCelda As String
    Dim lngSKUS As Long
                          
        
        If bolEsProdRescate Then
          For Venta = 1 To objPrepGeneral.VentaCredito.ColDetalleVenta.Count
              If objPrepGeneral.VentaCredito.ColDetalleVenta(Venta).producto.ProdID = CtrlSeguroMotos.SkuSeguro Then
                 SegMotoInd = Venta
                 Exit For
              End If
          Next
            
          grdPartidas.RowSel = Venta
                    
          If grdPartidas.col <> 3 And grdPartidas.col <> 6 Then
             strCelda = grdPartidas.TextMatrix(grdPartidas.RowSel, 0)
             Set objSKUSeguro = CreateObject("ADN2CtrlPresup.ctrlPresupuesto")
             If VerificarPais Then
                lngSKUS = objSKUSeguro.ObtenerSKUSeguros
             End If
                        
             If strCelda = CStr(lngSKUS) Then
                If ValidaSeguro Then
                   If EliminarPartida Then
                      ActualizaGridPartidas
                      If objPrepGeneral.VentaCredito.BienEntregado = 0 Then HabilitaEntregaOT
                      ConfiguraBienEntregado
                   End If
                Else
                   MsgBox "El Seguro es Obligatorio."
                End If
             Else
                If EliminarPartida Then
                   ActualizaGridPartidas
                   If objPrepGeneral.VentaCredito.BienEntregado = 0 Then HabilitaEntregaOT
                   ConfiguraBienEntregado
                End If
             End If
          End If
                           
          FrCtrlSeguroMotos.Enabled = False
          FrCtrlSeguroMotos.Visible = False
          btnSeguroMotos.Enabled = False
          btnSeguroMotos.Visible = False
          btnEliminarSeguroMotos.Enabled = False
          btnEliminarSeguroMotos.Visible = False
          bolSegMotoAgr = False
          Exit Sub
       End If
          
       If CtrlSeguroMotos.SkuSeguro > 0 Then
          If objFuncionalidad.MuestraMensaje("¬øEst√°s seguro de querer eliminar la partida para el producto " & vbCrLf & IIf(CtrlSeguroMotos.SkuSeguro > 0, CtrlSeguroMotos.SkuSeguro & " ", " ") & CtrlSeguroMotos.DescripcionSeguro & " ?", Pregunta, SI_NO, Me.Caption) = vbYes Then
             For Venta = 1 To objPrepGeneral.VentaCredito.ColDetalleVenta.Count
                 If objPrepGeneral.VentaCredito.ColDetalleVenta(Venta).producto.ProdID = CtrlSeguroMotos.SkuSeguro Then
                    SegMotoInd = Venta
                    Exit For
                 End If
             Next
          
             grdPartidas.RowSel = Venta
                  
             If grdPartidas.col <> 3 And grdPartidas.col <> 6 Then
                strCelda = grdPartidas.TextMatrix(grdPartidas.RowSel, 0)
                Set objSKUSeguro = CreateObject("ADN2CtrlPresup.ctrlPresupuesto")
                If VerificarPais Then
                   lngSKUS = objSKUSeguro.ObtenerSKUSeguros
                End If
                      
                If strCelda = CStr(lngSKUS) Then
                   If ValidaSeguro Then
                      If EliminarPartida Then
                         ActualizaGridPartidas
                         If objPrepGeneral.VentaCredito.BienEntregado = 0 Then HabilitaEntregaOT
                         ConfiguraBienEntregado
                      End If
                   Else
                      MsgBox "El Seguro es Obligatorio."
                   End If
                Else
                   If EliminarPartida Then
                      ActualizaGridPartidas
                      If objPrepGeneral.VentaCredito.BienEntregado = 0 Then HabilitaEntregaOT
                      ConfiguraBienEntregado
                   End If
                End If
             End If
          End If
       End If
       
        FrCtrlSeguroMotos.Enabled = True
        bolSegMotoAgr = False
        btnSeguroMotos.Enabled = True
        btnEliminarSeguroMotos.Enabled = False
    
    End Sub
    'ROLREQ88710-F Elimina seguro de moto
    
    Private Sub btnGuardarIMEI_Click()
'    Dim IMEI As String
'    Dim a As Integer
'    Dim Contador As Integer
'
'    IMEI = txtIMEIProducto.Text
'    ListBoxIMEI.AddItem IMEI
'
'    If ListBoxIMEI.ListCount > 4 Then
'    insertarDatosIMEITelefonia
''    contador = ListBoxIMEI.ListCount
''    Debug.Print contador
''    For a = 0 To ListBoxIMEI.ListCount
''    Debug.Print "Extrajo datos " & ListBoxIMEI.List(a)
''
''    Next a
''    ListBoxIMEI.Clear
''    txtIMEIProducto.Text = ""
'    End If
'
    End Sub
    
    'ROLREQ88710-I Agrega seguro de da√±os de moto
    Private Sub btnSeguroMotos_Click()
    
       If bolSegVidamaxAgr = False Then
          If objPrepGeneral.VentaCredito.ColDetalleVenta.Count = 1 Then
             If bolSegMotoAgr = False Then
                dblSegMotoPrecio = CtrlSeguroMotos.PrecioSeguro()
                SkuSeguroMoto = CtrlSeguroMotos.SkuSeguro
                If SkuSeguroMoto > 0 Then
                   bolSegMotoAgrXBoton = True
                   bolSegMotoAgr = True
                   txtCodigo.Text = CtrlSeguroMotos.SkuSeguro()
                   txtCodigo_KeyDown vbKeyReturn, 1
                   FrCtrlSeguroMotos.Enabled = False
                   btnSeguroMotos.Enabled = False
                   btnEliminarSeguroMotos.Enabled = True
                Else
                   MsgBox "Debe seleccionar alguna cobertura y uso del seguro de da√±os"
                End If
             End If
          Else
             If bolSegMotoAgr = True Then
                MsgBox "El seguro es unicamente para motos y solo puede ser un seguro a la vez"
             End If
          End If
       Else
            MsgBox "Debe eliminar el seguro Vidamex antes de agregar un seguro de moto"
       End If
    End Sub
    'ROLREQ88710-F Agrega seguro de da√±os de moto
    
    'Codigo para agregar seg moto
    '          If VerificarDepto(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID) Then
    
    '                 If FrCtrlSeguroMotos.Visible = False Then
    '                    FrCtrlSeguroMotos.Visible = True
    '                    FrCtrlSeguroMotos.Enabled = True
    '                    btnEliminarSeguroMotos.Visible = True
    '                    FrCtrlSeguroVidamax.Visible = False
    '                    If CtrlSeguroMotos.ExisteCombo = False Then
    '                        CtrlSeguroMotos.Usuario = NvoEnv.Usuario
    '                        CtrlSeguroMotos.Password = NvoEnv.Password
    '                        CtrlSeguroMotos.SkuMoto = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID
    '                        CtrlSeguroMotos.DescuentoMoto = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.PorcDescASCII
    '                        CtrlSeguroMotos.PrecioMoto = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdPrecio
    '                        CtrlSeguroMotos.EstacionTrabajo = NvoEnv.ObtenerEstacionTrabajoFisica
    '                        CtrlSeguroMotos.DibujaCombo
    '                    End If
    '                 Else
    'Codigo para agregar seg moto
    
    Private Sub chkMensual_Click()
        blnEsSemanal = chkSemanal.Value
        blnEsQuincenal = chkQuincenal.Value
        blnEsMensual = chkMensual.Value
        gsPeriodoPago = "Mensual"
        
        'Periodo de pagos
        NumPeriodoPago = 14
        objPrepGeneral.VentaCredito.Periodo = 14
        objPrepGeneral.VentaCredito.EsPerPagSem = blnEsSemanal
        objPrepGeneral.VentaCredito.EsPerPagQui = blnEsQuincenal
        objPrepGeneral.VentaCredito.EsPerPagMen = blnEsMensual
        'objPrepGeneral.VentaCredito.CalculaTotalCredito
        ActualizaTotales
    End Sub
    
    Private Sub chkQuincenal_Click()
        blnEsSemanal = chkSemanal.Value
        blnEsQuincenal = chkQuincenal.Value
        blnEsMensual = chkMensual.Value
        gsPeriodoPago = "Quincenal"
        'Periodo de pagos
        NumPeriodoPago = 13
        objPrepGeneral.VentaCredito.Periodo = 13
        objPrepGeneral.VentaCredito.EsPerPagSem = blnEsSemanal
        objPrepGeneral.VentaCredito.EsPerPagQui = blnEsQuincenal
        objPrepGeneral.VentaCredito.EsPerPagMen = blnEsMensual
        'objPrepGeneral.VentaCredito.CalculaTotalCredito
        ActualizaTotales
    End Sub
    
    Private Sub chkSemanal_Click()
        blnEsSemanal = chkSemanal.Value
        blnEsQuincenal = chkQuincenal.Value
        blnEsMensual = chkMensual.Value
        gsPeriodoPago = "Semanal"
        'Periodo de pagos
        NumPeriodoPago = 1
        objPrepGeneral.VentaCredito.Periodo = 1
        objPrepGeneral.VentaCredito.EsPerPagSem = blnEsSemanal
        objPrepGeneral.VentaCredito.EsPerPagQui = blnEsQuincenal
        objPrepGeneral.VentaCredito.EsPerPagMen = blnEsMensual
        'objPrepGeneral.VentaCredito.CalculaTotalCredito
        ActualizaTotales
    End Sub
    
    
    
    
    
Private Sub Command1_Click()

Dim RESULTADO As Integer
Dim lstrCadena As String
Dim lErrNumber As Integer
Dim lPrioridad As Integer
Dim lstrError As String
Dim VerificarEstadoConexion As Boolean

Dim NoClienteUnico As String

Dim NgcioId As String
Dim NoTienda As String
NoTienda = "832"
VerificarEstadoConexion = True
Dim lobjFuncionalidad As New ADN2Funcionalidades.ctrlFuncionalidad
Dim m_interfazCredimax As Object
Dim m_interfazCredimax2 As Object
Dim conexion      As New ADODB.Connection

Dim PaisClienteUnico As String
Dim CanalClienteUnico As String
Dim SucursalClienteUnico As String
Dim FolioClienteUnico As String

Dim lineaCredito As Boolean
Dim VerificaCuentaEng As Boolean
'
'conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
'    Set m_interfazCredimax = CreateObject("CenICredimax.InterfazCredimax")
'    Set m_interfazCredimax2 = CreateObject("CENCredimax2.Credimax2")
'
'    lErrNumber = 620
'    lPrioridad = 1
'    lstrError = "Imposible verificar la cuenta englobadora"
'
'    RESULTADO = 1
'    'm_interfazCredimax.Negocio = 4
'    'VHSG
'  If VerificarEstadoConexion Then '
'  'm_interfazCredimax.Credimax conexion, NvoEnv.Usuario, NvoEnv.Password
'  m_interfazCredimax2.Credimax2 conexion, NvoEnv.Usuario, NvoEnv.Password  'NLFG Vtas multipa√≠s
'    End If
'
'    RESULTADO = m_interfazCredimax2.BuscarCuentaEnglobadora     'NLFG Vtas multipa√≠s
'    If 2 > 0 Then
'    'RESULTADO = m_interfazCredimax.BuscarCuentaEnglobadora8(Val(DatosCambaceo.Negocio), Val(DatosCambaceo.Tienda), Val(DatosCambaceo.ClienteId), Val(DatosCambaceo.DigitoVer))
'        'En esta petici√≤n se realiza un b√πsqueda local de la cuenta englobadora
'        'RESULTADO = m_interfazCredimax.BuscarCuentaEnglobadora1(Pais, VentaCredito.Cliente.NgcioID, VentaCredito.Cliente.NoTienda, VentaCredito.Cliente.CteID)
''    RESULTADO = m_interfazCredimax.BuscarCuentaEnglobadora5(VentaCredito.Cliente.NgcioId, VentaCredito.Cliente.NoTienda, VentaCredito.Cliente.CteID, VentaCredito.Cliente.DigitoVer)
''RESULTADO = m_interfazCredimax.BuscarCuentaEnglobadora5(1, 832, 1, 1)
'    End If
'
'   Select Case RESULTADO
'      Case 0
'       If m_interfazCredimax2.cuentaEnglobadora2.Folio > 0 Then
'      Debug.Print Format(m_interfazCredimax2.cuentaEnglobadora2.Pais, "0#")
'          '  Set m_interfazCredimax = m_interfazCredimax2.CuentaEnglobadora
'                ' ism  se corrigio formato de cadena para la cuenta englobadora
'               lstrCadena = Format(m_interfazCredimax2.cuentaEnglobadora2.Pais, "0#") & _
'                Format(m_interfazCredimax2.cuentaEnglobadora2.Canal, "0#") & _
'                Format(m_interfazCredimax2.cuentaEnglobadora2.Sucursal, "000#") & _
'                Format(m_interfazCredimax2.cuentaEnglobadora2.Folio, "#")
'            NoClienteUnico = lstrCadena
'            Debug.Print NoClienteUnico
'            PaisClienteUnico = m_interfazCredimax2.cuentaEnglobadora2.Pais
'           CanalClienteUnico = m_interfazCredimax2.cuentaEnglobadora2.Canal
'            SucursalClienteUnico = m_interfazCredimax2.cuentaEnglobadora2.Sucursal
'           FolioClienteUnico = m_interfazCredimax2.cuentaEnglobadora2.Folio
'            lineaCredito = True
'            VerificaCuentaEng = True
'            End If
'
'        Case 1, 2, 3, 4
'            lobjFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1087"), Informacion, Aceptar, "BuscaClienteForaneo"
'   End Select
'   Set m_interfazCredimax = Nothing
'

'/////////////////////////////////////////////////////////////////////////////////////////////////

            Dim parserBio2 As Object
            Dim objHTTP As Object
            Dim JSONRequestCotizadorTelefonia As String
            Dim URLServicioCotizadorTelefonia1 As String
            Dim jsonResponseString As String
             JSONRequestCotizadorTelefonia = "{""tienda"": {""idPais"": ""&fiidpaisVendedor&"",""idCanal"": ""&canalVendedor&"",""idSucursal"": ""&sucursalVendedor&""},""idModalidad"": ""TL"",""clienteUnico"": {""idPais"": 1,""idCanal"": 1,""idSucursal"": 2244,""folio"": 107147},""productos"": [{""sku"": 151515,""montoEnganche"": 50,""cantidad"": 1,""precio"": 2000,""descuentoEkt"": 100,""descuentoBaz"": 0,""idCategoria"": 1,""enganche"": true,""plan"": false}],""pedidosRenovacion"": [],""lineaCredito"": ""&lineaDeCreditoTel&""}"
             URLServicioCotizadorTelefonia1 = "http://10.51.251.163:8080/Spring-Controller/obtenerCotizacionTelefonia"
             Set objHTTP = CreateObject("MSXML2.ServerXMLHTTP")
            objHTTP.Open "POST", URLServicioCotizadorTelefonia1, False
            objHTTP.setRequestHeader "Content-type", "application/json"
             objHTTP.send (JSONRequestCotizadorTelefonia)
             jsonResponseString = objHTTP.responseText
             Debug.Print jsonResponseString
             Set parserBio2 = JSON.parse(Trim(jsonResponseString))

            Dim idTipoCliente As String
              idTipoCliente = parserBio2.Item("respuesta").Item("idTipoCliente")
              Debug.Print idTipoCliente
              
            Dim TipoCliente As String
             TipoCliente = parserBio2.Item("respuesta").Item("tipoCliente")
            Debug.Print TipoCliente
            
 Dim productosCollectionTelefonia As Collection
  Set productosCollectionTelefonia = New Collection
  Set productosCollectionTelefonia = parserBio2.Item("respuesta").Item("opciones").Item("periodicidades").Item(1).Item("ofertas").Item(1).Item("plazos")
  Debug.Print "Cuantos Registros Tengo" & productosCollectionTelefonia.Count
  Dim numeroDePlazos As Integer
  numeroDePlazos = parserBio2.Item("respuesta").Item("opciones").Item("periodicidades").Item(1).Item("ofertas").Item(1).Item("id")
  If numeroDePlazos <> 0 Then
  If productosCollectionTelefonia.Count > 0 Then
  
 Dim contador As Integer
 
 GridTablaPlazosTelefonia.TextMatrix(0, 0) = "Plazo"
  GridTablaPlazosTelefonia.TextMatrix(0, 1) = "Descuento$"
 GridTablaPlazosTelefonia.TextMatrix(0, 2) = "Abono$"
 GridTablaPlazosTelefonia.TextMatrix(0, 3) = "Ultimo$"
GridTablaPlazosTelefonia.TextMatrix(0, 4) = "PagoPuntual"
 
 For contador = 1 To productosCollectionTelefonia.Count
 Dim ItemPlazoObj As Object
 Set ItemPlazoObj = productosCollectionTelefonia.Item(i)
  Debug.Print "abonoPuntual " & ItemPlazoObj.Item("id")
 Debug.Print "abonoNormal " & ItemPlazoObj.Item("abonoNormal")
 Debug.Print "ultimoAbono " & ItemPlazoObj.Item("ultimoAbono")
 Debug.Print "abonoPuntual " & ItemPlazoObj.Item("abonoPuntual")
  
  GridTablaPlazosTelefonia.TextMatrix(contador, 0) = ItemPlazoObj.Item("id")
  GridTablaPlazosTelefonia.TextMatrix(contador, 1) = 0
 GridTablaPlazosTelefonia.TextMatrix(contador, 2) = ItemPlazoObj.Item("abonoNormal")
 GridTablaPlazosTelefonia.TextMatrix(contador, 3) = ItemPlazoObj.Item("ultimoAbono")
GridTablaPlazosTelefonia.TextMatrix(contador, 4) = ItemPlazoObj.Item("abonoPuntual")
             
            Next
            End If
            End If
            
            Dim idPeriodicidades As Object
            idPeriodicidades = parserBio2.Item("respuesta").Item("opciones").Item("periodicidades").Item("id")
            Debug.Print idPeriodicidades
            
            Dim idOferta As String
            idOferta = parserBio2.Item("respuesta").Item("opciones").Item("periodicidades").Item("ofertas").Item("id")

            
            Dim idPlazo As String

             Dim plazos1 As Object
             Set plazos1 = parserBio2.Item("respuesta").Item("opciones").Item("periodicidades").Item("ofertas").Item("plazos").Item("productos").Item("sku")
            Set plazos1 = parserBio2.Item("respuesta").Item("opciones").Item("periodicidades").Item("periodicidades").Item("ofertas").Item(1)
            Debug.Print plazos1.Count

             idPlazo = parserBio2.Item("respuesta").Item("opciones").Item("periodicidades").Item("ofertas").Item("plazos")(0).Item("abonoPuntual")
             Debug.Print idPlazo
             Debug.Print parserBio2.Item("respuesta").Item("opciones").Item("periodicidades").Item("ofertas").Item("plazos")(1).Item("id")
             Dim plazosCotizadorTelefonia As New Collection
            Set plazosCotizadorTelefonia = parserBio2.Item("respuesta").Item("opciones").Item("periodicidades").Item("ofertas").Item("plazos")(1).Item("id")
            Debug.Print "Cuantos Registros Tengo" & plazosCotizadorTelefonia.Count
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '  INVOCA SERVICIO DE CONSULTA DE obtenerDatosLCR '
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim idPaisTel As String
Dim idCanalTel As String
Dim idSucursalTel As String
Dim folioCUTel As String
Dim JSONRequestDatosLCR As String
Dim URLServicioDatosLCRTelefonia As String
'Dim RecomprasNuevo As Object
'Set RecomprasNuevo = CreateObject("ADN2ServRecompras.cSerRecompras")


idPaisTel = 1
idCanalTel = 1
idSucursalTel = 2244
folioCUTel = 107147
    ' Se realiza el armado del JSON
    JSONRequestDatosLCR = "{""idPais"":""" & (idPaisTel) & """,""idCanal"":""" & (idCanalTel) & """,""idSucursal"":""" & (idSucursalTel) & """,""folio"":""" & (folioCUTel) & """}"
    
    URLServicioDatosLCRTelefonia = "http://10.51.251.163:8080/Spring-Controller/obtenerDatosLCR"
    
    Debug.Print JSONRequestDatosLCR

    Dim StrLog As String
    Dim listStringProductos As String
    Dim parserBio As Object
    Dim jsonObject As Object
    Dim jsonStringProductos As String
    Dim codigoRespuesta200 As Boolean
    Dim intPosition As Integer
    Dim divData As Object
    Dim iterator As Integer
    Dim limiteDisponible As String
    'Dim productoObj As New ProductoTelefoniaLCR
    Dim col As New Collection
    Dim lobjDetalle As Object
    Dim limiteDisponiblevar As String
    Dim lobjdetvta As Object
    Dim datos(1 To 5, 1 To 4) As String
    Dim productoTelefonia As Object
    'Dim productosCollectionTelefonia As Collection
    Dim productoTelefoniaObj  As Object
    Dim Index As Integer
   ' Dim jsonArray As New ChilkatJsonArray
    Dim success As Long
    Dim capacidadPagoAutorizada As Double
    Dim capacidadPagoDisponible As Double
    Dim estatusCentral As Integer
    Dim estatusCredito As Integer
    Dim estatus As String
    Dim idPeriodicidad As Integer
    Dim periodicidad As String
    Dim idDiaPago As Integer
    Dim diaPago As String
    Dim idMotivoBloqueo As Integer
    Dim motivoBloqueo As String
    Dim idTiendaGestora As Integer
    Dim idCanalGestor As Integer
    'Dim lineaCredito As String
    Dim mensajeCliente As String
    Dim mensajeBackend As String
    Dim saldosInsolutos As Integer
    Dim clienteCotiza As Boolean
    Dim vigencia As String
    Dim lineaDeCreditoTel As String
    Dim codigoRespuestaServicio As String

    
        Set productoTelefoniaObj = CreateObject("ADN2ServRecompras.ProductoTelefoniaLCR")
        Set objHTTP = CreateObject("MSXML2.ServerXMLHTTP")
        objHTTP.Open "POST", URLServicioDatosLCRTelefonia, False
        objHTTP.setRequestHeader "Content-type", "application/json"
        objHTTP.send (JSONRequestDatosLCR)
         jsonResponseString = objHTTP.responseText
         Set parserBio = JSON.parse(Trim(jsonResponseString))
         Debug.Print jsonResponseString

        Dim mcolecciones As Collection
        Set mcolecciones = parserBio.Item("respuesta").Item("productos")

        capacidadPagoAutorizada = parserBio.Item("respuesta").Item("capacidadPagoAutorizada")
        capacidadPagoDisponible = parserBio.Item("respuesta").Item("capacidadPagoDisponible")
        estatusCentral = parserBio.Item("respuesta").Item("estatusCentral")
        estatusCredito = parserBio.Item("respuesta").Item("estatusCredito")
        estatus = parserBio.Item("respuesta").Item("estatus")
        idPeriodicidad = parserBio.Item("respuesta").Item("idPeriodicidad")
        periodicidad = parserBio.Item("respuesta").Item("periodicidad")
        idDiaPago = parserBio.Item("respuesta").Item("idDiaPago")
        diaPago = parserBio.Item("respuesta").Item("diaPago")
        idMotivoBloqueo = parserBio.Item("respuesta").Item("idMotivoBloqueo")
        
        If Not IsNull(Trim(parserBio.Item("respuesta").Item("motivoBloqueo"))) Then
        motivoBloqueo = parserBio.Item("respuesta").Item("motivoBloqueo")
        End If
        
        idTiendaGestora = parserBio.Item("respuesta").Item("idTiendaGestora")
        idCanalGestor = parserBio.Item("respuesta").Item("idCanalGestor")
        lineaDeCreditoTel = parserBio.Item("respuesta").Item("lineaDeCredito")
        
       If Not IsNull(Trim(parserBio.Item("respuesta").Item("mensajeCliente"))) Then
        mensajeCliente = parserBio.Item("respuesta").Item("mensajeCliente")
        End If
        
       If Not IsNull(Trim(parserBio.Item("respuesta").Item("mensajeBackend"))) Then
        mensajeBackend = parserBio.Item("respuesta").Item("mensajeBackend")
        End If
        
        saldosInsolutos = parserBio.Item("respuesta").Item("saldosInsolutos")
        clienteCotiza = parserBio.Item("respuesta").Item("clienteCotiza")
        vigencia = parserBio.Item("respuesta").Item("vigencia")
            
        If idMotivoBloqueo <> 0 Then
        MsgBox "La linea se encuentra Bloqueada"
        Exit Sub
        End If
            
            
    'INVOCA SERVICIO DE CONSULTA DE  COTIZADOR
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
      Dim fiidpaisVendedor As String
      Dim canalVendedor As String
      Dim sucursalVendedor As String
      'Dim JSONRequestCotizadorTelefonia As String
      Dim URLServicioCotizadorTelefonia As String
      Dim lstrSql As String
      
    Set lCN2 = New ADODB.Connection
    Set lRS2 = New ADODB.Recordset
    lCN2.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    lCN2.CursorLocation = adUseClient
    Set lRS2 = lCN2.Execute("SELECT fiidpais,fiidcanal,finotienda FROM CONTROL WITH(NOLOCK)")

    If lRS2.RecordCount > 0 Then
        fiidpaisVendedor = lRS2.Fields("fiidpais").Value
       canalVendedor = lRS2.Fields("fiIdCanal").Value
       sucursalVendedor = lRS2.Fields("finotienda").Value
    End If

   JSONRequestCotizadorTelefonia = "{""tienda"": {""idPais"": ""&fiidpaisVendedor&"",""idCanal"": ""&canalVendedor&"",""idSucursal"": ""&sucursalVendedor&""},""idModalidad"": ""TL"",""clienteUnico"": {""idPais"": 1,""idCanal"": 1,""idSucursal"": 2244,""folio"": 107147},""productos"": [{""sku"": 151515,""montoEnganche"": 50,""cantidad"": 1,""precio"": 2000,""descuentoEkt"": 100,""descuentoBaz"": 0,""idCategoria"": 1,""enganche"": true,""plan"": false}],""pedidosRenovacion"": [],""lineaCredito"": ""&lineaDeCreditoTel&""}"
    

    URLServicioCotizadorTelefonia = "http://10.51.251.163:8080/Spring-Controller/obtenerCotizacionTelefonia"
    

        Set objHTTP = CreateObject("MSXML2.ServerXMLHTTP")
        objHTTP.Open "POST", URLServicioDatosLCRTelefonia, False
        objHTTP.setRequestHeader "Content-type", "application/json"
        objHTTP.send (JSONRequestDatosLCR)
        jsonResponseString = objHTTP.responseText
        Set parserBio = JSON.parse(Trim(jsonResponseString))
        Debug.Print jsonResponseString
        Debug.Print parserBio.Item("respuesta").Item("mensajeCliente")
        
        If Not IsNull(Trim(parserBio.Item("respuesta").Item("mensajeCliente"))) Then
        mensajeCliente = parserBio.Item("respuesta").Item("mensajeCliente")
        End If
        Dim isCadenaLCRVencida As Boolean
        isCadenaLCRVencida = False

            Dim cadenaLineaCreditoNuevaGenerada As String
            Dim cadenaLineaLCRVencidaString As String
            cadenaLineaLCRVencidaString = "La vigencia de los datos de la Linea de credito a vencido, favor de consultar nuevamente la linea de cr√©dito"
            
            If mensajeCliente <> "" Then
            If mensajeCliente = cadenaLineaLCRVencidaString Then
           JSONRequestDatosLCR = "{""idPais"":""" & (PaisClienteUnico) & """,""idCanal"":""" & (CanalClienteUnico) & """,""idSucursal"":""" & (SucursalClienteUnico) & """,""folio"":""" & (FolioClienteUnico) & """}"
           URLServicioDatosLCRTelefonia = "http://10.51.251.163:8080/Spring-Controller/obtenerDatosLCR"
           Set objHTTP = CreateObject("MSXML2.ServerXMLHTTP")
           objHTTP.Open "POST", URLServicioDatosLCRTelefonia, False
           objHTTP.setRequestHeader "Content-type", "application/json"
           objHTTP.send (JSONRequestDatosLCR)
            jsonResponseString = objHTTP.responseText
            Set parserBio = JSON.parse(Trim(jsonResponseString))
            cadenaLineaCreditoNuevaGenerada = parserBio.Item("respuesta").Item("lineaDeCredito")
            Debug.Print jsonResponseString
            Debug.Print cadenaLineaCreditoNuevaGenerada
            isCadenaLCRVencida = True
            End If
            End If
            
            If isCadenaLCRVencida = False Then
             JSONRequestCotizadorTelefonia = "{""tienda"": {""idPais"": ""&fiidpaisVendedor&"",""idCanal"": ""&canalVendedor&"",""idSucursal"": ""&sucursalVendedor&""},""idModalidad"": ""TL"",""clienteUnico"": {""idPais"": 1,""idCanal"": 1,""idSucursal"": 2244,""folio"": 107147},""productos"": [{""sku"": 151515,""montoEnganche"": 50,""cantidad"": 1,""precio"": 2000,""descuentoEkt"": 100,""descuentoBaz"": 0,""idCategoria"": 1,""enganche"": true,""plan"": false}],""pedidosRenovacion"": [],""lineaCredito"": ""&lineaDeCreditoTel&""}"
             URLServicioCotizadorTelefonia = "http://10.51.251.163:8080/Spring-Controller/obtenerCotizacionTelefonia"
            Set objHTTP = CreateObject("MSXML2.ServerXMLHTTP")
            objHTTP.Open "POST", URLServicioDatosLCRTelefonia, False
            objHTTP.setRequestHeader "Content-type", "application/json"
             objHTTP.send (JSONRequestDatosLCR)
             jsonResponseString = objHTTP.responseText
             Set parserBio2 = JSON.parse(Trim(jsonResponseString))
            Debug.Print jsonResponseString
            
'           ' Dim plazosCotizadorTelefonia As Collection
'            Set plazosCotizadorTelefonia = parserBio2.item("respuesta").item("opciones").item("periodicidades")
'            Debug.Print "Cuantos Registros Tengo" & plazosCotizadorTelefonia.Count
'            Dim i As Integer
'            For i = 1 To plazosCotizadorTelefonia.Count
'            Dim ItemObj As Object
'            Set ItemObj = plazosCotizadorTelefonia.item(i)
'            Debug.Print "vigenciaProximoLimite " & ItemObj.item("vigenciaProximoLimite")
'            Debug.Print "limiteDisponible " & ItemObj.item("limiteDisponible")
'            Next
            End If
            
            
            
            'cargaTablaPlazosTelefonia
            
'             Debug.Print lineaDeCreditoTel
'             Dim listaProductosArray As Object
'             Set listaProductosArray = parserBio.Item("respuesta").Item("productos")
'            Set productosCollectionTelefonia = New Collection
'            Set productosCollectionTelefonia = parserBio.Item("respuesta").Item("productos")
'
'          Dim i As Integer
'           For i = 1 To productosCollectionTelefonia.Count
'          Dim ItemObj As Object
'          Set ItemObj = productosCollectionTelefonia.Item(i)
'          Debug.Print "vigenciaProximoLimite " & ItemObj.Item("vigenciaProximoLimite")
'        Debug.Print "limiteDisponible " & ItemObj.Item("limiteDisponible")
'         Next
       
'' Obtener el array de productos
'Dim productosArray As ChilkatJsonArray
'Set productosArray = JSONObj.ArrayOf("respuesta")
'If (JSONObj.LastMethodSuccess = 0) Then
'    Debug.Print "No se encontraron productos"
'End If


'     codigoRespuestaServicio = parserBio.Item("codigo")
'       intPosition = InStr(1, codigoRespuestaServicio, "200")
'   If intPosition <> 0 Then
'    codigoRespuesta200 = True
'        Debug.Print codigoRespuesta200
'   End If
'            If codigoRespuesta200 Then
'            codigoRespuesta200 = True
'            End If
'
    'RecomprasNuevo.obtenerDatosLCR JSONRequestDatosLCR, URLServicioDatosLCRTelefonia

End Sub

    Private Sub Form_Activate()
    Dim Comando As Variant
        lblProdExpress.Enabled = True ' Canal = 1f
        Comando = obtieneParametro(3)
        If Comando <> "" Then
            Select Case Comando
              Case 1
                lblLinExt_Click
              Case 2
                lblProdExpress_Click
              Case 3
                objFuncionalidad.EsPaqueteEA = True
                lblLinExt_Click
              Case 5
                bolRemate = True
                lblLinExt.Enabled = False
                lblCmbFisicoAE.Enabled = False
                txtCodigo_KeyDown 0, 0
            End Select
        End If
    End Sub
    
    
    Private Function obtieneParametro(ByVal pParam As Integer) As Variant
        Dim lstrComAux As String
        Dim lstrComando As String
        Dim lintParam As Integer
    
        lstrComAux = Command
        If lstrComAux <> "" Then
            For lintParam = 1 To pParam
                lstrComando = ""
                Do While lstrComAux <> ""
                    Select Case Left(lstrComAux, 1)
                        Case ","
                            lstrComAux = Mid(lstrComAux, 2)
                            Exit Do
                        Case Else
                            lstrComando = lstrComando & Left(lstrComAux, 1)
                            lstrComAux = Mid(lstrComAux, 2)
                    End Select
                Loop
            Next
        End If
        obtieneParametro = lstrComando
    End Function
    
    Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
        OnKeyGoSub KeyCode, Shift
    End Sub
    
    Private Sub Form_KeyPress(keyascii As Integer)
        keyascii = Asc(UCase(Chr(keyascii)))
    End Sub
    
    Private Sub Form_Load()
      Dim lngHwnd As Long
        Dim lngReturn As Long
        Dim lstrDescripcion As String
        
                '' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES------------------
        Dim lRS As New Recordset
        Dim lCN As New Connection
        Dim lstrSql As String
        Dim lstrConfigDecimales As String
        'ROl005-I
        Dim LstrBorraLog As String
        Dim LstrFechaBorraLog As String
        'ROl005-F
    
        '------------------
    'edma
    flag = 1
    Set PRecompras = CreateObject("Recompras.Validacion")
    Set traduc = CreateObject("TraduccPalabras.ClstraducPal")
    
    PRecompras.VentaSinEnganche = False
    viEnganche = 0
    'edma
        'Asegura que los controles √∫nicamente acepten caracteres num√©ricos
        lngHwnd = GetWindowLong(txtCodigo.hwnd, GWL_STYLE)
        lngReturn = SetWindowLong(txtCodigo.hwnd, GWL_STYLE, lngHwnd Or ES_NUMBER)
        'FRPS 17-02-2006 se hace la validacion solamente a
        'partir de que si acepta o no decimales, aqu√≠ anteriormente se encontraba
        ' una validaci√≥n en base al esquema pero no se puede llegar a la generalizaci√≥n
        ' ya que tenia c√≥digo duro
        
        'VHSG Agregar aqui INI's
    '    If Not PaisTraduc = 11 Then
            traduc.IdLenguaje = 1
    '    Else
    '        traduc.IdLenguaje = 2
    '    End If
        
        'ROL005-I
        LstrFechaBorraLog = Format(DateValue(Date - 150), "ddmmyyyy")
        LstrBorraLog = "C:\Windows\Temp\CEPresupuesto_" & LstrFechaBorraLog & ".log"
        Call BorraLog(LstrBorraLog)
        'ROL005-F
        'ROL008-I
        blnEsProm303030 = False
        'ROl008-F
        'ROLVERDE-I
        blnEsCVerde128 = False
        'ROLVERDE-F
        'ROLMOTOELITE-I
        blnEsMotoElite154 = False
        'ROLMOTOELITE-F
        'MsgBox "Se conecta a Decimales"
        
        If Not PermitirDecimales Then
            lngHwnd = GetWindowLong(txtValorPartidaAux.hwnd, GWL_STYLE)
            lngReturn = SetWindowLong(txtValorPartidaAux.hwnd, GWL_STYLE, lngHwnd Or ES_NUMBER)
        ''FRPS 17-02-2006 Estas dos l√≠neas se agregan dentro del if ya que no permitian
        '' poner decimales en el enganche y en pa√≠ses que aceptan decimales si se llega a requerir
            lngHwnd = GetWindowLong(txtEnganche.hwnd, GWL_STYLE)
            lngReturn = SetWindowLong(txtEnganche.hwnd, GWL_STYLE, lngHwnd Or ES_NUMBER)
            
            lngHwnd = GetWindowLong(txtEngancheRopa.hwnd, GWL_STYLE)
            lngReturn = SetWindowLong(txtEngancheRopa.hwnd, GWL_STYLE, lngHwnd Or ES_NUMBER)
            lngHwnd = GetWindowLong(txtPorcEngancheRopa.hwnd, GWL_STYLE)
            lngReturn = SetWindowLong(txtPorcEngancheRopa.hwnd, GWL_STYLE, lngHwnd Or ES_NUMBER)
        End If
        
        'MsgBox "Se conecta a Decimales sale"
        
        lngHwnd = GetWindowLong(txtCliente.hwnd, GWL_STYLE)
        lngReturn = SetWindowLong(txtCliente.hwnd, GWL_STYLE, lngHwnd Or ES_NUMBER)
        gbolActivaEnganche = True
        Timer1.Interval = 3500
        gbolEngAut = True
        'VHSG 13/09/2013
        'Call objPrepGeneral.loCtrlPromos.ObtenPromocionesVigentes(1)
        InicializaControles
        'objPrepGeneral.loCtrlPromos.PromocionPrincipal "", lstrDescripcion
        lblTip.Caption = lstrDescripcion
        gbolCambiaRenglon = False
        
        'NLFG No mostrar plan de pagos quincenales  Enero 2012
            ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES-----------------
    '    Set lCN = New ADODB.Connection
    '    lCN.CursorLocation = adUseClient
    '    lCN.Open "DSN=" & DSN & ";UId=" & Usuario & ";Pwd=" & password
    '
    '     lstrSql = "select fcPrmVal from parametro where fiPrmId = 489"
    '    Set lRS = lCN.Execute(lstrSql)
    '
    '    If lRS.EOF = True And lRS.BOF = True Then
    '        MUESTRAFORMASDEPAGO1530 = 0
    '    Else
    '        MUESTRAFORMASDEPAGO1530 = CInt(lRS!fcPrmVal)
    '    End If
        
        'VHSG 11/07/2013 Traducciones
        'lblCaracteristicas.Caption = traduc.ConsultaLeyendasporApp(Rdn.IdAplicacion & ",1")
        Me.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1080")
        
        lblCaracteristicas.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1001")
        lblPromociones.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1002")
        lblSimilares.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1003")
        lblComplementos.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1004")
        lblInventarioOT.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1005")
        lblGrabar.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1006")
        lblImprimir.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1007")
        lblSalir.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1008")
        
        Label11.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1009")
        lblCatClientes.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1010")
        
        Label1.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1011")
        Label2.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1012")
        Label15.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1013")
        
        lblHistorial.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1048")
        
        lblCodigo.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1049") 'lblCodigo menu 2
        
        'ROLREM-I
        lblCatalogo.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1050")
        
         '''''''''''''''''validar nuevo parametro  y poner en visible false ''''''''''''''' Cambio Abarrotes
         
        Call MostrarOpcionAbarrotes
        lblCambaceo.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1051") 'Parametrizar cambaceo
         'lblCambaceo.Visible = False ' Ejemplo de deshabilitar labels para poner dentro de condicion de parametro
        
                    
    'ROLREM-F
        lblLinExt.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1052") 'Parametrizar Linea extendida
        lblProdExpress.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1053") 'Parametrizar producto expres
        lblTV.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1054") 'Parametrizar tv de paga
    'ROLREM-I
        lblCmbFisicoAE.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1055") 'Parametrizar cambio Fisico
    'ROLREM-F
        lblCanje.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1056") 'Parametrizar vaje de vale
        lblTDC.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1057") 'Parametrizar promocion TDC
        lblATM.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1058") 'Parametrizar ATM control
        
        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' fin ambio Abarrotes
        
        lbl10pc.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1061")
        lbl5pc.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1062")
        lbl1aSem.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1063")
        lblCredPlus.Caption = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1064")
        'ROL001-I
        FrameCredITK.Visible = False
        'ROL001_F
        
        'ROL001-I
        If PaisTraduc = 1 Then
           If ValidarPagosQuincenalesMenusales Then
              chkSemanal.Value = True
              chkSemanal.Visible = True
              chkQuincenal.Value = False
              chkQuincenal.Visible = True
              chkMensual.Value = False
              chkMensual.Visible = True
           Else
              chkSemanal.Value = True
              chkSemanal.Visible = True
              chkQuincenal.Value = False
              chkQuincenal.Visible = False
              chkMensual.Value = False
              chkMensual.Visible = False
           End If
        Else
           chkSemanal.Value = True
           chkSemanal.Visible = True
           chkQuincenal.Value = False
           chkQuincenal.Visible = False
           chkMensual.Value = False
           chkMensual.Visible = False
        End If
        'ROL001-F
        
        MUESTRAFORMASDEPAGO1530 = 0
        '/NLFG
            
        '----------------
        
        'ROLREQ88710-I Componentes a no mostrar de seguros
        bolSegMotoAgrXBoton = False
        bolEsRecalculoVidamax = False
        bolSegVidamaxAgrGraba = False
        lbolEsmoto = False
        
        bolEsProdConsumo = False
        bolEsProdMotos = False
        bolSegVidamaxAgr = False
        bolSegMotoAgr = False
        bolEsProdRescate = False
        bolSegVidamaxAgrGraba = False
        'Frm seguros moto
        FrCtrlSeguroMotos.Visible = False
        btnSeguroMotos.Visible = False
        btnEliminarSeguroMotos.Visible = False
        'Frm vidamax
        FrCtrlSeguroVidamax.Visible = False
        btnAgregaVidamax.Visible = False
        btnEliminarSeguroVida.Visible = False
        'Producto vidamax agregado
        FrameSegurosProd.Enabled = False
        FrameSegurosProd.Visible = False
        'Abonos con vidamax seleccionado
        FrameSegurosAbonos.Enabled = False
        FrameSegurosAbonos.Visible = False
        'ROLREQ88710-F Componentes a no mostrar de seguros
        
        
        ' ism 23/04/2005
        'MsgBox "Se conecta a Terminos"
        lstrADNSignoMoneda = lotermino.obtenTermino(ADNSignoMoneda, Descsingular)
        'MsgBox "Se conecta a Decimales"
        
        If PermitirDecimales Then
            'MsgBox "Se conecta a Decimales 2"
            lstrConfigDecimales = GetSetting("Elektra", "Decimales", "Divisa1", "0")
            If UBound(Split(lstrConfigDecimales, ",")) > 0 Then
                gintNumDecimales = Val(Split(lstrConfigDecimales, ",")(2))
            End If
        End If
        
        'MsgBox "Se conecta a Decimales 3"
        ocultaFormTelefonia
    End Sub
    
    Private Sub Form_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'AjustaColorFuente
        DesSeleccionaShp True
        DesSeleccioanrOpciones
        DesactivaMenus
        Me.MousePointer = vbDefault
    End Sub
    
    Private Sub Frame4_DragDrop(Source As Control, X As Single, Y As Single)
    
    End Sub
    
Private Sub FrameTelefonia_DragDrop(Source As Control, X As Single, Y As Single)

End Sub

    Private Sub frmApartado_Click()
        lblApartado_Click
    End Sub
    
    Private Sub frmApartado_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        Form_MouseMove 0, 0, 0, 0
        lblApartado_MouseMove 0, 0, 0, 0
    End Sub
    
    Private Sub frmContado_Click()
        lblContado_Click
    End Sub
    
    Private Sub frmContado_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        Form_MouseMove 0, 0, 0, 0
        lblContado_MouseMove 0, 0, 0, 0
    End Sub
    
    Private Sub frmCredito_Click()
        lblCredito_Click
    End Sub
    
    Private Sub frmCredito_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        ResaltaShpVenta shp10pc, True
    End Sub
    
    Private Sub frmCredRopa_Click()
        lblCredRopa_Click
    End Sub
    
    Private Sub frmMenuCliente_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'AjustaColorFuente
    End Sub
    
    Private Sub frmMenuPrincipal_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'Form_MouseMove 1, 1, 1, 1
    End Sub
    
    Private Sub grdCredito_Click()
    On Error GoTo ErrVB
    
    Dim liRow As Integer
    Dim liCol As Integer
    rowPlazo = grdCredito.Row ' ism 1530 row id que identifica el plazo
    
    If objPrepGeneral.VentaCredito.ColDetalleVenta Is Nothing Then Exit Sub
    
    If objPrepGeneral.VentaCredito.ColDetalleVenta.Count <= 0 Then Exit Sub
        
    objPrepGeneral.VentaCredito.TipoVenta = 2
        
    If grdCredito.RowSel > 0 Then
       liRow = grdCredito.Row
       If liRow <> gintRenglonC Then
          Selecciona gintRenglonC, False, grdCredito
          Selecciona liRow, True, grdCredito
          gintRenglonC = liRow
       End If
       
       gbolActivaEnganche = False
       If Not blnCredito Then lblCredito_Click
       
       gbolActivaEnganche = True
       grdCredito.Row = grdCredito.RowSel
       grdCredito.col = 0
       
       If grdCredito.Clip <> "" Then
          'ROL001-I
          objPrepGeneral.VentaCredito.AsignaDatosGrabar objPrepGeneral.VentaCredito.TipoVenta, objPrepGeneral.VentaCredito.TipoCredito, grdCredito.Clip
          'ROL001-F
          'ROLREM-I
          If blnEsATM Then 'ECG.
             objPrepGeneral.VentaCredito.EsATM = blnEsATM
             objPrepGeneral.VentaCredito.VentaATM = goVentaATM
          End If
          'ROLREM-F
          'VHSG 21/02/2012
          If VerificarDepto(STR(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID)) Then
             VerificarControl
             If VerificarPais Then
                If objPrepGeneral.VentaCredito.ColDetalleVenta.Count > 1 Then
                   'ROLREQ88710-I quita enganche de seguro
                   If bolSegMotoAgr = True Then
                      txtEnganche = objPrepGeneral.VentaCredito.ColDetalleVenta(1).enganchexpartida
                      txtPorcEnganche = Round((txtEnganche / (objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdPrecio)) * 100, 2)
                   Else
                      txtEnganche = objPrepGeneral.VentaCredito.ColDetalleVenta(1).enganchexpartida + objPrepGeneral.VentaCredito.ColDetalleVenta(2).enganchexpartida
                      txtPorcEnganche = Round((txtEnganche / (objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdPrecio + objPrepGeneral.VentaCredito.ColDetalleVenta(2).producto.ProdPrecio)) * 100, 2)
                   End If
                   'ROLREQ88710-F quita enganche de seguro
                   grdPartidas.Row = 2
                   grdPartidas.col = 2
                   '88710
                   If Not frmPrepa.CtrlSeguroMotos.SkuSeguro = objPrepGeneral.ProductoCredito.ProdID And frmPrepa.FrCtrlSeguroMotos.Visible = True Then
                      grdPartidas.Clip = ObtenerPrima(objPrepGeneral.VentaCredito.ColDetalleVenta(2).producto.colTazas, grdCredito.Clip)
                      grdPartidas.col = 7
                      grdPartidas.Clip = ObtenerPrima(objPrepGeneral.VentaCredito.ColDetalleVenta(2).producto.colTazas, grdCredito.Clip)
                   End If
                End If
             End If
          End If
          'ROL001-I
             
          LbSegAbo1 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA1, "######.00"), Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA1, "######"))
          LbSegAbo2 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA2, "######.00"), Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA2, "######"))
          LbSegAbo3 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA3, "######.00"), Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA3, "######"))
                
          LbAboITKSeg1 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA1 + objPrepGeneral.VentaCredito.abono, "######.00"), Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA1 + objPrepGeneral.VentaCredito.abono, "######"))
          LbAboITKSeg2 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA2 + objPrepGeneral.VentaCredito.abono, "######.00"), Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA2 + objPrepGeneral.VentaCredito.abono, "######"))
          LbAboITKSeg3 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA3 + objPrepGeneral.VentaCredito.abono, "######.00"), Format(objPrepGeneral.VentaCredito.AboSegCreditalikaA3 + objPrepGeneral.VentaCredito.abono, "######"))
                
          LbSegPun1 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA1, "######.00"), Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA1, "######"))
          LbSegPun2 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA2, "######.00"), Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA2, "######"))
          LbSegPun3 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA3, "######.00"), Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA3, "######"))
    
          LbPunITKSeg1 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA1 + objPrepGeneral.VentaCredito.AbonoMas1, "######.00"), Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA1 + objPrepGeneral.VentaCredito.AbonoMas1, "######"))
          LbPunITKSeg2 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA2 + objPrepGeneral.VentaCredito.AbonoMas1, "######.00"), Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA2 + objPrepGeneral.VentaCredito.AbonoMas1, "######"))
          LbPunITKSeg3 = "$" & IIf(PermitirDecimales, Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA3 + objPrepGeneral.VentaCredito.AbonoMas1, "######.00"), Format(objPrepGeneral.VentaCredito.PunSegCreditalikaA3 + objPrepGeneral.VentaCredito.AbonoMas1, "######"))
          'ROl001-I
          If (objPrepGeneral.VentaCredito.Cliente.ClienteV Or objPrepGeneral.VentaCredito.Cliente.ClienteAAA) And objPrepGeneral.VentaCredito.Plazo = 154 And objPrepGeneral.VentaCredito.EsCreditalika Then
             FrameCredITK.Visible = True
          Else
             FrameCredITK.Visible = False
          End If
             
          MuestraResumen
       End If
    End If
       
    'ROLREQ88710-I
    If (bolSegVidamaxAgr = True And bolSegVidamaxAgrGraba = False) Or (PlazoConSeguro > 128 And bolSegVidamaxAgrGraba = False) Or (CtrlSeguroVidamax.ExisteCombo And bolSegVidamaxAgrGraba = False And bolSegVidamaxAgr = False) Then
       ValidaOfertaSeguros
    End If
    'ROLREQ88710-F
        
    'VHSG 08/10/2013 asignar valor puntual
    'VHSG 09/11/2013 Se cambia gintRenglonC por Me.grdCredito.RowSel
    PRecompras.AbonoPuntual = Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 4))
    grdCredito.ColSel = grdCredito.Cols - 1
        
    lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1032") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
    Exit Sub
    
ErrVB:
        If Err.Number - vbObjectError = 1019 Then Resume Next
    End Sub
    
    'ROLREQ88710-I Validaciones de seguros al cambiar plazo de grid
    Public Function ValidaOfertaSeguros()
    Dim esConsumo As Boolean
    Dim Venta As Integer
    Dim PlazoSelActual As Integer
             
    PlazoSelActual = Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 0))
    
    If PlazoConSeguro <> PlazoSelActual Then
       bolEsRecalculoVidamax = True
       btnEliminarSeguroVida_Click
       'bolPlazoConSeguroAunActivo = False
    Else
       'bolPlazoConSeguroAunActivo = True
    End If
    
    
    
    '   For Venta = 1 To objPrepGeneral.VentaCredito.ColDetalleVenta.Count
    '       If objPrepGeneral.VentaCredito.Plazo > 128 Then
    '          FrCtrlSeguroVidamax.Visible = True
    '          LbCodigoSegVida.Item(0).Caption = ""
    '          LbDescSegVida.Item(0).Caption = ""
    '          LbPrecioSegVida.Item(0).Caption = ""
    '          If bolSegMotoAgr = False Then
    '             FrameSegurosProd.Visible = False
    '             LbPlazoSeguro.Item(0).Caption = False
    '             LbAbonoConSeg.Item(0).Caption = False
    '             LbUltAbonoConSeg.Item(0).Caption = False
    '             LbAbonoPunConSeg.Item(0).Caption = False
    '             FrameSegurosAbonos.Visible = False
    '          End If
    '
    '          bolSegVidamaxAgr = False
    '          SkuSeguro = 0
    '       Else
    '          dblSegVidaPrecio = frmPrepa.CtrlSeguroVidamax.Precio
    '          dblSegVidaSobrePrecio = frmPrepa.CtrlSeguroVidamax.Sobreprecio
    '          SkuSeguroVida = frmPrepa.CtrlSeguroVidamax.SkuSeguro
    ''          objPrepGeneral.VentaCredito.ColDetalleVenta(Venta).producto.ProdPrecio = frmPrepa.CtrlSeguroVidamax.Precio
    ''          objPrepGeneral.VentaCredito.ColDetalleVenta(Venta).producto.Sobreprecio = frmPrepa.CtrlSeguroVidamax.Sobreprecio
    '
    '       End If
    '   Next
    
             
    '
    '         For Venta = 1 To objPrepGeneral.VentaCredito.ColDetalleVenta.Count
    '            If Not VerificarDepto(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID) Then
    '               esConsumo = True
    '            End If
    '         Next
             'ROLREQ88710-F Elimina seguro vidamax si cambia de plazo
             
             'ROLREQ88710-I No mostrar seguro si es producto de rescate
    '         If esConsumo = True And objPrepGeneral.VentaCredito.Cliente.Folio <> 0 And objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp <> 0 And adnProductoResPuente.BProducRec = False And objPrepGeneral.VentaCredito.Plazo <= 128 Then
    '            FrCtrlSeguroVidamax.Visible = True
    '            FrCtrlSeguroVidamax.Enabled = True
    '            CtrlSeguroVidamax.Usuario = NvoEnv.Usuario
    '            CtrlSeguroVidamax.Password = NvoEnv.Password
    '            CtrlSeguroVidamax.EstacionTrabajo = NvoEnv.ObtenerEstacionTrabajoFisica
    '            CtrlSeguroVidamax.Periodo = objPrepGeneral.VentaCredito.Periodo
    '            CtrlSeguroVidamax.Plazo = objPrepGeneral.VentaCredito.Plazo
    '            CtrlSeguroVidamax.ProduictoID = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID
    '            CtrlSeguroVidamax.CapacidadPago = objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp
    '            CtrlSeguroVidamax.PaisCU = objPrepGeneral.VentaCredito.Cliente.Pais
    '            CtrlSeguroVidamax.CanalCU = objPrepGeneral.VentaCredito.Cliente.Canal
    '            CtrlSeguroVidamax.SucursalCU = objPrepGeneral.VentaCredito.Cliente.SucursalOrigen
    '            CtrlSeguroVidamax.fiFolioCU = objPrepGeneral.VentaCredito.Cliente.Folio
    '            btnAgregaVidamax.Visible = True
    '            CtrlSeguroVidamax.DibujaCombo
    '         Else
    '            FrCtrlSeguroVidamax.Visible = False
    '            FrCtrlSeguroVidamax.Enabled = False
    '            btnAgregaVidamax.Visible = False
    '         End If
             'ROLREQ88710-F No mostrar seguro si es producto de rescate
    Exit Function
ErrVB:
        If Err.Number - vbObjectError = 1019 Then Resume Next
    
    End Function
    'ROLREQ88710-F No mostrar seguro si es producto de rescate
    
    
    'VHSG 21/02/2012
    Public Function ObtenerPrima(ByVal pcolTasas As Object, pintPlazo As Integer) As Double
        Dim lintContPartidas As Integer
        On Error GoTo ErrVB
        
        If Not pcolTasas Is Nothing Then
            For lintContPartidas = 1 To pcolTasas.Count
                If pintPlazo = pcolTasas(lintContPartidas).Plazo Then
                    ObtenerPrima = pcolTasas(lintContPartidas).PrecioUnitario
                End If
            Next
        End If
        
        Exit Function
ErrVB:
        objFuncionalidad.MuestraMensaje Err.Number & vbCrLf & Err.Description & vbCrLf & Err.Source, Informacion, Aceptar, Me.Caption
    End Function
    
    'VHSG 21/02/2012
    Public Function ObtenerIOF(ByVal pcolTasas As Object, pintPlazo As Integer) As Double
        Dim lintContPartidas As Integer
        On Error GoTo ErrVB
        
        If Not pcolTasas Is Nothing Then
            For lintContPartidas = 1 To pcolTasas.Count
                If pintPlazo = pcolTasas(lintContPartidas).Plazo Then
                    ObtenerIOF = pcolTasas(lintContPartidas).PrecioUnitario
                End If
            Next
        End If
        
        Exit Function
ErrVB:
        objFuncionalidad.MuestraMensaje Err.Number & vbCrLf & Err.Description & vbCrLf & Err.Source, Informacion, Aceptar, Me.Caption
    End Function
    
    Private Sub grdCredito_DblClick()
    'ABBR ERV Credito Inmediato
    'If bolCredInm And Not bolCredInmSKU Then
    
    'ABBR Credito Inmediato Motos. Abril/2015
        'ROLGUAINM-I
        VerificarControl
        
    '    If lintPais <> 2 Then
    '       If bolCredInm Then
    ''         Me.txtEnganche.Locked = True
    '          Me.txtPorcEnganche.Locked = True
    '
    ''         Me.txtEnganche.Enabled = False
    '          Me.txtPorcEnganche.Enabled = False
    '       End If
    '    End If
        'ROLGUAINM-F
        
        Dim LCLIENTE As Long
        frmMenuCliente.Visible = True
        txtCliente.SetFocus
    End Sub
    
    Private Sub grdCredito_EnterCell()
    'ABBR ERV Credito Inmediato
    'If bolCredInm And Not bolCredInmSKU Then
    
    'ABBR Credito Inmediato Motos. Abril/2015
    'If bolCredInm Then
    '    'Me.txtEnganche.Locked = True
    '    Me.txtPorcEnganche.Locked = True
    '
    '    'Me.txtEnganche.Enabled = False
    '    Me.txtPorcEnganche.Enabled = False
    'End If
    
    If gbolCambiaRenglon = False Then
        If grdCredito.Row <> gintRenglonC Then
          grdCredito_Click
        End If
    End If
    End Sub
    
    Private Sub grdCredito_GotFocus()
        
        AjustarFrames 2, objPrepGeneral.VentaCredito.TipoCredito
        'ActualizaTotales
        grdCredito.col = 0
        grdCredito.RowSel = grdCredito.Row
        grdCredito.ColSel = grdCredito.Cols - 1
        lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1032") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
    End Sub
    Private Sub AsciendeRenglon()
        If grdCredito.Row > 1 Then
            grdCredito.Row = grdCredito.Row - 1
        Else
            grdCredito.Row = grdCredito.rows - 1
        End If
    End Sub
    Private Sub DesciendeRenglon()
        If grdCredito.Row = grdCredito.rows - 1 Then
            grdCredito.Row = 1
        Else
            grdCredito.Row = grdCredito.Row + 1
        End If
    End Sub
    Private Sub grdCredito_KeyDown(KeyCode As Integer, Shift As Integer)
            
        Select Case KeyCode
            Case vbKeyReturn
            grdCredito_Click
            grdCredito_DblClick
        Case vbKeyUp
            AsciendeRenglon
            
        Case vbKeyDown
            DesciendeRenglon
        End Select
    End Sub
    
    Private Sub AyudagrdPartidas(pColumna As Integer)
        If pColumna = 0 Then
            lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1035") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1038") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
        ElseIf pColumna = 3 Then
            lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1036") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1038") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
        ElseIf pColumna = 6 Then
            lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1037") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1038") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
        End If
    End Sub
    
    Private Sub grdCredito_LostFocus()
        If grdCredito.Row > 0 Then
            grdCredito.col = 3
        End If
    End Sub
    
    Private Sub Selecciona(pintRow As Integer, pBolSelecionado As Boolean, grid As Object)
      Dim liCont As Integer
      If pintRow > 0 Then
        gbolCambiaRenglon = True
            'FRPS 26/10/2012 Arreglamos la seleccion de filas
            If grid.rows > pintRow Then
                grid.Row = pintRow
            Else
                grid.Row = grid.rows - 1
            End If
        
             For liCont = 0 To grid.Cols - 1
                grid.col = liCont
                 If pBolSelecionado Then
                    grid.CellBackColor = &HFAF0E2
                    grid.CellFontBold = True
                 Else
                   If grid.CellFontBold Then
                      grid.CellFontBold = False
                      grid.CellBackColor = &HFFFFFF
                      'grdCredito.CellBackColor = &HF8E6DE
                   Else
                    grid.CellBackColor = &HFFFFFF
                   End If
                 End If
            Next
        'End If
        gbolCambiaRenglon = False
      End If
    End Sub
    
    Private Sub ManejaColumnas3y6()
        
        If grdPartidas.col = 6 Then
            txtValorPartidaAux.MaxLength = 9
            'ROLREM-I
            'If Trim(objPrepGeneral.VentaCredito.CanalExterno) = "S" Then
            'ROLREM-F
                If IsNumeric(grdPartidas.Clip) Then
                    If grdPartidas.Clip > 0 Then
                        objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1144"), Informacion, Aceptar, Me.Caption
                        'MsgBox "El descuento especial solamente puede asignarse una vez", vbInformation, Me.Caption
                        grdPartidas.col = 3
                    End If
                End If
            'ROLREM-I
    '        Else
    '            'no se debe modificar el descuento especial cuando la cantidad de art√≠culos sea diferente de 1
    '            If grdPartidas.TextMatrix(grdPartidas.Row, 3) <> 1 Then
    '                objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1148"), Informacion, Aceptar, Me.Caption
    '                grdPartidas.Col = 3
    '                'MsgBox "La cantidad debe ser 1 para poder aplicar un descuento especial", vbInformation, Me.Caption
    '            ElseIf IsNumeric(grdPartidas.Clip) Then
    '                If grdPartidas.Clip > 0 Then
    '                    objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1144"), Informacion, Aceptar, Me.Caption
    '                    'MsgBox "El descuento especial solamente puede asignarse una vez", vbInformation, Me.Caption
    '                    grdPartidas.Col = 3
    '                End If
    '            End If
    '        End If
            'ROLREM-F
        Else
            txtValorPartidaAux.MaxLength = 7
        End If
                        
        If grdPartidas.ColSel <> grdPartidas.col Then
            grdPartidas.ColSel = grdPartidas.col
        End If
        If grdPartidas.RowSel <> grdPartidas.Row Then
            grdPartidas.RowSel = grdPartidas.Row
        End If
        
        txtValorPartidaAux = grdPartidas.Clip
        If grdPartidas.Row > 0 Then
            If grdPartidas.RowIsVisible(grdPartidas.Row) And txtValorPartidaAux.Enabled Then
                txtValorPartidaAux.Visible = True
                txtValorPartidaAux.SetFocus
                txtValorPartidaAux.Width = grdPartidas.CellWidth
                txtValorPartidaAux.Height = grdPartidas.CellHeight
                txtValorPartidaAux.Top = grdPartidas.CellTop
                txtValorPartidaAux.Left = grdPartidas.CellLeft
            End If
        End If
        
    End Sub
    
    Private Sub grdCredito_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    ResaltaShpVenta shp10pc, True
    End Sub
    
    Private Sub grdCreditoRopa_Click()
        gobjSoftGoods.PAbonoSoftGOODS = CDbl(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 2))
        gobjSoftGoods.UAbonoSoftGOODS = CDbl(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 4))
        gobjSoftGoods.PAbonoSoftGOODSPtual = CDbl(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 3))
        gobjSoftGoods.PlazoSoftGoods = CInt(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 0))
    
        MuestraResumen
        lblCredRopa_Click
    End Sub
    
    Private Sub grdCreditoRopa_DblClick()
        gobjSoftGoods.PAbonoSoftGOODS = CDbl(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 2))
        gobjSoftGoods.UAbonoSoftGOODS = CDbl(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 4))
        gobjSoftGoods.PAbonoSoftGOODSPtual = CDbl(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 3))
        gobjSoftGoods.PlazoSoftGoods = CInt(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 0))
        MuestraResumen
    grdCredito_DblClick
    End Sub
    
    Private Sub grdPartidas_EnterCell()
    Dim liRow As Integer
    Dim liCol As Integer
    
    If gbolCambiaRenglon = False Then
        If grdPartidas.RowHeight(grdPartidas.Row) = 0 Then Exit Sub
        liRow = grdPartidas.Row
        gintColumna = grdPartidas.col
        If liRow <> gintRenglon Then
           Selecciona gintRenglon, False, grdPartidas
           Selecciona liRow, True, grdPartidas
        End If
        gintRenglon = liRow
        grdPartidas.col = gintColumna
    
        'Si el grid tiene partidas se realizan las operaciones
        If grdPartidas.Row <> 0 Then
            
            'bolSituar es una bandera, cuando no est√° activa permite que el txt se sit√∫e en la parte del grid correspondiente a la celda seleccionada
            If Not bolSituar Then
                
                AyudagrdPartidas grdPartidas.col
                
                'Solamente se muestra el txt cuando se sit√∫a en la columna 3 o 6
                If grdPartidas.col = 3 Or (grdPartidas.col = 2 And (Val(grdPartidas.TextMatrix(grdPartidas.Row, 0)) = 888888) Or Val(grdPartidas.TextMatrix(grdPartidas.Row, 0)) = 777777) Then
                
                    ManejaColumnas3y6
                    If gbolSaleTxt = False Then gbolEntragrid = True
                    gbolSaleTxt = False
                ElseIf grdPartidas.col = 0 Then
                    grdPartidas.CellBackColor = &HEED2C1
                    txtValorPartidaAux.Visible = False
                End If
                ActivaMenuPrincipal
            End If
        End If
    End If
    End Sub
    
    Private Sub grdPartidas_GotFocus()
    
    grdPartidas_EnterCell
    End Sub
    
    Private Sub grdPartidas_KeyDown(KeyCode As Integer, Shift As Integer)
        Select Case KeyCode
            Case vbKeyReturn, vbKeyDelete
                txtValorPartidaAux_KeyDown KeyCode, Shift
        End Select
    End Sub
    
    Private Sub grdPartidas_LeaveCell()
        If grdPartidas.col = 0 Then
            If Not grdPartidas.CellBackColor = &HFFFFFF And grdPartidas.Row > 0 Then
                grdPartidas.CellBackColor = &HFAF0E2
            End If
        End If
    End Sub
    
    Private Sub grdPartidas_LostFocus()
        'If grdPartidas.Row > 0 Then
            'grdPartidas.CellBackColor = vbWhite
        'End If
        DesactivaMenuPrincipal
    End Sub
    
    
    Private Sub grdPartidas_Scroll()
        If txtValorPartidaAux.Visible Then
            If grdPartidas.Row < 4 And grdPartidas.RowIsVisible(grdPartidas.Row) Then
                grdPartidas_EnterCell
            ElseIf Not grdPartidas.RowIsVisible(grdPartidas.Row) Then
                txtValorPartidaAux.Visible = False
                Exit Sub
            End If
            txtValorPartidaAux.Visible = grdPartidas.Row < 4
        End If
    End Sub
    


    Private Sub Img10pc_Click()
    lbl10pc_Click
    End Sub
    
    Private Sub Img10pc_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
     ResaltaShpVenta shp10pc
    End Sub
    
    
    
    Private Sub Img1aSem_Click()
        lbl1aSem_Click
    End Sub
    
    Private Sub Img1aSem_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    ResaltaShpVenta shp1aSem
    End Sub
    
    Private Sub Img5pc_Click()
    lbl5pc_Click
    End Sub
    
    Private Sub Img5pc_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
     ResaltaShpVenta shp5pc
    End Sub
    
    Private Sub imgBarra_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    '    If Index = 0 Then
    '        frmMenuPrincipal_MouseMove 0, 0, 0, 0
    '    Else
    '        frmMenuCliente_MouseMove 0, 0, 0, 0
    '    End If
         DesSeleccioanrOpciones
    End Sub
    Private Sub DesSeleccioanrOpciones()
        ResaltaColor lblSalir, False
        ResaltaColor lblImprimir, False
        ResaltaColor lblGrabar, False
        ResaltaColor lblInventarioOT, False
        ResaltaColor lblComplementos, False
        ResaltaColor lblSimilares, False
        ResaltaColor lblPromociones, False
        ResaltaColor lblCaracteristicas, False
        ResaltaColor lblHistorial, False
        ResaltaColor lblCatClientes, False
        
    End Sub
    Private Sub ImgBarraCodigo_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        DesactivaMenus
    End Sub
    
    Private Sub DesactivaMenus()
        ResaltaColor lblCatalogo, False
        ResaltaColor lblCambaceo, False
        ResaltaColor lblCanje, False
        ResaltaColor lblLinExt, False
        ResaltaColor lblCmbFisicoAE, False
        ResaltaColor lblProdExpress, False
        ResaltaColor lblTDC, False
        ResaltaColor lblTV, False
        ResaltaColor lblATM, False
    End Sub
    
    Private Sub LabelSegDanActivo_Click(Index As Integer)
    
    End Sub
    
    Private Sub lbl10pc_Click()
    
        If shpCredito.BackColor <> ColorSeleccionado Then SeleccionaShp shpCredito
    
         gbolRengonSel = 0
        If bytTipoVenta = tvCreditoTel Then
            If TypeName(objPrepGeneral.VentaCredito) <> "VtaCredTel" Then
                'Cambia el tipo de venta
                SwitchVenta bytTipoVenta
            End If
        End If
    
        'Determina algunos aspectos visuales de la aplicaci√≥n
        If objFuncionalidad.EsPaqueteEA Then lbl10pc = objPrepGeneral.VentaCredito.ColDetalleVenta.Item(1).producto.EngSug * 100 & " % &Enganche"
        
        AjustarFrames 1, 2
        objPrepGeneral.VentaCredito.Plazo = 0
        bln10PorCiento = True
        gbolEngAut = True
    
        'la etiqueta lbl10pc tiene en su nombre el porcentaje de enganche sugerido Left(lbl10pc, InStr(1, lbl10pc, " "))
        'ABBR Credito Inmediato
        'If objPrepGeneral.VentaCredito.BanCredIn And Not objPrepGeneral.VentaCredito.BanCredInSKU Then
        
        'ABBR Credito Inmediato Motos. Abril/2015
        If objPrepGeneral.VentaCredito.BanCredIn Then
            ModificaEnganche 2, 4, objPrepGeneral.VentaCredito.EngCredIn, 1
        Else
            ModificaEnganche 2, 4, Left(lbl10pc, InStr(1, lbl10pc, " ")), 1
        End If
        
        'objPrepGeneral.VentaCredito.Plazo = 0
        txtEnganche.Enabled = True
        txtPorcEnganche.Enabled = True
        DesactivaEnganches
        gbol10pcSel = True
        DesSelecciona
        shp10pc.BackColor = ColorSeleccionado
        MuestraOcultaSeguro
        AjustaColumnasCredito   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    End Sub
    
    
    Private Sub lbl10pc_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    
        ResaltaShpVenta shp10pc
    End Sub
    Private Sub ResaltaShpVenta(pobjshp As Object, Optional lbolNinguno As Boolean = False)
         If shp10pc.BackColor = ColorResaltado Then shp10pc.BackColor = DesSeleccionado
        If shp5pc.BackColor = ColorResaltado Then shp5pc.BackColor = DesSeleccionado
        If shp1aSem.BackColor = ColorResaltado Then shp1aSem.BackColor = DesSeleccionado
        If shpCredPlus.BackColor = ColorResaltado Then shpCredPlus.BackColor = DesSeleccionado
        
        
        If pobjshp.BackColor <> ColorSeleccionado And lbolNinguno = False Then pobjshp.BackColor = ColorResaltado
        
    End Sub
    Public Sub AjustarFrames(pframe As Integer, Optional ByVal pTipoCredito As Byte = 2, Optional ByVal pTabIndex As Long = -1)
    Dim lControl As Control
    '
    '    For Each lControl In Me.Controls
    '    Next
        
        Select Case pframe
            Case 0
                shpCredito1.BackStyle = vbBSSolid
                shpContado1.BackStyle = vbTransparent
                shpApartado1.BackStyle = vbTransparent
                shpCredRopa1.BackStyle = vbTransparent
                
            Case 1
                blnCredito = True
                blnCreditoSoftGood = False
                blnApartado = False
                blnContado = False
                bln10PorCiento = False
                bln5PorCiento = False
                blnPrimeraSem = False
                blnCreditoPlus = False
                shpCredito1.BackStyle = vbBSSolid
                shpContado1.BackStyle = vbTransparent
                shpApartado1.BackStyle = vbTransparent
                shpCredRopa1.BackStyle = vbTransparent
                
                lblCredito_MouseMove 0, 0, 0, 0
            Case 2
                blnCredito = True
                blnCreditoSoftGood = False
                blnContado = False
                blnApartado = False
                lblCredito_MouseMove 0, 0, 0, 0
                shpCredito1.BackStyle = vbBSSolid
                shpContado1.BackStyle = vbTransparent
                shpApartado1.BackStyle = vbTransparent
                shpCredRopa1.BackStyle = vbTransparent
                
            Case 3
                blnCredito = False
                blnCreditoSoftGood = False
                blnContado = True
                blnApartado = False
                lblContado_MouseMove 0, 0, 0, 0
                shpCredito1.BackStyle = vbTransparent
                shpContado1.BackStyle = vbBSSolid
                shpApartado1.BackStyle = vbTransparent
                shpCredRopa1.BackStyle = vbTransparent
                
            Case 4
                blnCredito = False
                blnCreditoSoftGood = False
                blnContado = False
                blnApartado = True
                lblApartado_MouseMove 0, 0, 0, 0
                shpCredito1.BackStyle = vbTransparent
                shpContado1.BackStyle = vbTransparent
                shpApartado1.BackStyle = vbBSSolid
                shpCredRopa1.BackStyle = vbTransparent
                
            Case 5
                blnCredito = True
                blnCreditoSoftGood = False
                blnApartado = False
                blnContado = False
                bln10PorCiento = False
                bln5PorCiento = False
                blnPrimeraSem = False
                blnCreditoPlus = True
                shpCredito1.BackStyle = vbTransparent
                shpContado1.BackStyle = vbTransparent
                shpApartado1.BackStyle = vbBSSolid
                shpCredRopa1.BackStyle = vbTransparent
                
            Case 6
                blnCredito = True
                blnCreditoSoftGood = True
                shpCredito1.BackStyle = vbTransparent
                shpContado1.BackStyle = vbTransparent
                shpApartado1.BackStyle = vbTransparent
                'shpCredRopa1.BackStyle = vbBSSolid
                shpCredRopa1.BackStyle = vbTransparent 'vbBSSolid 'NLFG DEJAR ETIQUETAS DE ENGANCHE VISIBLES
                                       
        End Select
        
        'Las columnas del grid de abonos de cr√©dito se ajustar√°n √∫nicamente si el tipo de venta
        'del frame destino es de cr√©dito (0, 1, 2, 5)
        If pframe < 3 Or pframe > 4 Then
            AjustaColumnasCredito pTipoCredito
        End If
        
        Form_MouseMove 0, 0, 0, 0
    End Sub
    
    Public Sub lbl1aSem_Click()
            
        'Determina algunos aspectos visuales de la aplicaci√≥n
        If shpCredito.BackColor <> ColorSeleccionado Then SeleccionaShp shpCredito
        AjustarFrames 1, 1
        blnPrimeraSem = True
        objPrepGeneral.VentaCredito.Plazo = 0
        If InStr(objPrepGeneral.VentaCredito.AnalizaTipoCredito, "1") > 0 Then
            gbolEngAut = True
            ModificaEnganche 2, 1, -1, 0
    
            txtEnganche.Enabled = False
            txtPorcEnganche.Enabled = False
        End If
        
        DesactivaEnganches
        gbol1aSemSel = True
        DesSelecciona
        shp1aSem.BackColor = ColorSeleccionado
        MuestraOcultaSeguro
            AjustaColumnasCredito   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    End Sub
    
    Private Sub lbl1aSem_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    ResaltaShpVenta shp1aSem
    End Sub
    
    Private Sub lbl5pc_Click()
        
        'Determina algunos aspectos visuales de la aplicaci√≥n
        If shpCredito.BackColor <> ColorSeleccionado Then SeleccionaShp shpCredito
        AjustarFrames 1, 3
        bln5PorCiento = True
        gbolEngAut = True
        objPrepGeneral.VentaCredito.Plazo = 0
        'la etiqueta lbl5pc tiene en su nombre el porcentaje de enganche minimo Left(lbl5pc, InStr(1, lbl5pc, " "))
        ModificaEnganche 2, 3, Left(lbl5pc, InStr(1, lbl5pc, " ")), 1
    
        txtEnganche.Enabled = False
        txtPorcEnganche.Enabled = False
        DesactivaEnganches
        gbol5pcSel = True
        DesSelecciona
        shp5pc.BackColor = ColorSeleccionado
        MuestraOcultaSeguro
            AjustaColumnasCredito   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    End Sub
    
    Private Sub lbl5pc_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    
       ResaltaShpVenta shp5pc
    End Sub
    
    Private Sub lblApartado_Click()
        If frmApartado.Enabled Then
            blnCredito = False
            lblTDC.Enabled = False
            blnContado = False
            SeleccionaShp shpApartado
            blnApartado = True
            txtApart.SetFocus
            Form_MouseMove 0, 0, 0, 0
            objPrepGeneral.VentaCredito.TipoVenta = 3
            MuestraOcultaSeguro
            'ROL001-I
            objPrepGeneral.VentaCredito.AsignaDatosGrabar objPrepGeneral.VentaCredito.TipoVenta, 0, objPrepGeneral.Plazo
            'objPrepGeneral.VentaCredito.AsignaDatosGrabar objPrepGeneral.VentaCredito.TipoVenta, 0, objPrepGeneral.Plazo, objPrepGeneral.Periodo
            'ROL001-F
            If objPrepGeneral.VentaCredito.BienEntregado = 0 Then HabilitaEntregaOT
            SeleccionaShp shpApartado
            frmMenuCliente.Visible = True
            txtCliente.SetFocus
        End If
    End Sub
    
    Private Sub lblApartado_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    '    lblApartado.BackColor = &HD9CABD
    '    shpApartado.BackColor = &HD9CABD
    RestaltaShp shpApartado
     ResaltaShpVenta shp10pc, True
    End Sub
    
    'ROLREM-I
    'Private Sub lblCambaceo_Click()
    'Dim liCont As Integer
    '
    'On Error GoTo ErrVB
    '    MousePointer = vbHourglass
    '    objFuncionalidad.EsPresupuestoCambaceo = False
    '    Set objFuncionalidad.DatosCambaceo = Nothing
    '    Set objPrepGeneral.DatosCambaceo = Nothing
    '    Call EliminarPartidas
    '    InicializaControles
    '    If lblCambaceo.Enabled Then
    '        txtCodigo.Text = objFuncionalidad.ObtenerProductosCambaceo()
    '        ResaltaColor lblCambaceo, False
    '        If objFuncionalidad.EsPresupuestoCambaceo Then
    '            If Not objFuncionalidad.DatosCambaceo.ProductosCambaceo Is Nothing Then
    '                For liCont = 1 To objFuncionalidad.DatosCambaceo.ProductosCambaceo.Count
    '                      txtCodigo.Text = objFuncionalidad.DatosCambaceo.ProductosCambaceo(liCont)
    '                       If txtCodigo <> "" Then
    '                           If txtCodigo > 0 Then
    '                               txtCodigo_KeyDown vbKeyReturn, 1
    '                           End If
    '                       End If
    '                Next
    '                grdCredito_KeyDown vbKeyReturn, 0
    '                txtCliente_KeyDown vbKeyReturn, 0
    '                lbl10pc_Click
    '
    '            End If
    '
    '        End If
    '
    '    End If
    '    MousePointer = vbArrow
    '    Exit Sub
    'ErrVB:
    '    ResaltaColor lblCambaceo, False
    '    MousePointer = vbArrow
    'End Sub
    'ROLREM-F
    
    'ROLREM-I
    'Private Sub lblCambaceo_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    '    ResaltaColor lblCambaceo, True
    'End Sub
    'ROLREM-F
    
    
    Private Sub lblCanje_Click()
    Dim lobjProd As Object
    
    On Error GoTo ErrVB
        MousePointer = vbHourglass
        If lblCanje.Enabled Then
            'ReajustaColorOpcion lblCanje, 2, 2
            StatusCanje = CanjeBuscando
            objPrepGeneral.loCtrlPromos.bolRemate = bolRemate
            Set lobjProd = objPrepGeneral.loCtrlPromos.CanjedeVale
            StatusCanje = CanjeBusquedaTerminada
            ResaltaColor lblCanje, False
            If Not lobjProd Is Nothing Then
                StatusCanje = CanjeProductoEncontrado
            
                'Indica que el producto regresado por el grid de canjes tiene asociadas  ciertas promociones
                If Not lobjProd.ColPromociones Is Nothing Then
                    Set gcolPromociones = lobjProd.ColPromociones
                End If
                
                'Se indica que se realizo una busqueda en el grid del canje y que esta devolvio un producto
                'Si ademas el presupuesto es de remates, y se trata de un canje
                'se asignan inmediatamente las promociones al producto que se encontro en el canje
                If bolRemate And StatusCanje = CanjeProductoEncontrado Then
                    Set gobjProductoRemate = lobjProd
                End If
                
                'Se continua el procedimiento normal de un presupuesto, pero con el codigo del producto encontrado en el canje
                txtCodigo = lobjProd.ProdID
                txtCodigo_KeyDown vbKeyReturn, 1
                
            Else
            
                'Indica que se realizo una busqueda en el grid de canjes pero no se encontro ningun producto que cumpliera con los criterios
                StatusCanje = CanjeProductoNoEncontrado
            End If
        End If
        
        StatusCanje = CanjeStandBy
        
        MousePointer = vbArrow
        Exit Sub
ErrVB:
        StatusCanje = CanjeError
        MousePointer = vbArrow
    End Sub
    
    Private Sub lblCanje_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblCanje, 2, 2
        ResaltaColor lblCanje, True
    End Sub
    
    
    Private Sub lblCaracteristicas_Click()
        If lblCaracteristicas.Enabled Then
            'ReajustaColorOpcion lblCaracteristicas, , 2
            objFuncionalidad.MuestraCaracteristicas grdPartidas.TextMatrix(grdPartidas.Row, 0)
            ResaltaColor lblCaracteristicas, False
        End If
    End Sub
    
    Private Sub lblCaracteristicas_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblCaracteristicas, , 2
        ResaltaColor lblCaracteristicas, True
    End Sub
    
    Private Sub lblCatalogo_Click()
    On Error GoTo ErrVB
        MousePointer = vbHourglass
        If lblCatalogo.Enabled Then
            ''ReajustaColorOpcion lblCatalogo, 2, 2
            txtCodigo = objFuncionalidad.BuscaProductos()
                    
                    
             'frmBusqueda.Show 1
             'Set objBusqueda = New frmBusqueda
             'txtCodigo = leer
           
            
            
            
            ResaltaColor lblCatalogo, False
            If txtCodigo <> "" Then
                If txtCodigo > 0 Then
                    txtCodigo_KeyDown vbKeyReturn, 1
                End If
            End If
        End If
        MousePointer = vbArrow
        Exit Sub
ErrVB:
        ResaltaColor lblCatalogo, False
        MousePointer = vbArrow
    End Sub
    
    Private Sub lblCatalogo_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        ''ReajustaColorOpcion lblCatalogo, 2, 2
         ResaltaColor lblCatalogo, True
    End Sub
    
    Private Sub lblCatClientes_Click()
    On Error GoTo ErrVB
        MousePointer = vbHourglass
       blnCatalogo = True
        If frmMenuCliente.Visible Then
            txtCliente = ""
            txtCliente_KeyDown vbKeyReturn, 1
            'ReajustaColorOpcion lblCatClientes, 2, 2
        End If
        blnCatalogo = False
        MousePointer = vbArrow
        Exit Sub
ErrVB:
        MousePointer = vbArrow
    End Sub
    
    Private Sub lblCatClientes_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblCatClientes, 2, 2
        ResaltaColor lblCatClientes, True
    End Sub
    
    'Private Sub lblCmbFisicoAE_Click()
    'Dim lobjHistorial As Object
    'Dim ldblEnganche As Double
    'Dim lintTipo As Byte
    '
    'Set lobjHistorial = CreateObject("ADN2Historial.CHistorial")
    '
    'If objPrepGeneral.VentaCredito Is Nothing Then Exit Sub
    '
    'ResaltaColor lblCmbFisicoAE, False
    'Call lobjHistorial.CambioFisico(objPrepGeneral.VentaCredito)
    '
    'ROLREM-I
    'If objPrepGeneral.VentaCredito.EsCambioFisico Then
    '    If Not objPrepGeneral.VentaCredito.ColAbonos Is Nothing Then
    '        If objPrepGeneral.VentaCredito.ColAbonos.Count() > 0 Then
    '            If Trim(txtEnganche.Text) = "" Then txtEnganche.Text = 0
    '            ldblEnganche = IIf(objPrepGeneral.VentaCredito.TipoCredito = 1, 10, CDbl(txtEnganche.Text))
    '            lintTipo = IIf(objPrepGeneral.VentaCredito.TipoCredito = 1, 1, 0)
    '            objPrepGeneral.VentaCredito.TipoCredito = 4
    '            objPrepGeneral.ActualizaPorcEnganche ldblEnganche, lintTipo
    '            objPrepGeneral.VentaCredito.CalculaTotalCredito
    '            txtPorcEnganche = objPrepGeneral.VentaCredito.PorcEngancheTotal * 100
    '            txtEnganche = objPrepGeneral.VentaCredito.EngancheTotal
    '            ActualizaTotales
    '        End If
    '    End If
    'End If
    'ROLREM-F
    '
    'End Sub
    'ROLREM-I
    'Private Sub lblCmbFisicoAE_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    '     ResaltaColor lblCmbFisicoAE, True
    'End Sub
    'ROLREM-F
    
    Private Sub lblComplementos_Click()
    ''    If lblComplementos.Enabled Then
    ''        'ReajustaColorOpcion lblComplementos, , 2
    ''        'MsgBox "Muestra complementos"
    ''        objFuncionalidad.MuestraMensaje "Muestra complementos", Informacion, Aceptar, Me.Caption
    ''    End If
    End Sub
    
    Private Sub lblComplementos_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblComplementos, , 2
         ResaltaColor lblComplementos, True
    End Sub
    
    Private Sub lblContado_Click()
        If frmContado.Visible Then
            blnCredito = False
            blnContado = True
            blnApartado = False
            lblTDC.Enabled = True
            AjustarFrames 3
            objPrepGeneral.VentaCredito.TipoVenta = 1
            'ROL001-I
            objPrepGeneral.VentaCredito.AsignaDatosGrabar objPrepGeneral.VentaCredito.TipoVenta, 0, objPrepGeneral.Plazo
            'objPrepGeneral.VentaCredito.AsignaDatosGrabar objPrepGeneral.VentaCredito.TipoVenta, 0, objPrepGeneral.Plazo, objPrepGeneral.Periodo
            'ROL001-F
                    
            frmMenuCliente.Visible = True
            If objPrepGeneral.VentaCredito.BienEntregado = 0 Then HabilitaEntregaOT
            txtCliente.SetFocus
            
            MuestraOcultaSeguro
            
            SeleccionaShp shpContado
        End If
    End Sub
    
    
    Private Sub lblContado_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    '    lblContado.BackColor = &HD9CABD
    '    shpContado.BackColor = &HD9CABD
    RestaltaShp shpContado
     ResaltaShpVenta shp10pc, True
    End Sub
    
    Private Sub lblCredito_Click()
        
        If frmCredito.Visible Then
            
            blnCredito = True
            blnApartado = False
            blnContado = False
            lblTDC.Enabled = False
            If objPrepGeneral.VentaCredito.TipoCredito = 1 Then
                AjustarFrames 0, 1
            Else
                AjustarFrames 0
            End If
            
            objPrepGeneral.VentaCredito.TipoVenta = 2
            
            MuestraOcultaSeguro
            
            If txtEnganche.Enabled And gbolActivaEnganche Then
                txtEnganche.SetFocus
            End If
            HabilitaEntregaOT
            SeleccionaShp shpCredito
        End If
    End Sub
    
    Private Sub lblCredito_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    '    lblCredito.BackColor = &HD9CABD
    '    shpCredito.BackColor = &HD9CABD
         RestaltaShp shpCredito
    End Sub
    
    Private Sub DesSeleccionaShp(Optional pbolActivos As Boolean = False)
     If pbolActivos Then
        If shpCredito.BackColor <> ColorShpSeleccionado Then shpCredito.BackColor = DesSeleccionado
        If shpContado.BackColor <> ColorShpSeleccionado Then shpContado.BackColor = DesSeleccionado
        If shpApartado.BackColor <> ColorShpSeleccionado Then shpApartado.BackColor = DesSeleccionado
        If shpCredRopa.BackColor <> ColorShpSeleccionado Then shpCredRopa.BackColor = DesSeleccionado
     Else
        shpCredito.BackColor = DesSeleccionado
        shpContado.BackColor = DesSeleccionado
        shpApartado.BackColor = DesSeleccionado
        shpCredRopa.BackColor = DesSeleccionado
     End If
    End Sub
    Private Sub SeleccionaShp(pobjshp As Object)
     DesSeleccionaShp
     pobjshp.BackColor = ColorShpSeleccionado
    End Sub
    Private Sub RestaltaShp(pobjshp As Object)
     If pobjshp.BackColor <> ColorShpSeleccionado Then pobjshp.BackColor = ColorResaltado
    End Sub
    
    Private Sub lblCreditoAbarrotes_Click()
        ''''''Abrir Exe de Ticket Credimax ''''Cambio Abarrotes
        ResaltaColor lblCreditoAbarrotes, True
     
        Dim Complemento As String
        Complemento = 1
        Dim MyValue
        MyValue = Shell("K:\Exes\ImprimeTCKCmax.exe" & " " & NvoEnv.Usuario & "," & NvoEnv.Password & "," & Complemento, vbMaximizedFocus)
        Unload Me
        ''''Cerrar app de presupuesto
    End Sub
    
    Private Sub lblCredPlus_Click()
        If shpCredito.BackColor <> ColorSeleccionado Then SeleccionaShp shpCredito
        objPrepGeneral.VentaCredito.Plazo = 0
        If bytTipoVenta = tvCreditoTel Then
            If TypeName(objPrepGeneral.VentaCredito) = "VtaCredTel" Then
                'Cambia el tipo de venta a venta credito plus
                SwitchVenta 3
            End If
        End If
        If Not blnCredito Then lblCredito_Click
        'Determina algunos aspectos visuales de la aplicaci√≥n
        AjustarFrames 1, 5
        blnCreditoPlus = True
        gbolEngAut = True
        ModificaEnganche 2, 5, -1, 0
    
        'txtEnganche.Enabled = False
        'txtPorcEnganche.Enabled = False
        DesactivaEnganches
        gbolCPlusSel = True
        DesSelecciona
        shpCredPlus.BackColor = ColorSeleccionado
        MuestraOcultaSeguro
    End Sub
    Private Sub DesSelecciona()
      shpCredPlus.BackColor = DesSeleccionado
      shp1aSem.BackColor = DesSeleccionado
      shp10pc.BackColor = DesSeleccionado
      shp5pc.BackColor = DesSeleccionado
    End Sub
    Private Sub lblCredPlus_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    ResaltaShpVenta shpCredPlus
    End Sub
    
    Private Sub lblCredRopa_Click()
    'Dim cplazo As Integer
    'Dim objventa, abono As Object
    ''EDMA
    'cplazo = Val(grdCreditoRopa.TextMatrix(grdCreditoRopa.RowSel, 0))
    '        'EDMA
    'For Each objventa In objPrepGeneral.VentaCredito.ColDetalleVenta
    '        For Each abono In objventa.Producto.coltazas
    '            If cplazo = abono.Plazo Then
    '                objventa.abonomas1 = abono.montopagop
    '            End If
    '        Next
    '    Next
    '
        
        
        If frmCredRopa.Visible Then
    
            AjustarFrames 6, 0
            
            objPrepGeneral.VentaCredito.TipoVenta = 2
            
            MuestraOcultaSeguro
            
            txtEngancheRopa.SetFocus
            
            SeleccionaShp shpCredRopa
            
        End If
    End Sub
    
    Private Sub lblCredRopa_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        RestaltaShp shpCredRopa
    End Sub
    
    Private Sub lblDatos_Click()
        MousePointer = vbHourglass
        If frmMenuCliente.Visible Then
            'ReajustaColorOpcion lblDatos, 2, 2
            'MsgBox "Se muestran los datos del cliente"
            objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1145"), Informacion, Aceptar, Me.Caption
        End If
        MousePointer = vbArrow
    End Sub
    
    Private Sub lblDatos_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblDatos, 2, 2
    End Sub
    Private Function VerificaRestriccionesNuevoPedidoSoftGoods() As Boolean
    Dim lblnProceder As Boolean
    Dim ldblCapPagoTotLCR As Double
    On Error GoTo ManejaError
        lblnProceder = True
        
        If objPrepGeneral.VentaCredito.Cliente.Folio > 0 Then
            With objPrepGeneral.VentaCredito.Cliente
                If Not gobjSoftGoods.VerificarSolicitudSoftGoods(.Pais, .Canal, .SucursalOrigen, .Folio) And lblnProceder Then
                    objFuncionalidad.MuestraMensaje "Imposible realizar esta venta debido a que " & vbCrLf & _
                        "la solicitud de L√≠nea de cr√©dito de Soft Goods " & vbCrLf & _
                        "ha sido rechazada.", Informacion, Aceptar, frmPrepa.Caption
                    lblnProceder = False
                End If
            End With
        End If
        
    '    If Not gobjSoftGoods.CumpleMontoMaximo And lblnProceder Then
    '        objFuncionalidad.MuestraMensaje "El monto del abono de los productos de Soft Goods actual no es v√°lido" & vbCrLf & _
    '            "ya que es mayor al monto m√°ximo a financiar, el cual es el siguiente:" & vbCrLf & _
    '            lstrADNSignoMoneda & gobjSoftGoods.fnCapPagoMaximaDefault, Informacion, Aceptar, frmPrepa.Caption
    '        lblnProceder = False
    '    End If
        gobjSoftGoods.PAbonoSoftGOODS = CDbl(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 2))
        gobjSoftGoods.UAbonoSoftGOODS = CDbl(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 4))
        gobjSoftGoods.PAbonoSoftGOODSPtual = CDbl(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 3))
        gobjSoftGoods.PlazoSoftGoods = CInt(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 0))
        
    '    If Not gobjSoftGoods.CumpleAbonoMinimo And lblnProceder Then
    '        objFuncionalidad.MuestraMensaje "El monto del abono de los productos de Soft Goods actual no es v√°lido" & vbCrLf & _
    '            "ya que es menor al monto de abono m√≠nimo, el cual es el siguiente:" & vbCrLf & _
    '            lstrADNSignoMoneda & gobjSoftGoods.AbonoMinimo, Informacion, Aceptar, frmPrepa.Caption
    '        lblnProceder = False
    '    End If
    '
    '    If Not gobjSoftGoods.CumpleMontoMinimo And lblnProceder Then
    '        objFuncionalidad.MuestraMensaje "El monto de los productos de Soft Goods actual no se puede financiar" & vbCrLf & _
    '            "ya que es menor al monto m√≠nimo a financiar, el cual es el siguiente:" & vbCrLf & _
    '            "Clientes sin compras anteriores de Soft Goods: " & lstrADNSignoMoneda & gobjSoftGoods.fnImpVtaMinPrimeraCompraDefault & vbCrLf & _
    '            "Clientes con compras anteriores de Soft Goods: " & lstrADNSignoMoneda & gobjSoftGoods.fnImpVtaMinRecompraDefault, Informacion, Aceptar, frmPrepa.Caption
    '        lblnProceder = False
    '    End If
        
    '    If Not gobjSoftGoods.CumpleCapPagoCTESoftGoods And lblnProceder Then
    '        If gobjSoftGoods.clsCteSoftGoods.ClienteTieneRegistroEncredCapPagoproductolcr Then
    '            If objPrepGeneral.VentaCredito.Cliente.Folio = 0 Then
    '                ldblCapPagoTotLCR = objPrepGeneral.VentaCredito.Cliente.Ingresos * 0.05
    '            Else
    '                ldblCapPagoTotLCR = objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp
    '            End If
    '
    '            objFuncionalidad.MuestraMensaje "La capacidad de pago del cliente no es suficiente para realizar esta compra." & vbCrLf & _
    '                "Capacidad de pago total disponible: " & lstrADNSignoMoneda & ldblCapPagoTotLCR & vbCrLf & _
    '                "Capacidad de pago necesaria para Hard Goods: " & objPrepGeneral.VentaCredito.abono & vbCrLf & _
    '                "Capacidad de pago necesaria para Soft Goods: " & gobjSoftGoods.PAbonoSoftGOODS & vbCrLf & _
    '                "Capacidad disponible para Hard Goods: " & ldblCapPagoTotLCR - objPrepGeneral.VentaCredito.abono & vbCrLf & _
    '                "Capacidad disponible para Soft Goods: " & gobjSoftGoods.CapDispParaSoftGoods(objPrepGeneral.VentaCredito.abono, ldblCapPagoTotLCR), Informacion, Aceptar, frmPrepa.Caption
    '            lblnProceder = False
    '        End If
    '    End If
        
        VerificaRestriccionesNuevoPedidoSoftGoods = lblnProceder
        
        Exit Function
ManejaError:
        Err.Raise Err.Number, Err.Source, Err.Description
    End Function
    
    
    Private Sub lblGrabar_Click()
    Dim lstrMensaje As String
    Dim lRespuesta As Integer
    Dim lstrSql As String
    Dim lRS As New Recordset
    Dim lCN As New Connection
    Dim lblnProceder As Boolean
    On Error GoTo ErrVB
    
         'ROLREQ88710-I
         If bolSegVidamaxAgr = True Then
            bolSegVidamaxAgrGraba = True
         Else
            bolSegVidamaxAgrGraba = False
            CtrlSeguroVidamax.ExisteCombo = False
         End If
         'ROLREQ88710-F
               
        'ROL001-I Creditalika
        If objPrepGeneral.VentaCredito.Plazo = 154 And objPrepGeneral.VentaCredito.EsCreditalika Then
           'ROLPRU
           If lintPais = 1 And lintCanal = 27 Then
           'If lintPais = 1 Then
              If txtPorcEnganche < 10 Then
                 MsgBox "Enganche m√≠nimo para promoci√≥n creditalika es del 10%"
                 Exit Sub
              End If
           End If
        End If
        'ROL001-F Creditalika
        
        
        '/* ERV -- REQ86631 OT208334 Calculo de Nuevas Tasas*/
        StrLog = "lblGrabar_Click->frmprepa->Entra funcion funTraeTasaAbonos"
        Call Log(StrLog)
        
        Call funTraeTasaAbonos
        
        StrLog = "lblGrabar_Click->frmprepa->Sale funcion funTraeTasaAbonos"
        Call Log(StrLog)
            
        
        '/* FIN ERV -- REQ86631 OT208334 Calculo de Nuevas Tasas*/
        
        
        'ROLREQ88710-I - Validacion enganche requerido
        If bolSegMotoAgr = True Or bolSegVidamaxAgr = True Then
           Dim VentaEng As Integer
           Dim PorcMoto As Double
           
           PorcMoto = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdPrecio * objPrepGeneral.VentaCredito.Cliente.EngancheRequerido
           
           If CDbl(txtPorcEnganche) < PorcMoto Then
              MsgBox "Enganche m√≠nimo para este cliente es del " & objPrepGeneral.VentaCredito.Cliente.EngancheRequerido & "%"
              Exit Sub
           End If
        Else
           'ROLENGANCHECENTRALIZADO-I
           If CDbl(txtPorcEnganche) < objPrepGeneral.VentaCredito.Cliente.EngancheRequerido Then
              MsgBox "Enganche m√≠nimo para este cliente es del " & objPrepGeneral.VentaCredito.Cliente.EngancheRequerido & "%"
              Exit Sub
           End If
           'ROLENGANCHECENTRALIZADO-I
        End If
        'ROLREQ88710-F - Validacion enganche requerido
        'ROLPORCENTAJE CASALEY-I
        'ROLPRU
    '    If lintPais = 1 And lintCanal = 7 Then
    '    'If lintPais = 1 Then
    '       If VerificarDepto(Str(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID)) Then
    '          If txtPorcEnganche < 20 Then
    '             MsgBox "El enganche m√≠nimo para motos en Casa Ley es del 20% " & vbCrLf & _
    '                    "Favor de modificar el porcentaje del enganche " & vbCrLf & _
    '                    "y seleccionar nuevamente el plazo."
    '             Exit Sub
    '          End If
    '       End If
    '    End If
        'ROLPORCENTAJE CASALEY-I
    
        comprueba_puntuales
        
        If Not frmPrepa.grdPartidas.Visible Or objPrepGeneral.VentaCredito.ColDetalleVenta.Count = 0 Then
           objFuncionalidad.MuestraMensaje "Debe agregar al menos un producto.", Informacion, Aceptar, frmPrepa.Caption
           Exit Sub
        End If
        
        MousePointer = vbHourglass
        
        If ValidaControles Then
           If lblGrabar.Enabled Then
              lblnProceder = True
            
              If gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS Then
                 gobjSoftGoods.PAbonoSoftGOODS = Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 2)
                 If Not gobjSoftGoods.clsCteSoftGoods Is Nothing Then
                    If gobjSoftGoods.clsCteSoftGoods.TIPO_PEDIDO_A_GENERAR = GENERAR_UN_NUEVO_PEDIDO Then
                       lblnProceder = VerificaRestriccionesNuevoPedidoSoftGoods
                    Else
                       If Not gobjSoftGoods.VerificaSiCunpleImpRevolvente Then
                          objFuncionalidad.MuestraMensaje "Esta compra no puede ser realizada por el siguiente motivo" & vbCrLf & _
                            "El monto de soft goods de esta compra es de: " & lstrADNSignoMoneda & gobjSoftGoods.MontoAFinanciarConSobrePrecio & vbCrLf & _
                            "y excede el monto autorizado para este cliente de: " & lstrADNSignoMoneda & gobjSoftGoods.clsCteSoftGoods.fnImpRevolvente, Informacion, Aceptar, frmPrepa.Caption
                          lblnProceder = False
                       End If
                    End If
                 End If
              End If
    
              If lblnProceder = False Then
                 Exit Sub
              Else
                If adnProductoResPuente.BProducRec = False Then
                  If gobjSoftGoods.HardGood = TIENE_HARD_GOODS And objPrepGeneral.VentaCredito.TipoVenta = 2 Then
                    If Not frmPrepa.grdCredito.rows > 1 Then
                       objFuncionalidad.MuestraMensaje "El monto de la venta de hard goods no se puede financiar a credito ya que es menor al permitido", Informacion, Aceptar, Me.Caption
                       Exit Sub
                    End If
                  End If
                End If
              End If
                
            
            'Pepe madreador I
            grdCredito_DblClick
            AjustaColumnasCredito
            'Pepe madreador F
            
            
            'ROLREQ88710-I Envia info de la venta de vidamax
            If bolSegVidamaxAgr Then
               objPrepGeneral.VentaCredito.PrecioUnitarioSeg = dblAbonoConSeg - dblAbonoSinSeg
               objPrepGeneral.VentaCredito.SkuSeguroVida = SkuSeguroVida
               objPrepGeneral.VentaCredito.SegVidaPrecio = dblSegVidaPrecio
               objPrepGeneral.VentaCredito.SegVidaSobrePrecio = dblSegVidaSobrePrecio
               objPrepGeneral.VentaCredito.PlazoConSeguro = PlazoConSeguro
               objPrepGeneral.VentaCredito.AbonoConSeg = dblAbonoConSeg
               objPrepGeneral.VentaCredito.UltimoAbonoConSeg = dblUltimoAbonoConSeg
               objPrepGeneral.VentaCredito.AbonoPuntualConSeg = dblAbonoPuntualConSeg
            End If
            'ROLREQ88710-F Envia info de la venta de vidamax
            
            
            
              objPrepGeneral.VentaCredito.Cliente.MaxPlazoRec = objPrepGeneral.PlazoRec
              lstrMensaje = "Ocurri√≥ un error al grabar el presupuesto"
                
              If objPrepGeneral.VentaCredito.TipoVenta <> 2 Then
                 Set objPrepGeneral.VentaCredito.Cliente.objSoftGOODS = gobjSoftGoods
                 Set gobjSoftGoods.clsCteSoftGoods = New clsCteSoftGoods
              End If
    
              'Se saca la conexi√≥n y se utiliza para consultar el parametro de enganche 0
              'VHSG
              Dim EngancheCero As Boolean
              EngancheCero = False
              Set lCN2 = New ADODB.Connection
              Set lRS2 = New ADODB.Recordset
              lCN2.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
              lCN2.CursorLocation = adUseClient
              Set lRS2 = lCN2.Execute("SELECT fcprmval FROM PARAMETRO WITH(NOLOCK) WHERE fiprmid=5398")
                
              If Not lRS2 Is Nothing Then
                 If lRS2.RecordCount > 0 Then
                    EngancheCero = CBool(lRS2!fcPrmVal)
                    lRS2.Close
                    Set lRS2 = Nothing
                 End If
              End If
                
              
              If objPrepGeneral.GrabarPresupuesto(PRecompras) Then
              
                 'Aqui se manda mensaje de que se grabo presupuesto con numero
                 If gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS And gobjSoftGoods.fcFolioParam > 0 And gobjSoftGoods.HardGood = TIENE_HARD_GOODS Then
                    objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1146") & vbCrLf & _
                       "Folio Hard Goods: " & objPrepGeneral.VentaCredito.FolioParam & vbCrLf & _
                       "Folio Soft Goods: " & gobjSoftGoods.fcFolioParam, Informacion, Aceptar, Me.Caption
                 ElseIf (gobjSoftGoods.SoftGood = NO_TIENE_SOFT_GOODS Or gobjSoftGoods.fcFolioParam = 0) And gobjSoftGoods.HardGood = TIENE_HARD_GOODS Then
                    'ROL001-I
                    If objPrepGeneral.VentaCredito.EsCreditalika Then
                       objFuncionalidad.MuestraMensaje "El presupuesto de la moto se grab√≥ correctamente" & vbCrLf & objPrepGeneral.VentaCredito.FolioParam, Informacion, Aceptar, Me.Caption
                    Else
                       objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1075") & vbCrLf & objPrepGeneral.VentaCredito.FolioParam, Informacion, Aceptar, Me.Caption
                    End If
                    'ROL001-F
                    'ROL001-I
                    If objPrepGeneral.VentaCredito.EsCreditalika And (objPrepGeneral.VentaCredito.Cliente.ClienteV Or objPrepGeneral.VentaCredito.Cliente.ClienteAAA) And objPrepGeneral.VentaCredito.Plazo = 154 Then
                       objFuncionalidad.MuestraMensaje "El presupuesto del seguro se grab√≥ correctamente" & vbCrLf & objPrepGeneral.VentaCredito.FolioParamSegCreditalika, Informacion, Aceptar, Me.Caption
                    End If
                    'ROL001-f
                 ElseIf gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS And gobjSoftGoods.fcFolioParam > 0 And gobjSoftGoods.HardGood = NO_TIENE_HARD_GOODS Then
                    objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1075") & vbCrLf & gobjSoftGoods.fcFolioParam, Informacion, Aceptar, Me.Caption
                 End If
                 'ROLREQ88710 Llamado a SP Seguros SPInsSazMotoSeguro I
                 If bolSegMotoAgr Then
                    If objPrepGeneral.VentaCredito.ColDetalleVenta.Count = 2 And objPrepGeneral.VentaCredito.ColDetalleVenta(2).producto.ProdID = 526290 Then
                       Set lRS2 = lCN2.Execute("Select YEAR(GETDATE()) as anio")
                       Dim sql As String
                       sql = "SPInsSazMotoSeguro @piNoPresupuesto = " & Val(objPrepGeneral.VentaCredito.FolioParam) & ",@piUso = " & CtrlSeguroMotos.idUsoSeleccionado - 1 & ",@piCobertura = " & CtrlSeguroMotos.idCoberturaSeleccionada & ",@piTipoVenta = 2,@piModeloAnioMoto = " & lRS2!anio
                       Set lRS2 = lCN2.Execute(sql)
                    End If
                 End If
                 'ROLREQ88710 Llamado a SP Seguros SPInsSazMotoSeguro F
                 
                 
                 'EDMA Inserta Presupuesto en la bitacora Inicio 13/12/2010  'ROLEXTRA
                 If PRecompras.aceptolcrs = 2 Then
                    Set lRS2 = lCN2.Execute("PACRLLIBitacoraCreditoRS " & Val(objPrepGeneral.VentaCredito.FolioParam))
                 End If
                 If lCN2.State = adStateOpen Then
                    lCN2.Close
                 End If
                 Set lCN2 = Nothing
                 Set lRS2 = Nothing
                 'EDMA Inserta Presupuesto en la bitacora Fin
                    
                 lRespuesta = vbNo
                 While lRespuesta = vbNo
                    lstrMensaje = "Ocurri√≥ un error al imprimir el presupuesto"
                    objPrepGeneral.ImprimeTicketPresup
                    DClienteUnico = ""
                    lRespuesta = objFuncionalidad.MuestraMensaje(traduc.ConsultaLeyendasporApp(IDAplicacion & ",1132"), Pregunta, SI_NO, Me.Caption)
                 Wend
                    
                 'VHSG 17/06/2011 Verificar si es una Moto
                 'ROLCARTAINSTRUCCION-I
                 'If VerificarDepto(CStr(objPrepGeneral.ProductoCredito.ProdID)) And VerificarCapacidad And Not objPrepGeneral.VentaCredito.Cliente.EsNuevo Then
                 'If VerificarDepto(CStr(objPrepGeneral.ProductoCredito.ProdID)) And VerificarCapacidad Theneng
                 'ROLREQ88710-I Valida producto 1 de la lista
                 'If VerificarDepto(CStr(objPrepGeneral.ProductoCredito.ProdID)) Then
                 If VerificarDepto(CStr(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID)) Then
                 'ROLREQ88710-F Valida producto 1 de la lista
                 'ROLCARTAINSTRUCCION-F
                    lRespuesta = vbNo
                    While lRespuesta = vbNo
                       ImprimirCartaInstruccion
                       lRespuesta = objFuncionalidad.MuestraMensaje(traduc.ConsultaLeyendasporApp(IDAplicacion & ",1132"), Pregunta, SI_NO, Me.Caption)
                    Wend
                 End If
                    
    'ROLREM-I
                 'Verificar las garantias extendidas
    '             If Not bolRemate Then
    '                lstrMensaje = "Ocurri√≥ un error al verificar la GEXT de credito"
    '                If objPrepGeneral.VentaCredito.FolioMesa = 0 Then
    '                   objPrepGeneral.VerificaGarantiasExtendidas Me.hwnd
    '                End If
    '             End If
    'ROLREM-F
                 lstrMensaje = ""
                    
                 If Not EliminarPartidas Then End
                    
                 objPrepGeneral.VentaCredito.BienEntregado = 0
                 objPrepGeneral.VentaCredito.FolioMesa = 0
                 objPrepGeneral.VentaCredito.PromocionTDC = 0
                 objPrepGeneral.VentaCredito.SeleccionEntregaOT = False
                    
                 ConfiguraBienEntregado
    'ROLREM-I
    '             objPrepGeneral.VentaCredito.EsCambioFisico = False
    '             Set objPrepGeneral.VentaCredito.ObjCambioFisico = Nothing
    'ROLREM-F
                 Set objPrepGeneral.VentaCredito.Cliente = Nothing
                 Set gobjSoftGoods.clsCteSoftGoods = Nothing
                 Set gobjSoftGoods.ColDetalleVenta = Nothing
                 gobjSoftGoods.CumpleCapPagoCTESoftGoods = False
                 Set gobjSoftGoods.DetalleVenta = Nothing
                 gobjSoftGoods.fcFolioParam = 0
                 gobjSoftGoods.HardGood = NO_TIENE_HARD_GOODS
                 gobjSoftGoods.PAbonoSoftGOODS = 0
                 gobjSoftGoods.PlazoSoftGoods = 0
                 gobjSoftGoods.PorcEng = 0
                 gobjSoftGoods.SoftGood = NO_TIENE_SOFT_GOODS
                 gobjSoftGoods.TotEng = 0
                 gobjSoftGoods.UAbonoSoftGOODS = 0
                    
                 'ABBR Credito Inmediato Modificacion Febrero 2015
                 PorcentajeCredInm = ""
                 CantidadCredInm = ""
                 bolCredInm = False
                 bolCredInmSKU = False
                 objPrepGeneral.VentaCredito.BanCredIn = False
                 objPrepGeneral.VentaCredito.BanCredInSKU = False
                 lblContado.Caption = "C O N T A D O  [ctrl + 7]"
                  
                 'ECG. Oculta los objetos de ATM
                 If blnEsATM Then
                    ATMEliminaObjetos
                 End If
    'ROLREM-I
    '             objFuncionalidad.EsPresupuestoCambaceo = False
    '             Set objFuncionalidad.DatosCambaceo = Nothing
    '             Set objPrepGeneral.DatosCambaceo = Nothing
    'ROLREM-F
              Else
                 'EDMA
                 If PRecompras.VentaSinEnganche Then
                    ActualizaTotales (6)
                    Exit Sub
                 End If
                 'EDMA
                 objFuncionalidad.MuestraMensaje "No se grab√≥ el presupuesto correctamente", Error, Aceptar, Me.Caption
                 End
              End If
           End If
        End If
        
        'ROLREQ88710-I Componentes a no mostrar de seguros
        bolEsProdConsumo = False
        bolEsProdMotos = False
        bolSegVidamaxAgr = False
        bolSegMotoAgr = False
        bolEsProdRescate = False
        
        bolSegVidamaxAgrGraba = False
        FrameSegurosProd.Enabled = False
        FrameSegurosProd.Visible = False
        
        FrameSegurosAbonos.Enabled = False
        FrameSegurosAbonos.Visible = False
        
        FrCtrlSeguroMotos.Visible = False
        FrCtrlSeguroMotos.Enabled = False
        btnSeguroMotos.Visible = False
        btnEliminarSeguroMotos.Visible = False
        
        FrCtrlSeguroVidamax.Visible = False
        
        PlazoConSeguro = 0
        dblAbonoConSeg = 0
        dblUltimoAbonoConSeg = 0
        dblAbonoPuntualConSeg = 0
       'ROLREQ88710-F Componentes a no mostrar de seguros
        
           
        
        'ECG. Oculta los objetos de ATM
        If blnEsATM Then
            ATMEliminaObjetos
        End If
        
        MousePointer = vbArrow
        Exit Sub
    
ErrVB:
        MousePointer = vbArrow
        'ROLREQ88710-I
        bolSegVidamaxAgrGraba = False
        'ROLREQ88710-F
        If Left(Err.Description, 3) <> "INF" And Left(Err.Description, 4) <> "NEXT" Then
           objFuncionalidad.MuestraMensaje lstrMensaje & vbCrLf & Err.Description, Error, Aceptar, Me.Caption
           End
        Else
           If InStr(1, "NEXT ", "NEXT", vbBinaryCompare) > 0 Then
              objFuncionalidad.MuestraMensaje Mid(Err.Description, 5), Informacion, Aceptar, Me.Caption
           Else
              objFuncionalidad.MuestraMensaje Mid(Err.Description, 4), Informacion, Aceptar, Me.Caption
           End If
            
           If Err.Number = vbObjectError + 1041 Then
              If txtEnganche.Enabled = True Then txtEnganche_KeyDown vbKeyReturn, 0
           End If
        End If
    End Sub
    Private Sub lblGrabar_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblGrabar, , 2
        ResaltaColor lblGrabar, True
    End Sub
    
    
    Private Sub lblHistorial_Click()
        Dim objHistorial As Object
        Dim loCliente As New ADN2Venta.Cliente
        On Error GoTo ManejaError
        MousePointer = vbHourglass
        
            'ABBR. Virtualizaci√≥n
            
        '/* ERV -- REQ86631 OT208334 Calculo de Nuevas Tasas*/
         
        StrLog = "Adn2Presupuesto->frmprepa->lblHistorial_Click : entra funcion funTraeTasaAbonos"
        Call Log(StrLog)
        
        Call funTraeTasaAbonos
        
        '/* FIN ERV -- REQ86631 OT208334 Calculo de Nuevas Tasas*/
        
        Set objHistorial = CreateObject("ADN2Historial.CHistorial")
        
        If frmMenuCliente.Visible Then
            'ReajustaColorOpcion lblHistorial, 2, 2
            'Set objHistorial.objCliente = objPrepGeneral.VentaCredito.Cliente
            loCliente.CapacidadPago = objPrepGeneral.VentaCredito.Cliente.CapacidadPago
            loCliente.CapacidadpagoDisp = objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp
            'ROLCAPACIDAD MOTOS
            loCliente.CapacidadpagoDispMotos = objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDispMotos
            
            
            'VHSG 29/09/2014 Capacidad para consumo
            loCliente.CapDispCONSobregiro = objPrepGeneral.VentaCredito.Cliente.CapDispCONSobregiro
            loCliente.MensajeSobreGiro = objPrepGeneral.VentaCredito.Cliente.MensajeSobreGiro
    ' ISM
            loCliente.CapacidadPagoNomSG = objPrepGeneral.VentaCredito.Cliente.CapacidadPagoNomSG
            loCliente.CapacidadPagoDispSG = objPrepGeneral.VentaCredito.Cliente.CapacidadPagoDispSG
            loCliente.ImpRevolventeSG = objPrepGeneral.VentaCredito.Cliente.ImpRevolventeSG
            loCliente.NoPedidoSG = objPrepGeneral.VentaCredito.Cliente.NoPedidoSG
    ' ISM
            loCliente.NoClienteUnico = objPrepGeneral.VentaCredito.Cliente.NoClienteUnico
            objHistorial.EsMotos = VerificarDepto(STR(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID))
            
            Set objHistorial.objCliente = loCliente
            objHistorial.NgcioId = objPrepGeneral.VentaCredito.Cliente.NgcioId
            objHistorial.NoTienda = objPrepGeneral.VentaCredito.Cliente.NoTienda
            objHistorial.CteID = objPrepGeneral.VentaCredito.Cliente.CteID
            objHistorial.DigitoVer = objPrepGeneral.VentaCredito.Cliente.DigitoVer
            'VHSG Virtualizaci√≥n
            'objHistorial.Usuario = NvoEnv.Usuario
            'objHistorial.Password = NvoEnv.Password
            objHistorial.ObtieneColVenta
        End If
        
        
    
        
        Set objHistorial = Nothing
        Set loCliente = Nothing
        MousePointer = vbArrow
        Exit Sub
ManejaError:
        Exit Sub
    End Sub
    
    Private Sub lblHistorial_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblHistorial, 2, 2
        ResaltaColor lblHistorial, True
    End Sub
    
    Private Sub ProporcionaDatosDeImpresion()
    Dim lblnEncontrado As Boolean
    Dim lstrMensaje As String
    On Error GoTo ErrVB
        'If MsgBox("¬øEl cliente desea proporcionar sus datos?", vbYesNo + vbQuestion + vbDefaultButton2, Me.Caption) = vbYes Then
        If objFuncionalidad.MuestraMensaje(traduc.ConsultaLeyendasporApp(IDAplicacion & ",1133"), Pregunta, SI_NO, Me.Caption) = vbYes Then
        
            'If MsgBox("¬øEs cliente nuevo?", vbYesNo + vbQuestion + vbDefaultButton2, Me.Caption) = vbNo Then
            If objFuncionalidad.MuestraMensaje(traduc.ConsultaLeyendasporApp(IDAplicacion & ",1135"), Pregunta, SI_NO, Me.Caption) = vbNo Then
                'Si no es cliente nuevo se busca en la base de datos
                lstrMensaje = "No se encontraron los datos del cliente"
                lblnEncontrado = objPrepGeneral.BuscaCliente()
            
            Else
                'Si es un cliente nuevo
                'se da de alta al cliente en el sistema
                lblnEncontrado = objPrepGeneral.AltaCliente()
                lstrMensaje = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1134")
            End If
            If lblnEncontrado Then
                'Si el cliente se encontr√≥ se actualizan los datos en la pantalla
                txtSucCliente = objPrepGeneral.VentaCredito.Cliente.NoTienda
                txtCliente = objPrepGeneral.VentaCredito.Cliente.CteID & objPrepGeneral.VentaCredito.Cliente.DigitoVer
                lblCliente.Caption = objPrepGeneral.VentaCredito.Cliente.CteNombre & " " & objPrepGeneral.VentaCredito.Cliente.CteAPaterno & " " & objPrepGeneral.VentaCredito.Cliente.CteAMaterno
            Else
                'MsgBox lstrMensaje & vbCrLf & "La impresi√≥n se realizar√° sin los datos del cliente", vbInformation, Me.Caption
                objFuncionalidad.MuestraMensaje lstrMensaje & vbCrLf & "La impresi√≥n se realizar√° sin los datos del cliente", Informacion, Aceptar, Me.Caption
            End If
        End If
        
        If objPrepGeneral.VentaCredito.Cliente.CteID > 0 Then
            Set objPrepGeneral.VentaCredito.Cliente.objSoftGOODS = gobjSoftGoods
        Else
            Set objPrepGeneral.VentaCredito.Cliente = New Cliente
            Set objPrepGeneral.VentaCredito.Cliente.objSoftGOODS = gobjSoftGoods
            Set gobjSoftGoods.clsCteSoftGoods = New clsCteSoftGoods
        End If
        Exit Sub
ErrVB:
        MousePointer = vbArrow
        'MsgBox "Error:" & Err.Number & vbCrLf & Err.Description, vbInformation, Me.Caption
        objFuncionalidad.MuestraMensaje "Error:" & Err.Number & vbCrLf & Err.Description, Error, Aceptar, Me.Caption
        Resume Next
    End Sub
    
    'HLP 29/11/2010
    Private Sub lblImprimir_Click()
    On Error GoTo ErrVB
        Dim objimprticket As New clsImprTicketInf
        Set objimprticket = New clsImprTicketInf
        
        MousePointer = vbHourglass
        If lblImprimir.Enabled Then
        
            'ReajustaColorOpcion lblImprimir, , 2
            
            'Si el n√∫mero de cliente es menor o igual que cero, se pregunta si se desea proporcionar los datos
            If objPrepGeneral.VentaCredito.Cliente.CteID <= 0 Then
                'Preunta si el cliente quier proporcionar su datos para la impresi√≥n
                ProporcionaDatosDeImpresion
            End If
            
            'Se imprime el ticket informativo
            If gobjSoftGoods.HardGood = TIENE_HARD_GOODS Then
                'objPrepGeneral.objImpPresup.ImprTicketInfo objPrepGeneral.VentaCredito, DateDiff("D", Now, objPrepGeneral.VentaCredito.FechaLimitePAgo)
                'HLP para pago puntual
                objimprticket.ImprTicketInfo objPrepGeneral.VentaCredito, DateDiff("D", Now, objPrepGeneral.VentaCredito.FechaLimitePAgo)
                'ROL001-I seguro
                If objPrepGeneral.VentaCredito.EsCreditalika And (objPrepGeneral.VentaCredito.Cliente.ClienteV Or objPrepGeneral.VentaCredito.Cliente.ClienteAAA) Then
                   objimprticket.ImprTicketInfoSegCreditalika objPrepGeneral.VentaCredito, DateDiff("D", Now, objPrepGeneral.VentaCredito.FechaLimitePAgo)
                End If
                'ROL001-F
                objFuncionalidad.MuestraMensaje "La impresi√≥n se realiz√≥ correctamente", Informacion, Aceptar, Me.Caption
            Else
                'objPrepGeneral.objImpPresup.ImprTicketInfo objPrepGeneral.VentaCredito, DateDiff("D", Now, Now)
                'HLP para pago puntual
                Set objimprticket.objDatosSoft = colGralAbonos
                objPrepGeneral.VentaCredito.Plazo = CInt(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 0))
                objimprticket.ImprTicketInfo objPrepGeneral.VentaCredito, DateDiff("D", Now, Now)
                objFuncionalidad.MuestraMensaje "La impresi√≥n se realiz√≥ correctamente", Informacion, Aceptar, Me.Caption
            End If
            ResaltaColor lblImprimir, False
        End If
        MousePointer = vbArrow
        Exit Sub
ErrVB:
         ResaltaColor lblImprimir, False
        MousePointer = vbArrow
        'MsgBox "Error:" & Err.Number & vbCrLf & Err.Description, vbInformation, Me.Caption
        objFuncionalidad.MuestraMensaje "Error:" & Err.Number & vbCrLf & Err.Description, Error, Aceptar, Me.Caption
        Resume Next
    End Sub
    
    Private Sub lblImprimir_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblImprimir, , 2
         ResaltaColor lblImprimir, True
    End Sub
    
    Private Sub lblInventarioOT_Click()
        If lblInventarioOT.Enabled Then
            Call objPrepGeneral.VentaCredito.ConsultaEntregaOT
            'ReajustaColorOpcion lblInventarioOT, , 2
        ''        'MsgBox "Muestra Inventario"
        ''        objFuncionalidad.MuestraMensaje "Muestra Inventario", Informacion, Aceptar, Me.Caption
        End If
    End Sub
    
    Private Sub lblInventarioOT_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblInventarioOT, , 2
        ResaltaColor lblInventarioOT, True
    End Sub
    
    Private Sub HabilitaEntregaOT()
        lblInventarioOT.Enabled = objPrepGeneral.VentaCredito.ValidaEntregaOT
    End Sub
    
    Private Sub lblLinExt_Click()
    Dim lstrMsgAviso As String
    Dim liTotal      As Integer
    Dim liPosIni     As Integer
    Dim liPosFin     As Integer
    Dim lsCadAux     As String
    Dim lsProductoEA As String
    On Error GoTo ErrVB
        Dim liCont As Integer
        MousePointer = vbHourglass
        If lblLinExt.Enabled Then
            'ReajustaColorOpcion lblLinExt, 2, 2
            gbolEsProdMesa = False
            txtCodigo = objFuncionalidad.LineaExtendida
    
            ResaltaColor lblLinExt, False
            If objFuncionalidad.FolioMesa > 0 Then
                gbolEsProdMesa = True
                If objPrepGeneral.VentaCredito.FolioMesa = 0 Then
                    If objPrepGeneral.VentaCredito.ColDetalleVenta.Count > 0 And objPrepGeneral.VentaCredito.FolioMesa = 0 Then
                        lstrMsgAviso = "Ya existen productos en el presupuesto y no son de la Mesa de Regalos" & vbNewLine & _
                            "Elimine los productos y vueva a intentar"
                        objFuncionalidad.MuestraMensaje lstrMsgAviso, Informacion, Aceptar, frmPrepa.Caption
                        Exit Sub
                    End If
                    objPrepGeneral.VentaCredito.FolioMesa = objFuncionalidad.FolioMesa
                ElseIf objFuncionalidad.FolioMesa <> objPrepGeneral.VentaCredito.FolioMesa Then
                    lstrMsgAviso = "Este producto no corresponde a la Mesa de Regalos del producto Inicial" & vbNewLine & _
                        "Elimine los productos y vueva a intentar"
                    objFuncionalidad.MuestraMensaje lstrMsgAviso, Informacion, Aceptar, frmPrepa.Caption
                    Exit Sub
                End If
            End If
                   
            If objFuncionalidad.EsPaqueteEA Then
                For liCont = 1 To objFuncionalidad.ProductosPaqueteEA.Count
                      txtCodigo.Text = objFuncionalidad.ProductosPaqueteEA(liCont)
                       If txtCodigo <> "" Then
                           If txtCodigo > 0 Then
                               txtCodigo_KeyDown vbKeyReturn, 1
                           End If
                       End If
                Next
            Else
                If txtCodigo <> "" Then
                    If Not objFuncionalidad.EsPaqueteEA And txtCodigo > 0 Then
                        txtCodigo_KeyDown vbKeyReturn, 1
                    End If
                End If
            End If
            If objFuncionalidad.EsPaqueteEA Then objPrepGeneral.VentaCredito.Cliente.TipoCte = "EA"
            
        End If
        
        
        MousePointer = vbArrow
        Exit Sub
ErrVB:
        MousePointer = vbArrow
    End Sub
    
    Private Sub lblLinExt_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblLinExt, 2, 2
        ResaltaColor lblLinExt, True
    End Sub
    
    
    
    Private Sub lblProdExpress_Click()
    Dim lobjProductoBen As New ProductoCredito
    Dim lstrMsgAviso As String
    
    On Error GoTo ErrVB
        MousePointer = vbHourglass
        If lblProdExpress.Enabled = False Then Exit Sub
        ResaltaColor lblProdExpress, False
        Set objPrepGeneral.ProductoCredito = Nothing
        If objPrepGeneral.VentaCredito.ColDetalleVenta.Count > 0 And objPrepGeneral.VentaCredito.BienEntregado = 0 Then
            lstrMsgAviso = "Ya existen productos en el presupuesto y no son de bien entregado" & vbNewLine & _
                "Elimine los productos y vueva a intentar"
            objFuncionalidad.MuestraMensaje lstrMsgAviso, Informacion, Aceptar, frmPrepa.Caption
            Exit Sub
        End If
        
        Set objFuncionalidad.ProductoBEN = lobjProductoBen
        txtCodigo = objFuncionalidad.BienEntregado()
        
        If txtCodigo <> "" Then
            If txtCodigo > 0 And Not objFuncionalidad.ProductoBEN Is Nothing Then
                Set objPrepGeneral.ProductoCredito = objFuncionalidad.ProductoBEN
                objPrepGeneral.VentaCredito.BienEntregado = objFuncionalidad.TipoBienEntregado
                objPrepGeneral.VentaCredito.TiendaBienEntregado = objFuncionalidad.NoTiendaBEN
                Set lobjProductoBen = Nothing
                ConfiguraBienEntregado
                txtCodigo_KeyDown vbKeyReturn, 1
            Else
                txtCodigo = ""
            End If
        End If
        
        MousePointer = vbArrow
        Exit Sub
        
ErrVB:
        MousePointer = vbArrow
        'Call MuestraError(App)
    End Sub
    
    Private Sub ConfiguraBienEntregado()
    Dim lolblValor As Boolean
    
      lolblValor = IIf(objPrepGeneral.VentaCredito.BienEntregado > 0, False, True)
      lblCatalogo.Enabled = lolblValor
      lblLinExt.Enabled = lolblValor
      If Not bolRemate Then
        lblLinExt.Enabled = lolblValor
        lblCmbFisicoAE.Enabled = lolblValor
      Else
        lblLinExt.Enabled = False
        lblCmbFisicoAE.Enabled = False
      End If
      lblCanje.Enabled = lolblValor
      
    End Sub
    
    Private Sub lblProdExpress_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    ResaltaColor lblProdExpress, True
    End Sub
    
    Private Sub lblPromociones_Click()
        If lblPromociones.Enabled Then
            objPrepGeneral.loCtrlPromos.MuestraPromocionesProducto objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto
            ResaltaColor lblPromociones, False
        End If
    End Sub
    
    Private Sub lblPromociones_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblPromociones, , 2
         ResaltaColor lblPromociones, True
    End Sub
    Private Sub ConfirmarSalir()
        If objFuncionalidad.MuestraMensaje("¬øDesea salir?", Pregunta, SI_NO, Me.Caption) = vbYes Then
        'If MsgBox("¬øDesea salir?", vbYesNo + vbQuestion + vbDefaultButton2, Me.Caption) = vbYes Then
            End
        End If
    End Sub
    Private Sub lblSalir_Click()
        'ReajustaColorOpcion lblSalir, , 2
        'ECG.
        If blnEsATM Then
            If objFuncionalidad.MuestraMensaje("Regresar al modelado? ", Pregunta, SI_NO, "Venta ATM") = vbYes Then
                EliminarPartidas
                Set goVentaATM = Nothing
                lblATM_Click
                Exit Sub
            End If
        End If
        
        ConfirmarSalir
    End Sub
    
    Private Sub lblSalir_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblSalir, , 2
        ResaltaColor lblSalir, True
    End Sub
    
    Private Sub lblSimilares_Click()
    Dim lstrCodigo As String
    Dim lintNumPartidasTotal As Integer
    Dim lintNumPartidaAEliminar As Integer
    
        If lblSimilares.Enabled Then
        
            'ReajustaColorOpcion lblSimilares, , 2
    'ROLREM-I
    '        If objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.EsGarantia Then
    '            Exit Sub
    '        End If
    'ROLREM-F
            
            lintNumPartidasTotal = grdPartidas.rows - 1
            lintNumPartidaAEliminar = grdPartidas.Row
            
            'Se buscan productos similares
            lstrCodigo = objFuncionalidad.ProductosSimilares(grdPartidas.TextMatrix(grdPartidas.Row, 0))
            ResaltaColor lblSimilares, False
            'Si se decidi√≥ cambiar el producto
            If Val(lstrCodigo) > 0 Then
                
                EliminaPartida lintNumPartidaAEliminar
                
                txtCodigo.Text = lstrCodigo
                txtCodigo_KeyDown vbKeyReturn, 1
            
            End If
        End If
    End Sub
    
    Private Sub lblSimilares_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        'ReajustaColorOpcion lblSimilares, , 2
        ResaltaColor lblSimilares, True
    End Sub
    
    Private Sub picNavigator_Click()
        Me.MousePointer = vbArrow
    End Sub
    
    Private Sub MSFlexGrid1_Click()
    
    End Sub
    
    Private Sub lblTDC_Click()
    Dim lngCvePromo As Long
    Dim lbolAplicaDescto As Byte
    
     If lblTDC.Enabled Then
      lngCvePromo = objPrepGeneral.loCtrlPromos.ObtenPromoBanco(objPrepGeneral.VentaCredito, 1, lbolAplicaDescto)
      
      objPrepGeneral.VentaCredito.PromocionTDC = CInt(lngCvePromo)
      objPrepGeneral.VentaCredito.AplicaPromosTDC = lbolAplicaDescto
      objPrepGeneral.VentaCredito.CalculaTotalPrecioChaz
        'AVS - TDC
      ActualizaPrecioTDC objPrepGeneral.VentaCredito.ColDetalleVenta
    
      ActualizaTotales
      ResaltaColor lblTDC, False
      lblContado_Click
      If lngCvePromo > 0 Then
      lblContado.Caption = "Promoci√≥n TDC  [ctrl + 7]"
      Else
      lblContado.Caption = "C O N T A D O  [ctrl + 7]"
      End If
      lblContado_Click
     End If
    End Sub
    
    Private Sub lblTDC_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
     ResaltaColor lblTDC, True
    End Sub
    
Private Sub lblTelefonia10porciento_Click()

    If shpCredito.BackColor <> ColorSeleccionado Then SeleccionaShp shpCredito

     gbolRengonSel = 0
    If bytTipoVenta = tvCreditoTel Then
        If TypeName(objPrepGeneral.VentaCredito) <> "VtaCredTel" Then
            'Cambia el tipo de venta
            SwitchVenta bytTipoVenta
        End If
    End If

    'Determina algunos aspectos visuales de la aplicaci√≥n
    If objFuncionalidad.EsPaqueteEA Then lbl10pc = objPrepGeneral.VentaCredito.ColDetalleVenta.Item(1).producto.EngSug * 100 & " % &Enganche"
    
    AjustarFrames 1, 2
    objPrepGeneral.VentaCredito.Plazo = 0
    bln10PorCiento = True
    gbolEngAut = True

    

    'objPrepGeneral.VentaCredito.Plazo = 0
    txtEnganche.Enabled = True
    txtPorcEnganche.Enabled = True
    DesactivaEnganches
    gbol10pcSel = True
    DesSelecciona
    shp10pc.BackColor = ColorSeleccionado
    MuestraOcultaSeguro
    AjustaColumnasCredito   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
End Sub




    Private Sub lblTV_Click()
    Dim lstrMsgAviso As String
    On Error GoTo ErrVB
        MousePointer = vbHourglass
        If lblTV.Enabled Then
            'ReajustaColorOpcion lblLinExt, 2, 2
            gbolEsProdMesa = False
            txtCodigo = objFuncionalidad.TVdePAGA
            ResaltaColor lblTV, False
            If txtCodigo <> "" Then
                If txtCodigo > 0 Then
                    txtCodigo_KeyDown vbKeyReturn, 1
                End If
            End If
            objPrepGeneral.FolioPreventaMVS = objFuncionalidad.FolioPreventaMVS
        End If
        MousePointer = vbArrow
        Exit Sub
ErrVB:
        MousePointer = vbArrow
    End Sub
    
    Private Sub lblTV_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    ResaltaColor lblTV, True
    End Sub
    
    
    


    Private Sub picNavegador_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
    Dim lstrPromocion1 As String
    Dim lstrPromocion2 As String
        If Y > 450 Then
            objPrepGeneral.loCtrlPromos.AvanzaPromocion lstrPromocion1, lstrPromocion2
        Else
            objPrepGeneral.loCtrlPromos.AvanzaPromocion lstrPromocion1, lstrPromocion2, True
        End If
        lblPromocionVigente = lstrPromocion1
        lblDetallePromociones = lstrPromocion2
        
    End Sub
    
    Private Sub picNavegador_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        If Y > 450 Then
            'lblAyuda.Caption = "Ir a siguiente"
        Else
            'lblAyuda.Caption = "Ir a anterior"
        End If
    End Sub
    
    
    Private Sub DesActivarControl(pControl As Control)
        pControl.Enabled = False
    End Sub
    Private Sub ActivarControl(pControl As Control)
        pControl.Enabled = True
        pControl.BackColor = vbBlack
    End Sub
     
     Private Sub Timer1_Timer()
        Dim lstrPromocion1 As String
        Dim lstrPromocion2 As String
        Dim fso As Object
    
        Static blnCambioColor As Boolean
        
        If blnCambioColor Then
            'lblDetallePromociones.Caption = "Primera promoci√≥n de muestra"
            lblDetallePromociones.ForeColor = &H930000
        Else
            'lblDetallePromociones.Caption = "Esta es otra promoci√≥n"
            lblDetallePromociones.ForeColor = vbRed
        End If
        blnCambioColor = Not blnCambioColor
        
       ObtenerDatosPromocion
        
        lblPromocionVigente = lstrPromocion1
        'lblDetallePromociones = lstrPromocion2
       
         If Not LeyendaPromo = "" Then
            lblDetallePromociones = LeyendaPromo
            lblDetallePromociones.ForeColor = ObtenerColor(colorLetra)
            lblDetallePromociones.BackColor = ObtenerColor(colorBG)
            lblDetallePromociones.FontName = tipoLetra
            If fiAplic <> "" Then
                    lblDeseo.Visible = True
                    lblDeseo.Caption = fiAplic
                    lblDeseo.ForeColor = ObtenerColor(colorLetra)
                    lblDeseo.BackColor = ObtenerColor(colorBG)
                 Else
                lblDeseo.Visible = False
            End If
            
            If caracley = "Negrita" Then
                lblDetallePromociones.Font.Bold = True
            ElseIf caracley = "Cursiva" Then
                lblDetallePromociones.Font.Italic = True
            ElseIf caracley = "Subrayado" Then
                lblDetallePromociones.Font.Strikethrough = True = True
            End If
            lblDetallePromociones.Font.Size = tamanoletra
             
            Set fso = CreateObject("Scripting.FileSystemObject")
            Shell "RegSvr32.exe -s C:\WINDOWS\system32\scrrun.dll", vbHide
          'BOTP 21/11/2014 Promocion para Navidad
            If fso.FileExists("K:\Bmp\IMGCRTRANSM.JPG") = True Then
                ImgLeyenda.Picture = LoadPicture("K:\Bmp\IMGCRTRANSM.JPG")
            End If
            
            Set fso = Nothing
        End If
        
     End Sub
    
    
    
    Private Sub txtApart_GotFocus()
        AjustarFrames 4
        If shpApartado.BackColor <> ColorSeleccionado Then SeleccionaShp shpApartado
        lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1040") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
        MarcarTexto txtApart
    End Sub
    
    Private Sub txtApart_KeyDown(KeyCode As Integer, Shift As Integer)
        Select Case KeyCode
            Case vbKeyReturn
                lblApartado_Click
        End Select
    End Sub
    
    
    Private Sub txtApart_KeyPress(keyascii As Integer)
        If Val(txtApart.Text) >= Val(txtTotalApartado.Text) Then keyascii = 0
        Select Case keyascii
            Case vbKeyReturn, 8
            
            Case vbKey1, vbKey2, vbKey3, vbKey4, vbKey5, vbKey6, vbKey7, vbKey8, vbKey9, vbKey0
                 If Val(txtApart.Text & Chr(keyascii)) >= Val(txtTotalApartado.Text) Then keyascii = 0
            Case Else
              keyascii = 0
        End Select
    End Sub
    
    Private Sub txtApart_LostFocus()
    
        If Val(txtApart.Text) < gbolMontoMinApart Then txtApart.Text = gbolMontoMinApart
        
    
    End Sub
    
    Private Sub txtChaz_GotFocus()
        AjustarFrames 3
        If shpContado.BackColor <> ColorSeleccionado Then lblContado_Click
        lblAyuda = vbCrLf & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1041") & vbCrLf & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
        MarcarTexto txtChaz
    End Sub
    
    Private Sub txtChaz_KeyDown(KeyCode As Integer, Shift As Integer)
        Select Case KeyCode
            Case vbKeyReturn
                lblContado_Click
        End Select
    End Sub
    
    Private Sub txtCliente_Change()
    On Error GoTo ErrVB
    
    lblCliente.Caption = ""
    lblHistorial.Enabled = False
    lblGrabar.Enabled = False
    'Mercadeo de Clientes
    If Trim(txtCliente) = "" Or txtCliente = "0" Then
        Set objPrepGeneral.VentaCredito.Cliente = Nothing
        Set gobjSoftGoods.clsCteSoftGoods = Nothing
        If objFuncionalidad.EsPaqueteEA Then objPrepGeneral.VentaCredito.Cliente.TipoCte = "EA"
        
        objPrepGeneral.VentaCredito.CalculaTotalCredito
        ActualizaTotales
        
        If txtCliente.Enabled Then txtCliente.SetFocus
    End If
    
    Exit Sub
ErrVB:
        If Err.Number - vbObjectError = 1010 Or Err.Number - vbObjectError = 1009 Then
            Resume Next
        End If
    
    End Sub
    
    Private Sub txtCliente_GotFocus()
        lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1042") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1038") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
        MarcarTexto txtCliente
    End Sub
    Private Sub ManejaCliente(lbolGrabar As Boolean)
    On Error GoTo ErrManejaCliente
    
       If AbonoMinimoPais = 0 Then
          AbonoMinimoPais = objPrepGeneral.VentaCredito.AbonoMinimo
       End If
    
       frmContado.Enabled = False
       frmCredito.Enabled = False
       frmApartado.Enabled = False
       frmMenuCliente.Enabled = False
       frmMenuPrincipal.Enabled = False
       txtCodigo.Enabled = False
       frmPartidas.Enabled = False
       MousePointer = vbHourglass
        Dim lstrClienteUnico As String
        
        Dim cadena As String
       'ROL001-I
        Dim lbolEsmoto As Boolean
       'ROL001-F
       '' Si es un cambio fisico se toma el cliente del pedido cancelado
    'ROLREM-I
    '   If objPrepGeneral.VentaCredito.EsCambioFisico Then
    '      txtCliente.Text = Trim(CStr(objPrepGeneral.VentaCredito.ObjCambioFisico.CteID) & " ") & _
    '                        Trim(CStr(objPrepGeneral.VentaCredito.ObjCambioFisico.DigitoVer) & " ")
    '   End If
    'ROLREM-F
    
    'ROLREM-I
    '   If Not objFuncionalidad.DatosCambaceo Is Nothing Then
    '      If objFuncionalidad.DatosCambaceo.ProductosCambaceo.Count = 0 Then
    '         objPrepGeneral.VentaCredito.TipoVenta = 2
    '      End If
    '   End If
    'ROLREM-F
    Dim lugar As Integer
    
       'Si no se tecle√≥ ning√∫n cliente
       If (txtCliente = "" Or txtCliente = "0") And Not objFuncionalidad.EsPresupuestoCambaceo Then
          PRecompras.AbonoPuntual = Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 4))
          'Si se trata de una petici√≥n de consulta al cat√°logo de clientes directamente blnCatalogo ser√° igual a true
          If blnCatalogo Then
                Dim PUNTUALC As Double
                Dim PUNTUALR As Double
             PUNTUALC = 0
             PUNTUALR = 0
               
             If Me.grdCredito.Visible = True Then
                PUNTUALC = Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 4))
             End If
                
             If Me.grdCreditoRopa.Visible = True Then
                PUNTUALR = Val(Me.grdCreditoRopa.TextMatrix(Me.grdCreditoRopa.RowSel, 3))
             End If
             'El cliente ya existe, se muestra la pantalla de b√∫squeda
             lbolGrabar = objPrepGeneral.BuscaCliente(PUNTUALC, PUNTUALR, PRecompras)
             'MsgBox "ABBR.. ya regreso al frmprepa"
                            
             If objPrepGeneral.VentaCredito.Cliente.Folio > 0 Then
                    Dim ldetalleVenta As Object
                    
                For Each ldetalleVenta In objPrepGeneral.VentaCredito.ColDetalleVenta
                    bolCredInmSKU = objPrepGeneral.VentaCredito.BanCredInSKU
                            
                    If bolCredInmSKU = True Then
                       Exit For
                    End If
                Next
    
                If funValidaCreditoInmediato(objPrepGeneral.VentaCredito.Cliente.Pais, objPrepGeneral.VentaCredito.Cliente.Canal, objPrepGeneral.VentaCredito.Cliente.SucursalOrigen, objPrepGeneral.VentaCredito.Cliente.Folio) Then
                   Me.txtPorcEnganche.Locked = True
                   bolCredInm = True
                   For Each ldetalleVenta In objPrepGeneral.VentaCredito.ColDetalleVenta
                       bolCredInmSKU = objPrepGeneral.VentaCredito.BanCredInSKU
                       If bolCredInmSKU = True Then
                          Exit For
                       End If
                   Next
                End If
             End If
                
             If objPrepGeneral.objPresupuesto.bTerminaApp Then
                End
             End If
                
             If objPrepGeneral.objPresupuesto.esEmpleado Then
                End
             End If
          Else
             'Si la petici√≥n fue hecha directamente del txtCliente al presionar enter sin dato alguno en el textbox
             'Se verifica si se est√° trabajando con un cliente nuevo
             'If MsgBox("¬øEs cliente nuevo?", vbYesNo + vbQuestion + vbDefaultButton2, Me.Caption) = vbNo Then
             If objFuncionalidad.MuestraMensaje(traduc.ConsultaLeyendasporApp(IDAplicacion & ",1135"), Pregunta, SI_NO, Me.Caption) = vbNo Then
                'Si ya existe el cliente
                'El cliente ya existe, se muestra la pantalla de b√∫squeda
                lbolGrabar = objPrepGeneral.BuscaCliente(PUNTUALC, PUNTUALR, PRecompras)
             Else
                'Si es un cliente nuevo
                lbolGrabar = objPrepGeneral.AltaCliente(PUNTUALC, PUNTUALR, PRecompras)
             End If
             
             If objPrepGeneral.objPresupuesto.esEmpleado Then
                End
             End If
          End If
          'Si se tecleo alg√∫n cliente
       Else
    'ROLREM-I
          'Si es Presupuesto de Cambaceo se toma el cliente de la solicitud
    '      If objFuncionalidad.EsPresupuestoCambaceo Then
    '         If Not objFuncionalidad.DatosCambaceo Is Nothing Then
    '            objPrepGeneral.VentaCredito.Cliente.NgcioID = Val(objFuncionalidad.DatosCambaceo.Negocio)
    '            objPrepGeneral.VentaCredito.Cliente.CteID = Val(Trim(objFuncionalidad.DatosCambaceo.ClienteId))
    '            objPrepGeneral.VentaCredito.Cliente.DigitoVer = Val(Trim(objFuncionalidad.DatosCambaceo.DigitoVer))
    '            objPrepGeneral.VentaCredito.Cliente.NoTienda = Val(objFuncionalidad.DatosCambaceo.Tienda)
    '            Set objPrepGeneral.DatosCambaceo = objFuncionalidad.DatosCambaceo
    '         End If
    '      Else
    'ROLREM-F
             objPrepGeneral.VentaCredito.Cliente.NgcioId = NvoEnv.Cia
             objPrepGeneral.VentaCredito.Cliente.CteID = Val(Left(txtCliente.Text, Len(txtCliente.Text) - 1))
             objPrepGeneral.VentaCredito.Cliente.DigitoVer = Val(Right(txtCliente.Text, 1))
             objPrepGeneral.VentaCredito.Cliente.NoTienda = Val(txtSucCliente)
    'ROLREM-I
    '      End If
    'ROLREM-F
          lbolGrabar = objPrepGeneral.ModificaCliente()
       End If
        
       If lbolGrabar Then
          If gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS Then
             Set gobjSoftGoods.clsCteSoftGoods = New clsCteSoftGoods
             lstrClienteUnico = objPrepGeneral.VentaCredito.Cliente.NoClienteUnico
             gobjSoftGoods.clsCteSoftGoods.fiPais = Val(Mid(lstrClienteUnico, 1, 2))
             gobjSoftGoods.clsCteSoftGoods.fiCanal = Val(Mid(lstrClienteUnico, 3, 2))
             gobjSoftGoods.clsCteSoftGoods.fiSucursal = Val(Mid(lstrClienteUnico, 5, 4))
             gobjSoftGoods.clsCteSoftGoods.fiFolio = Val(Mid(lstrClienteUnico, 9))
             gobjSoftGoods.ObtieneDatosComplementariosCTESoftGoods
          End If
       End If
    
       If Not gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS Then
          'EDMA 42033 - 16/09/11 : Implementacion de Promociones Decuento Por Recompra.
          AplicaPromocion = True
          DecXRec = 0
          'Si el presupuesto tiene algun SKU de Motos entonces no se aplica la promoci√≥n.
          'EDMA 21/12/11 Se agrega el par√°metro plazo en la llamada del componente de la promoci√≥n
          If AplicaPromocion Then
             DClienteUnico = objPrepGeneral.VentaCredito.Cliente.NoClienteUnico
             DecXRec = PromoDescRec(Val(Mid(DClienteUnico, 1, 2)), Val(Mid(DClienteUnico, 3, 2)), Val(Mid(DClienteUnico, 5, 4)), Val(Mid(DClienteUnico, 9)), ObtenCapitalReal(objPrepGeneral.VentaCredito), objPrepGeneral.VentaCredito.Plazo)
             EngancheXCliente = CDbl(txtEnganche.Text)
          End If
             
          If DecXRec > 0 Then
            Dim variable As Double
             variable = DecXRec
             objPrepGeneral.VentaCredito.ModificaEnganche CDbl(txtEnganche.Text), 0, DecXRec
             DecXRec = 0
             ActualizaTotales
            
             If variable > CDbl(txtEnganche.Text) Then
                variable = CDbl(txtEnganche.Text)
             End If
                
             DecXRec = variable
                
             If txtEnganche.Text < 0 Then txtEnganche.Text = 0
                
             If objPrepGeneral.VentaCredito.ColAbonos(1).MontoAbono <= objPrepGeneral.VentaCredito.AbonoMinimo Then
                MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1136") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1137") & " " & objPrepGeneral.VentaCredito.AbonoMinimo & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1138"), vbInformation
                DecXRec = 0
                objPrepGeneral.VentaCredito.ModificaEnganche CDbl(EngancheXCliente), 0, 0
                ActualizaTotales
             Else
                MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1139") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1140"), vbInformation
                If txtEnganche.Text >= DecXRec Then
                   txtEnganche.Text = CDbl(txtEnganche.Text) - DecXRec
                End If
                txtPorcEnganche.Text = IIf(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3) >= 0, Format(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3), "###0.00"), 0)
             End If
          Else
             If Not gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS Then
                objPrepGeneral.VentaCredito.ModificaEnganche CDbl(txtEnganche.Text), 0, 0
             End If
                       
             'ROLHON10-I AGREGAR VALIDACION DE CEN Y CRED   objPrepGeneral.objPresupuesto.MontoDesc10P
             VerificarControl
    '         'ROLLOG-I
             StrLog = "ADN2Presupuesto->frmprepa->Manejacliente->Pais : " & lintPais
             Call Log(StrLog)
    '         'ROLLOG-F
             If lintPais = 4 Then    '4
             'If lintPais = 1 Then    '4
    '            'ROLLOG-I
                StrLog = "ADN2Presupuesto->frmprepa->Manejacliente-> validaciones: " & objPrepGeneral.VentaCredito.Cliente.EsNuevo & " " & objPrepGeneral.objPresupuesto.MontoDesc10P
                Call Log(StrLog)
    '            'ROLLOG-F
                objPrepGeneral.VentaCredito.Cliente.ValidaClienteNuevo
                
                '10% de descuento clientes nuevos
                If Not objPrepGeneral.VentaCredito.Cliente.EsForaneo Then
                    
                    If ((objPrepGeneral.VentaCredito.Cliente.EsNuevo And ValParam10PDescCliNue) Or (objPrepGeneral.objPresupuesto.MontoDesc10P And ValParam10PDescCliNue)) Then
                       MsgBox "Por ser cliente nuevo de Banco Azteca, se aplicara un descuento del 10%", vbInformation
                       ActualizaProductoPartida objPrepGeneral.VentaCredito.ColDetalleVenta
                    End If
                ElseIf CInt(Trim(adnProductoResPuente.SClientePriComFor)) = 0 And objPrepGeneral.VentaCredito.Cliente.EsForaneo Then
                    If ((objPrepGeneral.VentaCredito.Cliente.EsNuevo And ValParam10PDescCliNue) Or (objPrepGeneral.objPresupuesto.MontoDesc10P And ValParam10PDescCliNue)) Then
                       MsgBox "Por ser cliente nuevo Foraneo de Banco Azteca, se aplicara un descuento del 10%", vbInformation
                       ActualizaProductoPartida objPrepGeneral.VentaCredito.ColDetalleVenta
                    End If
                
                End If
                '10% de descuento clientes nuevos
                
             End If
             'ROLHON10-F
             ActualizaTotales
          End If
       Else
          AplicaPromocion = True
          DecXRec = 0
          PorcEngTemp = Me.txtPorcEngancheRopa
             
          If AplicaPromocion Then
             DClienteUnico = objPrepGeneral.VentaCredito.Cliente.NoClienteUnico
             DecXRec = PromoDescRec(Val(Mid(DClienteUnico, 1, 2)), Val(Mid(DClienteUnico, 3, 2)), Val(Mid(DClienteUnico, 5, 4)), Val(Mid(DClienteUnico, 9)), ObtenCapitalReal(objPrepGeneral.VentaCredito), Me.grdCreditoRopa.TextMatrix(grdCreditoRopa.RowSel, 0))
             EngancheXCliente = CDbl(txtEngancheRopa.Text)
          End If
             
          If DecXRec > 0 Then
             txtEngancheRopa.Text = DecXRec + Val(txtEngancheRopa.Text)
             CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
             If objPrepGeneral.VentaCredito.ColDetalleVenta(1).abono <= objPrepGeneral.VentaCredito.AbonoMinimo Then
                MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1136") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1137") & " " & objPrepGeneral.VentaCredito.AbonoMinimo & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1138"), vbInformation
                DecXRec = 0
                CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
             Else
                If DecXRec > CDbl(txtEngancheRopa.Text) Then
                   DecXRec = CDbl(txtEngancheRopa.Text)
                End If
                MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1139") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1140"), vbInformation
                txtEngancheRopa.Text = CDbl(txtEngancheRopa.Text) - DecXRec
                Me.txtPorcEngancheRopa = PorcEngTemp
                'txtPorcEnganche.Text = IIf(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3) >= 0, Format(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3), "###0.00"), 0)
             End If
          Else
             CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
          End If
       End If
        
       If gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS Then
          If gobjSoftGoods.HardGood = NO_TIENE_HARD_GOODS Then
             objPrepGeneral.VentaCredito.abono = 0
             CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
          End If
          CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
       Else
          Set objPrepGeneral.VentaCredito.Cliente.objSoftGOODS = gobjSoftGoods
          Set gobjSoftGoods.clsCteSoftGoods = New clsCteSoftGoods
       End If
        
       If lbolGrabar Then
          'NLFG Valida Es Foraneo Mayo 2011
          If Not objPrepGeneral.VentaCredito.Cliente.EsNuevo And Not objPrepGeneral.VentaCredito.Cliente.EsForaneo Then
             If ValidarParametroAlnova Then
                If Not ValidarOrigenCliente(objPrepGeneral.VentaCredito.Cliente) Then
                   MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1131"), vbExclamation + vbOKOnly
                   End
                Else
                   cadena = objPrepGeneral.VentaCredito.Cliente.Pais & _
                            objPrepGeneral.VentaCredito.Cliente.Canal & _
                            objPrepGeneral.VentaCredito.Cliente.SucursalOrigen & _
                            objPrepGeneral.VentaCredito.Cliente.Folio
                   SaldosAlnova
                End If
             End If
          Else
          End If
             
          'Se actualizan los datos del cliente en la pantalla del presupuesto
          txtSucCliente = objPrepGeneral.VentaCredito.Cliente.NoTienda
          txtCliente = objPrepGeneral.VentaCredito.Cliente.CteID & objPrepGeneral.VentaCredito.Cliente.DigitoVer
          lblCliente.Caption = objPrepGeneral.VentaCredito.Cliente.CteNombre & " " & objPrepGeneral.VentaCredito.Cliente.CteAPaterno & " " & objPrepGeneral.VentaCredito.Cliente.CteAMaterno
       Else
          txtSucCliente = objPrepGeneral.VentaCredito.Cliente.NoTienda
          Set objPrepGeneral.VentaCredito.Cliente = Nothing
          If gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS Then
             Set gobjSoftGoods.clsCteSoftGoods = Nothing
          End If
          txtCliente = ""
          lblCliente.Caption = ""
       End If
               
       'Se activan algunos elementos de la pantalla
       lblDatos.Enabled = lbolGrabar
       lblHistorial.Enabled = lbolGrabar
       lblGrabar.Enabled = lbolGrabar
       'ReajustaColorOpcion lblGrabar
       txtSucCliente.Enabled = True
       txtCliente.Enabled = True
       frmContado.Enabled = True
       frmCredito.Enabled = True
       frmApartado.Enabled = True
       frmMenuCliente.Enabled = True
       frmMenuPrincipal.Enabled = True
       txtCodigo.Enabled = True
       frmPartidas.Enabled = True
       
       'ROL001-I Modifica el esquema de pago
       If objPrepGeneral.VentaCredito.Cliente.TipoEsqPago = 1 Then
          chkSemanal.Value = True
          chkSemanal.Visible = True
          chkQuincenal.Value = False
          chkQuincenal.Visible = False
          chkMensual.Value = False
          chkMensual.Visible = False
          Call chkSemanal_Click
       ElseIf objPrepGeneral.VentaCredito.Cliente.TipoEsqPago = 13 Then
          If lintPais = 1 Then
             chkSemanal.Value = False
             chkSemanal.Visible = False
             chkQuincenal.Value = True
             chkQuincenal.Visible = True
             chkMensual.Value = False
             chkMensual.Visible = False
             Call chkQuincenal_Click
          Else
             chkSemanal.Value = True
             chkSemanal.Visible = True
             chkQuincenal.Value = False
             chkQuincenal.Visible = False
             chkMensual.Value = False
             chkMensual.Visible = False
             Call chkSemanal_Click
          End If
       ElseIf objPrepGeneral.VentaCredito.Cliente.TipoEsqPago = 14 Then
          If lintPais = 1 Then
             chkSemanal.Value = False
             chkSemanal.Visible = False
             chkQuincenal.Value = False
             chkQuincenal.Visible = False
             chkMensual.Value = True
             chkMensual.Visible = True
             Call chkMensual_Click
          Else
             chkSemanal.Value = True
             chkSemanal.Visible = True
             chkQuincenal.Value = False
             chkQuincenal.Visible = False
             chkMensual.Value = False
             chkMensual.Visible = False
             Call chkSemanal_Click
          End If
       Else
          If lintPais = 1 Then
             chkSemanal.Visible = True
             chkQuincenal.Visible = False
             chkMensual.Visible = False
          Else
             chkSemanal.Visible = True
             chkQuincenal.Visible = False
             chkMensual.Visible = False
          End If
       End If
       'ROL001-F
    
    
      '' ERV - Guia - Productos de Rescate
       If adnProductoResPuente.BProducRec = True Then
        Dim lsBanderaEnganche As Boolean
           txtPorcEnganche.Text = adnProductoResPuente.DPorcenEngRec
           
           If lsBanderaEnganche = False Then
                txtPorcEnganche_KeyDown vbKeyReturn, 0
                lsBanderaEnganche = True
           End If
       End If
    
    
    
       'Muestra Historial de credito
       'MsgBox "FLAG " & lbolGrabar & " " & objPrepGeneral.VentaCredito.TipoVenta & " " & objPrepGeneral.VentaCredito.Cliente.NoClienteUnico
       If lbolGrabar And objPrepGeneral.VentaCredito.TipoVenta = 2 And Trim(objPrepGeneral.VentaCredito.Cliente.NoClienteUnico) <> "" Then
          'MsgBox "ENTRANDO A HISTORIAL "
          lblHistorial_Click
          'MsgBox "SALIENDO DEL HISTORIAL "
          If paramActvAbonoMenMinimo Then
             RecomprasAbonoMenorMinimo 'ajh20100428
          End If
       End If
        
        Dim lbBandeeraPromo303030 As Boolean
        
       If VerificarDepto(STR(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID)) Then
          lbBandeeraPromo303030 = objPrepGeneral.VentaCredito.Cliente.AplicaPlazoI303030
       Else
          lbBandeeraPromo303030 = objPrepGeneral.VentaCredito.Cliente.AplicaPlazoC303030
       End If
       'ROLMOTOELITE-I
       'ROL001-I
       'If Not objPrepGeneral.VentaCredito.Cliente.EsCreditalika Then
       'ROL001-F
       
       If Not objPrepGeneral.VentaCredito.Cliente.EsCreditalika And Not objPrepGeneral.VentaCredito.Cliente.EsMotoElite Then
       'ROLMOTOELITE-F
      
          'Muestra mensaje por buen historial
          'ROLREQ88710-I No mostrar msg de 303030 si es rescate
          'If objPrepGeneral.VentaCredito.Cliente.Bandera303030 And lbBandeeraPromo303030 Then
          If objPrepGeneral.VentaCredito.Cliente.Bandera303030 And lbBandeeraPromo303030 And adnProductoResPuente.BProducRec = False Then
          'ROLREQ88710-F No mostrar msg de 303030 si es rescate
             If objFuncionalidad.MuestraMensaje(objPrepGeneral.VentaCredito.Cliente.Mensaje303030, Pregunta, SI_NO, Me.Caption) = vbYes Then
                objPrepGeneral.VentaCredito.Cliente.AceptaPromo303030 = True
                'ROL008-I
                blnEsProm303030 = True
                'ROL008-F
                ActualizaTotales
             Else
                objPrepGeneral.VentaCredito.Cliente.AceptaPromo303030 = False
                'ROL008-I
                blnEsProm303030 = False
                'ROL008-F
             End If
             'ActualizaTotales
          End If
          'ROL001-I
          'ROLVERDE-I
          If objPrepGeneral.VentaCredito.Cliente.CVerde128 Then
             blnEsCVerde128 = True
             ActualizaTotales
          Else
             blnEsCVerde128 = False
          End If
          'ROLVERDE-F
       Else
          'ROLMOTOELITE-I
          If objPrepGeneral.VentaCredito.Cliente.CMotoElite154 Then
             blnEsMotoElite154 = True
             ActualizaTotales
          Else
             blnEsMotoElite154 = False
          End If
          
          'If objPrepGeneral.VentaCredito.Cliente.EsCreditalika And (objPrepGeneral.VentaCredito.Cliente.ClienteV Or objPrepGeneral.VentaCredito.Cliente.ClienteAAA) Then
          If (objPrepGeneral.VentaCredito.Cliente.EsCreditalika Or (objPrepGeneral.VentaCredito.Cliente.EsMotoElite And blnEsMotoElite154)) And (objPrepGeneral.VentaCredito.Cliente.ClienteV Or objPrepGeneral.VentaCredito.Cliente.ClienteAAA) Then
          'ROLMOTOELITE-F
             MsgBox (" ¬°FELICIDADES!, Por tu buen historial crediticio, a la compra de tu moto se le otorgo un plazo mayor con una tasa de interes preferencial para que pagues menos")
          End If
       End If
       'ROL001-F
        
    'ROLREM-I
    '   If objFuncionalidad.EsPresupuestoCambaceo Then
    '      'Se actualizan los datos del cliente en la pantalla del presupuesto
    '      txtSucCliente = objPrepGeneral.VentaCredito.Cliente.NoTienda
    '      txtCliente = objPrepGeneral.VentaCredito.Cliente.CteID & objPrepGeneral.VentaCredito.Cliente.DigitoVer
    '      lblCliente.Caption = objPrepGeneral.VentaCredito.Cliente.CteNombre & " " & objPrepGeneral.VentaCredito.Cliente.CteAPaterno & " " & objPrepGeneral.VentaCredito.Cliente.CteAMaterno
    '   End If
    'ROLREM-F
        
       Exit Sub
        
ErrManejaCliente:
        frmMenuCliente.Visible = False
        frmContado.Enabled = True
        frmCredito.Enabled = True
        frmApartado.Enabled = True
        frmMenuCliente.Enabled = True
        frmMenuPrincipal.Enabled = True
        txtCodigo.Enabled = True
        frmPartidas.Enabled = True
        If InStr(1, Err.Description, "INF ") > 0 Or InStr(1, Err.Description, "NEXT ") > 0 Then
            'Err.Raise Err.Number, Err.Source, Err.Description
            objFuncionalidad.MuestraMensaje Mid(Err.Description, 5), Informacion, Aceptar, Me.Caption
        Else
            Call ManejaError(1, App, "txtCliente_keyDown", vbObjectError, "Imposible validar los datos del cliente " & vbCrLf & "Cadena:" & vbCrLf & "Descripcion: " & Err.Description, "")
        End If
    End Sub
    Private Sub txtCliente_KeyDown(KeyCode As Integer, Shift As Integer)
        Dim lbolClienteValido As Boolean
        Dim lbolGrabar As Boolean, lblnRequiereCliente As Boolean
        On Error GoTo ErrVB
        comprueba_puntuales
        MousePointer = vbHourglass
        lblnRequiereCliente = False
        
        
        objPrepGeneral.VentaCredito.Cliente.Enganche = Val(txtEnganche.Text)
        
        
        Select Case KeyCode
            Case vbKeyReturn
                
                'Si la venta es de tipo contado
                If objPrepGeneral.VentaCredito.TipoVenta = 1 Then
                    'si tiene garantia no se permite la venta mostrador
                    'ROLREM-I
                    'If TieneGarantia Or objPrepGeneral.VentaCredito.PromocionTDC > 0 Then lblnRequiereCliente = True
                    If objPrepGeneral.VentaCredito.PromocionTDC > 0 Then lblnRequiereCliente = True
                    'ROLREM-F
                    'si tiene es bien entregado no se permite la venta mostrador
                    If objPrepGeneral.VentaCredito.BienEntregado Or objPrepGeneral.VentaCredito.FolioMesa > 0 Then lblnRequiereCliente = True
                    If objPrepGeneral.VentaCredito.TipoVenta = 1 Then
                        If InStr(objPrepGeneral.VentaCredito.AnalizaTipoVenta, "4") = 0 Then lblnRequiereCliente = True
                    End If
                    
                    If Not lblnRequiereCliente Then
                        'Si no existe un cliente registrado previamente para esta venta
                        If Not objPrepGeneral.VentaCredito.CteID > 0 Then
                            
                            'If MsgBox("¬øEl cliente desea factura?", vbYesNo + vbQuestion + vbDefaultButton2, Me.Caption) = vbNo Then
                            If objFuncionalidad.MuestraMensaje("¬øEl cliente desea factura?", Pregunta, SI_NO, Me.Caption) = vbNo Then
                                lblGrabar.Enabled = True
                                
                                'Si no se desea factura, el tipo de venta es de mostrador
                                'La venta de mostrador corresponde al tipo 4
                                objPrepGeneral.VentaCredito.TipoVenta = 4
                                
                                'Se graba venta de mostrador
                                lblGrabar_Click
                                Exit Sub
    
                            End If
                        End If
            
                    End If
                End If
    
                
                'Se realiza la b'usqueda del cliente
                ManejaCliente lbolGrabar
    
        
        End Select
        MousePointer = vbArrow
        
        Exit Sub
ErrVB:
        MousePointer = vbArrow
        Call ManejaError(1, App, "txtCliente_keyDown", vbObjectError, "Imposible validar los datos del cliente", "")
    End Sub
    Private Sub MarcarTexto(pControl As Control)
        pControl.SelStart = 0
        pControl.SelLength = Len(Trim(pControl))
    End Sub
    
    
    Private Sub txtCodigo_GotFocus()
    
    'ABBR ERV Credito Inmediato
    'If bolCredInm And Not bolCredInmSKU Then
    
    'ABBR Credito Inmediato Motos. Abril/2015
    'If bolCredInm Then
    '    'Me.txtEnganche.Locked = True
    '    Me.txtPorcEnganche.Locked = True
    '
    '    'Me.txtEnganche.Enabled = False
    '    Me.txtPorcEnganche.Enabled = False
    'End If
    
        If gbolEntragrid Then
           gbolEntragrid = False
           gbolSaleTxt = True
           If grdPartidas.rows > 1 Then
                grdPartidas.SetFocus
           End If
        Else
            lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1039") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1038") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
            MarcarTexto txtCodigo
        End If
    End Sub
    Public Function SwitchVenta(ByVal pTipoVenta As eTipoVenta) As Boolean
        gbolRengonSel = 0
        SwitchVenta = objPrepGeneral.SwitchVenta(pTipoVenta)
            
    End Function
    
    Public Sub AgregaProductoAPartida(ByVal pcolDetalle As Object)
        Dim lintContPartidas As Integer
        Dim llDescPartidas As Long
        Dim mostrarSeguro As Boolean
        mostrarSeguro = False
        On Error GoTo ErrVB
        'COMPONENTE SEGUROS MOTOS Y VIDAMAX'
        frmPartidas.Visible = True
        frmTip.Visible = True
        grdPartidas.rows = pcolDetalle.Count() + 1
        bolSituar = True
        gobjSoftGoods.SoftGood = NO_TIENE_SOFT_GOODS
        gobjSoftGoods.HardGood = NO_TIENE_HARD_GOODS
        objPrepGeneral.PSemanalSoftGoods = 0
        
        'ROlREQ88710-I
        If VerificarDepto(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID) Then
           lbolEsmoto = True
        Else
           lbolEsmoto = False
        End If
        'ROlREQ88710 -F
        
        For lintContPartidas = 1 To pcolDetalle.Count
        
            'ROLREQ88710-I Quitar seguro moto si es rescate
            'validacion de combo motos o vidamax
            If VerificarDepto(pcolDetalle(lintContPartidas).producto.ProdID) Then
               mostrarSeguro = True
               If adnProductoResPuente.BProducRec = True Then
                  bolEsProdRescate = True
                  If bolSegMotoAgr Then
                     btnEliminarSeguroMotos_Click
                  Else
                     FrCtrlSeguroMotos.Enabled = False
                     FrCtrlSeguroMotos.Visible = False
                     btnSeguroMotos.Enabled = False
                     btnSeguroMotos.Visible = False
                     btnEliminarSeguroMotos.Enabled = False
                     btnEliminarSeguroMotos.Visible = False
                  End If
                   
                  If bolSegVidamaxAgr Then
                     btnEliminarSeguroVida_Click
                  Else
                     FrCtrlSeguroVidamax.Enabled = False
                     FrCtrlSeguroVidamax.Visible = False
                     btnAgregaVidamax.Enabled = False
                     btnAgregaVidamax.Visible = False
                     btnEliminarSeguroVida.Enabled = False
                     btnEliminarSeguroVida.Visible = False
                  End If
    '              If pcolDetalle.Count > 1 Then
    '                 Call EliminaPartida(2)
    '
    '              End If
               End If
            End If
            'ROLREQ88710-F Quitar seguro moto si es rescate
            
            grdPartidas.Row = lintContPartidas
            bolSituar = True
            grdPartidas.col = 0
            grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.ProdID
            '/* ERV Desgloce del descuento italika */
            llDescPartidas = funDesgloceDescuento(pcolDetalle(lintContPartidas).producto.ProdID)
            grdPartidas.col = 1
            grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.ProdDesc
            grdPartidas.col = 2
            'ROL007-I Precio de contado es igual a precio producto + descuento
            'If Not VerificarDepto(pcolDetalle(lintContPartidas).producto.ProdID) Then
            '    grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.ProdPrecio + llDescPartidas
            'Else
            '    grdPartidas.Clip = (ObtenerPrecioItalika(pcolDetalle(lintContPartidas).producto.ProdID) + llDescPartidas)
            'End If
            grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.ProdPrecio + llDescPartidas
            'ROL007-F
            grdPartidas.col = 3
            grdPartidas.Clip = IIf(pcolDetalle(lintContPartidas).Cantidad = 0, 1, pcolDetalle(lintContPartidas).Cantidad)
            grdPartidas.col = 4
            grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.Existencia
            grdPartidas.col = 5
        'NLFG Round -> Redondea
    '        grdPartidas.Clip = IIf(Round(pcolDetalle(lintContPartidas).DescuentoASCII) < 1 _
    '            , 0, IIf(PermitirDecimales, pcolDetalle(lintContPartidas).DescuentoASCII _
    '            , Int(pcolDetalle(lintContPartidas).DescuentoASCII)))
             'fix
             'grdPartidas.Clip = IIf(Redondea(pcolDetalle(lintContPartidas).DescuentoASCII) < 1
             grdPartidas.Clip = IIf(Round(pcolDetalle(lintContPartidas).DescuentoASCII) < 1 _
                , 0, IIf(PermitirDecimales, pcolDetalle(lintContPartidas).DescuentoASCII _
                , Int(pcolDetalle(lintContPartidas).DescuentoASCII))) + llDescPartidas
             
                
            ' ism   08/09/2004
            grdPartidas.col = 6
            'ROLREM-I
            'grdPartidas.Clip = IIf(Trim(objPrepGeneral.VentaCredito.CanalExterno) = "S" And pcolDetalle(lintContPartidas).FolioDesctoTienda < 0, grdPartidas.Clip, 0)
            grdPartidas.Clip = IIf(pcolDetalle(lintContPartidas).FolioDesctoTienda < 0, grdPartidas.Clip, 0)
            'ROLREM-F
            grdPartidas.col = 7
            'grdPartidas.Clip = pcolDetalle(lintContPartidas).Producto.ProdPrecio
            'grdPartidas.Clip = (pcolDetalle(lintContPartidas).PrecioChazxPartida - pcolDetalle(lintContPartidas).DesctoCredxPartida) * pcolDetalle(lintContPartidas).Cantidad  'NLFG
            'VHSG Se agrega el precio de contado tambien al subtotal
            'ROL007-I
            'If Not VerificarDepto(pcolDetalle(lintContPartidas).producto.ProdID) Then
            '    grdPartidas.Clip = (pcolDetalle(lintContPartidas).PrecioChazxPartida - pcolDetalle(lintContPartidas).DesctoCredxPartida) * pcolDetalle(lintContPartidas).Cantidad
            'Else
            '    grdPartidas.Clip = (ObtenerPrecioItalika(pcolDetalle(lintContPartidas).producto.ProdID) - pcolDetalle(lintContPartidas).DesctoCredxPartida) * pcolDetalle(lintContPartidas).Cantidad
            'End If
            grdPartidas.Clip = (pcolDetalle(lintContPartidas).producto.ProdPrecio - pcolDetalle(lintContPartidas).DesctoCredxPartida) * pcolDetalle(lintContPartidas).Cantidad
            'ROL007-F
            
            If bolRemate Then
                grdPartidas.col = 8
                grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.CodigoRemate
                gobjSoftGoods.HardGood = TIENE_HARD_GOODS
            Else
                If gobjSoftGoods.RevisaSiEsDeptoSoftGOODS(pcolDetalle(lintContPartidas).producto.Depto) Then
                    Set gobjSoftGoods.ColDetalleVenta = objPrepGeneral.VentaCredito.ColDetalleVenta
                    gobjSoftGoods.ObtenEngancheDefault
                    If gobjSoftGoods.fnImpVtaMinPrimeraCompraDefault < gobjSoftGoods.CalculaPrecioDETotalSinGEXTSoftGOODS Then
                        gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS
                    End If
                Else
                    gobjSoftGoods.HardGood = TIENE_HARD_GOODS
                End If
            End If
            
            bolSituar = False
            grdPartidas.col = 5
        
        Next
        
        'mostrar seguro motos o vidamax
        'ROLREQ88710-I Muestra OCX motos cuando sea un producto de moto
        If mostrarSeguro Then
           If FrCtrlSeguroMotos.Visible = False Then
              btnSeguroMotos.Visible = True
              FrCtrlSeguroMotos.Visible = True
              FrCtrlSeguroMotos.Enabled = True
              btnEliminarSeguroMotos.Visible = True
              
              If CtrlSeguroMotos.ExisteCombo = False Then
                 CtrlSeguroMotos.Usuario = NvoEnv.Usuario
                 CtrlSeguroMotos.Password = NvoEnv.Password
                 CtrlSeguroMotos.SkuMoto = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID
                 CtrlSeguroMotos.DescuentoMoto = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.PorcDescASCII
                 CtrlSeguroMotos.PrecioMoto = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdPrecio
                 CtrlSeguroMotos.EstacionTrabajo = NvoEnv.ObtenerEstacionTrabajoFisica
                 CtrlSeguroMotos.DibujaCombo
    
              End If
    '       Else
    '          Dim SkuSeguro As Long
    '          SkuSeguro = CtrlSeguroMotos.PrecioSeguro()
    '          SkuSeguro = CtrlSeguroMotos.SkuSeguro()
    '          If SkuSeguro > 0 Then
    '             txtCodigo.Text = CtrlSeguroMotos.SkuSeguro()
    '             txtCodigo_KeyDown vbKeyReturn, 1
    '             FrCtrlSeguroMotos.Enabled = False
    '          Else
    '             MsgBox "Debe seleccionar algun seguro"
    '          End If
           End If
        End If
        
        'ROLREQ88710-F Muestra OCX motos
        
        bolSituar = False
        
        grdPartidas.Enabled = grdPartidas.rows > 1
        If grdPartidas.Visible Then
            If grdPartidas.Enabled Then
                grdPartidas.SetFocus
            End If
        End If
         ResaltaShpVenta shp10pc, True
        Exit Sub
ErrVB:
        objFuncionalidad.MuestraMensaje Err.Number & vbCrLf & Err.Description & vbCrLf & Err.Source, Informacion, Aceptar, Me.Caption
    End Sub
    
    'ROLHON10-I
    Public Sub ActualizaProductoPartida(ByVal pcolDetalle As Object)
        Dim lintContPartidas As Integer
        Dim llDescPartidas As Long
        On Error GoTo ErrVB
        
        frmPartidas.Visible = True
        frmTip.Visible = True
        grdPartidas.rows = pcolDetalle.Count() + 1
        bolSituar = True
        gobjSoftGoods.SoftGood = NO_TIENE_SOFT_GOODS
        gobjSoftGoods.HardGood = NO_TIENE_HARD_GOODS
        objPrepGeneral.PSemanalSoftGoods = 0
        
        For lintContPartidas = 1 To pcolDetalle.Count
        
            grdPartidas.Row = lintContPartidas
            bolSituar = True
            grdPartidas.col = 0
            grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.ProdID
            llDescPartidas = funDesgloceDescuento(pcolDetalle(lintContPartidas).producto.ProdID)
            
    '        objPrepGeneral.objPresupuesto.MontoDesc10P = DescuentoHonduras10P(pcolDetalle(lintContPartidas).producto.ProdID)
    '        objPrepGeneral.VentaCredito.ColDetalleVenta(lintContPartidas).DesctoCredxPartida = DescuentoHonduras10P(pcolDetalle(lintContPartidas).producto.ProdID)
            pcolDetalle(lintContPartidas).DesctoCredxPartida = DescuentoHonduras10P(pcolDetalle(lintContPartidas).producto.ProdID)
            
            grdPartidas.col = 1
            grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.ProdDesc
            grdPartidas.col = 2
            grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.ProdPrecio
            grdPartidas.col = 3
            grdPartidas.Clip = IIf(pcolDetalle(lintContPartidas).Cantidad = 0, 1, pcolDetalle(lintContPartidas).Cantidad)
            grdPartidas.col = 4
            grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.Existencia
            grdPartidas.col = 5
              grdPartidas.Clip = IIf(Round(pcolDetalle(lintContPartidas).DescuentoASCII) < 1 _
                , 0, IIf(PermitirDecimales, pcolDetalle(lintContPartidas).DescuentoASCII _
                , Int(pcolDetalle(lintContPartidas).DescuentoASCII))) + objPrepGeneral.VentaCredito.ColDetalleVenta(lintContPartidas).DesctoCredxPartida
                ', Int(pcolDetalle(lintContPartidas).DescuentoASCII))) + objPrepGeneral.objPresupuesto.MontoDesc10P
            grdPartidas.col = 6
            'ROLREM-I
            'grdPartidas.Clip = IIf(Trim(objPrepGeneral.VentaCredito.CanalExterno) = "S" And pcolDetalle(lintContPartidas).FolioDesctoTienda < 0, grdPartidas.Clip, 0)
            grdPartidas.Clip = IIf(pcolDetalle(lintContPartidas).FolioDesctoTienda < 0, grdPartidas.Clip, 0)
            'ROLREM-F
            grdPartidas.col = 7
            'grdPartidas.Clip = (pcolDetalle(lintContPartidas).producto.ProdPrecio - pcolDetalle(lintContPartidas).DesctoCredxPartida - objPrepGeneral.objPresupuesto.MontoDesc10P) * pcolDetalle(lintContPartidas).Cantidad
            grdPartidas.Clip = (pcolDetalle(lintContPartidas).producto.ProdPrecio - pcolDetalle(lintContPartidas).DesctoCredxPartida) * pcolDetalle(lintContPartidas).Cantidad
            
            If gobjSoftGoods.RevisaSiEsDeptoSoftGOODS(pcolDetalle(lintContPartidas).producto.Depto) Then
               Set gobjSoftGoods.ColDetalleVenta = objPrepGeneral.VentaCredito.ColDetalleVenta
               gobjSoftGoods.ObtenEngancheDefault
               If gobjSoftGoods.fnImpVtaMinPrimeraCompraDefault < gobjSoftGoods.CalculaPrecioDETotalSinGEXTSoftGOODS Then
                  gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS
               End If
            Else
               gobjSoftGoods.HardGood = TIENE_HARD_GOODS
            End If
                    
            bolSituar = False
            grdPartidas.col = 5
        Next
        
        bolSituar = False
        
        grdPartidas.Enabled = grdPartidas.rows > 1
        If grdPartidas.Visible Then
            If grdPartidas.Enabled Then
                grdPartidas.SetFocus
            End If
        End If
         ResaltaShpVenta shp10pc, True
        Exit Sub
ErrVB:
        objFuncionalidad.MuestraMensaje Err.Number & vbCrLf & Err.Description & vbCrLf & Err.Source, Informacion, Aceptar, Me.Caption
    End Sub
    'ROLHON10-F
    
    
    '/* ERV Desgloce del descuento italika */
    Public Function funDesgloceDescuento(ProductoId As Long) As Long
    Dim strSQL              As String
    Dim conexion            As New ADODB.Connection
    Dim rs                  As ADODB.Recordset
    Dim lsTipoPromo         As String
    Dim lsProductos         As String
    Dim lsProductosCad      As String
    Dim strclasif           As String
    Dim liRestricCadena     As Integer
    Dim ColumnaInicio       As Integer
    Dim lsvaloProdIDGrid    As String
    
    
    On Error GoTo ErrDesgloceDescuento
    
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    strSQL = "SELECT ISNULL(fnPrdPrmDesc,0) AS DESCUENTO FROM PROD_PROM WITH(NOLOCK) WHERE fiProdId = " & ProductoId & " AND fiVigente = 1"
    
        Set rs = New ADODB.Recordset
        rs.ActiveConnection = conexion
        rs.CursorLocation = adUseClient
        rs.CursorType = adOpenDynamic
        rs.LockType = adLockReadOnly
        rs.Source = strSQL
        rs.Open
    
        If rs.RecordCount > 0 Then
            funDesgloceDescuento = rs("DESCUENTO").Value
        Else
            funDesgloceDescuento = 0
        End If
    
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Function
    
ErrDesgloceDescuento:
        If conexion.State = adStateOpen Then conexion.Close
        If rs.State = adStateOpen Then rs.Close
        Set conexion = Nothing
        Set rs = Nothing
    End Function
    
    'ROLHON10-I
    Public Function DescuentoHonduras10P(ProductoId As Long) As Long
    Dim strSQL              As String
    Dim conexion            As New ADODB.Connection
    Dim rs                  As ADODB.Recordset
    Dim VlPrecioProducto    As String
    On Error GoTo ErrDescuentoHonduras10P
    
       conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
       If conexion.State = adStateClosed Then
       End If
    
       strSQL = "SELECT fnProdPrecio AS PRODPRECIO FROM PRODUCTO WITH(NOLOCK) WHERE fiProdId = " & ProductoId
    
       Set rs = New ADODB.Recordset
       rs.ActiveConnection = conexion
       rs.CursorLocation = adUseClient
       rs.CursorType = adOpenDynamic
       rs.LockType = adLockReadOnly
       rs.Source = strSQL
       rs.Open
    
       If rs.RecordCount > 0 Then
          VlPrecioProducto = rs("PRODPRECIO").Value
       Else
          VlPrecioProducto = 0
       End If
    
       If conexion.State = adStateOpen Then conexion.Close
       
       If rs.State = adStateOpen Then rs.Close
       
       Set conexion = Nothing
       Set rs = Nothing
       
       DescuentoHonduras10P = VlPrecioProducto * 0.1
       
       If CInt(DescuentoHonduras10P) <= 35 Then
          DescuentoHonduras10P = 0
       End If
       
       Exit Function
    
ErrDescuentoHonduras10P:
       If conexion.State = adStateOpen Then conexion.Close
       If rs.State = adStateOpen Then rs.Close
       Set conexion = Nothing
       Set rs = Nothing
       DescuentoHonduras10P = 0
    End Function
    'ROLHON10-F
    
    Private Sub SeleccionaPlazoDefault(ByVal pobjAbono As Object, ByVal intRenglon As Integer, ByVal intColumnas As Integer)
    Dim lintCont As Integer
        If pobjAbono.Plazo = objPrepGeneral.PlazoEtiquetado Then
            If gintAbonoDefault <> 0 Then
                grdCredito.Row = gintAbonoDefault
                For lintCont = 0 To intColumnas
                    grdCredito.col = lintCont
                    grdCredito.CellBackColor = vbWhite
                    grdCredito.CellFontBold = False
                    grdCredito.CellForeColor = vbBlack
                Next
            End If
            grdCredito.Row = intRenglon
            gintAbonoDefault = intRenglon
            For lintCont = 0 To intColumnas
                grdCredito.col = lintCont
                grdCredito.CellBackColor = &HF8E6DE
                grdCredito.CellFontBold = True
                grdCredito.CellForeColor = &H800000
            Next
        ElseIf gintAbonoDefault = 0 Then
            gintAbonoDefault = intRenglon
            For lintCont = 0 To intColumnas
                grdCredito.col = lintCont
                grdCredito.CellBackColor = &HF8E6DE
                grdCredito.CellFontBold = True
                grdCredito.CellForeColor = &H800000
            Next
        End If
    End Sub
    
    'RIMT:
    Public Function ValidarPagoPuntual() As Boolean
    On Error GoTo ErrValidarPagoPuntual
    
    Dim strPPActivo, strSQL As String
    Dim con As New ADODB.Connection
    Dim rec As ADODB.Recordset
    Dim strmsj As String
    Dim i As Integer
    
    strPPActivo = ""
    i = 0
    
    'VHSG
    If con.State <> 0 Then
        con.Close
    End If
        
    con.Open "DSN=" & NvoEnv.DSN & ";UId=" & NvoEnv.Usuario & ";Pwd=" & NvoEnv.Password
    con.CursorLocation = adUseClient
    
    If con.State = adStateClosed Then
    End If
    
    Set rec = con.Execute("SELECT ISNULL(fcPrmVal,0) FROM parametro WITH (NOLOCK) WHERE fiPrmID=1311")
    
    If Not rec.EOF And Not rec.BOF Then
        i = rec.Fields(0).Value
        rec.Close
    Else
        strmsj = "No existe informaci√≥n en la Base de Datos"
        GoTo ErrValidarPagoPuntual
    End If
    
    ValidarPagoPuntual = i
    
    If con.State = adStateOpen Then con.Close
    If rec.State = adStateOpen Then rec.Close
    Set con = Nothing
    Set rec = Nothing
    
    Exit Function
    
ErrValidarPagoPuntual:
        If strmsj = "" Then strmsj = "Hubo un error en la consulta del pa√≠s para validaci√≥n del pago p√∫ntual"
        MsgBox strmsj, vbCritical + vbOKOnly, Me.Caption
        If con.State = adStateOpen Then con.Close
        If rec.State = adStateOpen Then rec.Close
        Set con = Nothing
        Set rec = Nothing
        ValidarPagoPuntual = False
    
    End Function
    
    Private Sub CargaAbonos(lcolAbonos As Object, lblnCreditoActivado As Boolean, lVentaCredito As Object)
    Dim lobjAbono As Object
    'ROL001-I
    Dim intNumReg As Integer
    'ROL001-F
        '3 Se verifica que la colecci√≥n de abonos tenga elementos
        If lcolAbonos.Count() > 0 Then
           'ROL001-I
           intNumReg = 0
            'ROL001-F
            Set lobjAbono = lcolAbonos.Item(1)
            grdCredito.rows = 1
            grdCredito.Row = 0
            
            gintAbonoDefault = 0
            gbolCambiaRenglon = True
            For Each lobjAbono In lcolAbonos
            'ROL001-I
            If lobjAbono.Periodo = NumPeriodoPago Then
            'ROL001-F
               'ROL001-I
               If lVentaCredito.Cliente.EsCreditalika Then
                 If lobjAbono.Plazo <= 102 Or lVentaCredito.Cliente.ClienteV Or lVentaCredito.Cliente.ClienteAAA Then
                  
                  If lobjAbono.Status And (lobjAbono.MontoAbono > 0 Or lobjAbono.MontoUAbono > 0) Then
                     If ValidarPagoPuntual Then
                        grdCredito.Cols = grdCredito.Cols + 1
                     End If
                     grdCredito.rows = grdCredito.rows + 1
                     grdCredito.Row = grdCredito.rows - 1
                     'Marca con un color distinto el plazo seleccionado
                     SeleccionaPlazoDefault lobjAbono, grdCredito.Row, grdCredito.Cols - 1
                     grdCredito.col = 0
                     grdCredito.Clip = lobjAbono.Plazo
                     grdCredito.col = 1
                     grdCredito.Clip = lVentaCredito.DesctoPromCredTot
                     grdCredito.col = 2
                     ''Se les pone formato para evitar problemas de decimales
                     grdCredito.Clip = IIf(PermitirDecimales, Format(lobjAbono.MontoAbono, "######.00"), Format(lobjAbono.MontoAbono, "######")) 'lobjAbono.MontoAbono '
                     
                     
                     If gintAbonoDefault = grdCredito.Row Then
                        LbSegAbo1 = "$" & IIf(PermitirDecimales, Format(lobjAbono.AboSegCreditalikaA1, "######.00"), Format(lobjAbono.AboSegCreditalikaA1, "######")) 'lobjAbono.MontoAbono '
                        LbSegAbo2 = "$" & IIf(PermitirDecimales, Format(lobjAbono.AboSegCreditalikaA2, "######.00"), Format(lobjAbono.AboSegCreditalikaA2, "######")) 'lobjAbono.MontoAbono '
                        LbSegAbo3 = "$" & IIf(PermitirDecimales, Format(lobjAbono.AboSegCreditalikaA3, "######.00"), Format(lobjAbono.AboSegCreditalikaA3, "######")) 'lobjAbono.MontoAbono '
                                               
                        LbAboITKSeg1 = "$" & IIf(PermitirDecimales, Format(lobjAbono.AboSegCreditalikaA1 + lobjAbono.MontoAbono, "######.00"), Format(lobjAbono.AboSegCreditalikaA1 + lobjAbono.MontoAbono, "######")) 'lobjAbono.MontoAbono '
                        LbAboITKSeg2 = "$" & IIf(PermitirDecimales, Format(lobjAbono.AboSegCreditalikaA2 + lobjAbono.MontoAbono, "######.00"), Format(lobjAbono.AboSegCreditalikaA2 + lobjAbono.MontoAbono, "######")) 'lobjAbono.MontoAbono '
                        LbAboITKSeg3 = "$" & IIf(PermitirDecimales, Format(lobjAbono.AboSegCreditalikaA3 + lobjAbono.MontoAbono, "######.00"), Format(lobjAbono.AboSegCreditalikaA3 + lobjAbono.MontoAbono, "######")) 'lobjAbono.MontoAbono '
                     End If
                     grdCredito.col = 3
                     grdCredito.Clip = IIf(PermitirDecimales, Format(lobjAbono.MontoUAbono, "######.00"), Format(lobjAbono.MontoUAbono, "######")) 'lobjAbono.MontoUAbono '
                     If ValidarPagoPuntual Then
                        grdCredito.col = 4  'pagop
                        grdCredito.Clip = IIf(PermitirDecimales, Format(lobjAbono.MontoPagoP, "######.00"), Format(lobjAbono.MontoPagoP, "######")) 'lobjAbono.MontoPagoP '
                        
                        
                        If gintAbonoDefault = grdCredito.Row Then
                           LbSegPun1 = "$" & IIf(PermitirDecimales, Format(lobjAbono.PunSegCreditalikaA1, "######.00"), Format(lobjAbono.PunSegCreditalikaA1, "######")) 'lobjAbono.MontoPagoP '
                           LbSegPun2 = "$" & IIf(PermitirDecimales, Format(lobjAbono.PunSegCreditalikaA2, "######.00"), Format(lobjAbono.PunSegCreditalikaA2, "######")) 'lobjAbono.MontoPagoP '
                           LbSegPun3 = "$" & IIf(PermitirDecimales, Format(lobjAbono.PunSegCreditalikaA3, "######.00"), Format(lobjAbono.PunSegCreditalikaA3, "######")) 'lobjAbono.MontoPagoP '
                              
                           LbPunITKSeg1 = "$" & IIf(PermitirDecimales, Format(lobjAbono.PunSegCreditalikaA1 + lobjAbono.MontoPagoP, "######.00"), Format(lobjAbono.PunSegCreditalikaA1 + lobjAbono.MontoPagoP, "######")) 'lobjAbono.MontoPagoP '
                           LbPunITKSeg2 = "$" & IIf(PermitirDecimales, Format(lobjAbono.PunSegCreditalikaA2 + lobjAbono.MontoPagoP, "######.00"), Format(lobjAbono.PunSegCreditalikaA2 + lobjAbono.MontoPagoP, "######")) 'lobjAbono.MontoPagoP '
                           LbPunITKSeg3 = "$" & IIf(PermitirDecimales, Format(lobjAbono.PunSegCreditalikaA3 + lobjAbono.MontoPagoP, "######.00"), Format(lobjAbono.PunSegCreditalikaA3 + lobjAbono.MontoPagoP, "######")) 'lobjAbono.MontoPagoP '
                        End If
                     End If
                     
                     
    
                     MuestraDatosAdicionales lobjAbono, grdCredito
                     lblnCreditoActivado = True
                     'Seguro creditalika
                     If (lVentaCredito.Cliente.ClienteV Or lVentaCredito.Cliente.ClienteAAA) And lVentaCredito.Plazo = 154 Then
                        FrameCredITK.Visible = True
                     End If
                  End If
                 End If
               Else
               'ROL001-F
                  'ROLMOTOELITE-I
                  'ROLVERDE-I 'ROL008-I
                  'If lobjAbono.Plazo <= 102 Or (lobjAbono.Plazo > 102 And blnEsProm303030) Or PaisTraduc <> 1 Or (lobjAbono.Plazo > 102 And blnEsCVerde128) Then
                  
                  
                  '' ERV - Guia - Productos de Rescate
                  If adnProductoResPuente.BProducRec = True Then
                  ' If adnProductoResPuente.IPlazoRec = lobjAbono.Plazo Then
                  
                    If InStr(adnProductoResPuente.SPlazoRec, lobjAbono.Plazo) Then
                     If lobjAbono.Plazo <= 102 Or (lobjAbono.Plazo > 102 And blnEsProm303030) Or PaisTraduc <> 1 Or (lobjAbono.Plazo > 102 And blnEsCVerde128) Or (lVentaCredito.Cliente.EsMotoElite And lobjAbono.Plazo > 102 And blnEsMotoElite154) Then
                       If lobjAbono.Status And (lobjAbono.MontoAbono > 0 Or lobjAbono.MontoUAbono > 0) Then
                          'RIMT:
                          If ValidarPagoPuntual Then
                             grdCredito.Cols = grdCredito.Cols + 1
                          End If
                                  
                          grdCredito.rows = grdCredito.rows + 1
                          grdCredito.Row = grdCredito.rows - 1
                          'Marca con un color distinto el plazo seleccionado
                          SeleccionaPlazoDefault lobjAbono, grdCredito.Row, grdCredito.Cols - 1
                          grdCredito.col = 0
                          grdCredito.Clip = lobjAbono.Plazo '& vbTab & lVentaCredito.DesctoPromCredTot & vbTab & _
                          lVentaCredito.DesctoPromCredTot & vbTab & lobjAbono.MontoAbono & vbTab & lobjAbono.MontoUAbono
                          grdCredito.col = 1
                          grdCredito.Clip = lVentaCredito.DesctoPromCredTot
                          grdCredito.col = 2
                          ''Se les pone formato para evitar problemas de decimales
                          grdCredito.Clip = IIf(PermitirDecimales, Format(lobjAbono.MontoAbono, "######.00"), Format(lobjAbono.MontoAbono, "######")) 'lobjAbono.MontoAbono '
                          grdCredito.col = 3
                          grdCredito.Clip = IIf(PermitirDecimales, Format(lobjAbono.MontoUAbono, "######.00"), Format(lobjAbono.MontoUAbono, "######")) 'lobjAbono.MontoUAbono '
                          'RIMT:
                          If ValidarPagoPuntual Then
                             grdCredito.col = 4  'pagop
                             grdCredito.Clip = IIf(PermitirDecimales, Format(lobjAbono.MontoPagoP, "######.00"), Format(lobjAbono.MontoPagoP, "######")) 'lobjAbono.MontoPagoP '
                          End If
                              
                          MuestraDatosAdicionales lobjAbono, grdCredito
                          'lblnCreditoActivado = True indica que se puede cargar la colecci√≥n de abonos
                          'de cr√©dito en el List View
                          'lblnCreditoActivado = False
                          lblnCreditoActivado = True
                       End If '4
                     End If
                    End If
                  
                  ElseIf lobjAbono.Plazo <= 102 Or (lobjAbono.Plazo > 102 And blnEsProm303030) Or PaisTraduc <> 1 Or (lobjAbono.Plazo > 102 And blnEsCVerde128) Or (lVentaCredito.Cliente.EsMotoElite And lobjAbono.Plazo > 102 And blnEsMotoElite154) Then
                    'ROL008-F   'ROLVERDE-F
                    'ROLMOTOELITE-F
                       ' 4 Para cada abono se verifica que tenga un estatus activo para agregarlo al list view de credito
                       If lobjAbono.Status And (lobjAbono.MontoAbono > 0 Or lobjAbono.MontoUAbono > 0) Then
                          'RIMT:
                          If ValidarPagoPuntual Then
                             grdCredito.Cols = grdCredito.Cols + 1
                          End If
                                  
                          grdCredito.rows = grdCredito.rows + 1
                          grdCredito.Row = grdCredito.rows - 1
                          'Marca con un color distinto el plazo seleccionado
                          SeleccionaPlazoDefault lobjAbono, grdCredito.Row, grdCredito.Cols - 1
                          grdCredito.col = 0
                          grdCredito.Clip = lobjAbono.Plazo '& vbTab & lVentaCredito.DesctoPromCredTot & vbTab & _
                          lVentaCredito.DesctoPromCredTot & vbTab & lobjAbono.MontoAbono & vbTab & lobjAbono.MontoUAbono
                          grdCredito.col = 1
                          grdCredito.Clip = lVentaCredito.DesctoPromCredTot
                          grdCredito.col = 2
                          ''Se les pone formato para evitar problemas de decimales
                          grdCredito.Clip = IIf(PermitirDecimales, Format(lobjAbono.MontoAbono, "######.00"), Format(lobjAbono.MontoAbono, "######")) 'lobjAbono.MontoAbono '
                          grdCredito.col = 3
                          grdCredito.Clip = IIf(PermitirDecimales, Format(lobjAbono.MontoUAbono, "######.00"), Format(lobjAbono.MontoUAbono, "######")) 'lobjAbono.MontoUAbono '
                          'RIMT:
                          If ValidarPagoPuntual Then
                             grdCredito.col = 4  'pagop
                             grdCredito.Clip = IIf(PermitirDecimales, Format(lobjAbono.MontoPagoP, "######.00"), Format(lobjAbono.MontoPagoP, "######")) 'lobjAbono.MontoPagoP '
                          End If
                              
                          MuestraDatosAdicionales lobjAbono, grdCredito
                          'lblnCreditoActivado = True indica que se puede cargar la colecci√≥n de abonos
                          'de cr√©dito en el List View
                          'lblnCreditoActivado = False
                          lblnCreditoActivado = True
                       End If '4
                    
                    'ROL008-I
                   ' End If
                   
                  '' ERV - Guia - Productos de Rescate
                  End If
                  
                  'ROL008-F
               'ROL001-I
               End If
               'ROL001-F
            'ROL001-I
            End If
            'ROL001-F
            Next
            gbolCambiaRenglon = False
            
            'VHSG 02/03/2012
    
            If lVentaCredito.EngancheTotal > 0 Then
                If Round(lVentaCredito.EngancheTotal / lVentaCredito.PrecioDETotal - lVentaCredito.DescuentoCredTotal, 4) = Round(lVentaCredito.PorcEngancheTotal, 4) Then
                    'txtEnganche
                Else
                    If VerificarDepto(CStr(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID)) Then
                        lVentaCredito.EngancheTotal = Round((lVentaCredito.PrecioDETotal - lVentaCredito.DescuentoCredTotal) * lVentaCredito.PorcEngancheTotal)
                    Else
                        
                        'ABBR Credito Inmediato Modificacion Febrero 2015
                        'If bolCredInm And Not bolCredInmSKU Then
                        
                        'ABBR Credito Inmediato Motos. Abril/2015
                        If bolCredInm Then
                        
                            'MsgBox "ABBR REvisar este calculo"
                            lVentaCredito.EngancheTotal = (lVentaCredito.PrecioAparTotal - lVentaCredito.DescuentoCredTotal) * lVentaCredito.PorcEngancheTotal
                            'ERROR lVentaCredito.EngancheTotal = (lVentaCredito.PrecioDETotalSinSeguro - lVentaCredito.DescuentoCredTotal) * lVentaCredito.PorcEngancheTotal
                            'lVentaCredito.EngancheTotal = (lVentaCredito.PrecioDETotal - lVentaCredito.DescuentoCredTotal) * lVentaCredito.PorcEngancheTotal
                        Else
                            lVentaCredito.EngancheTotal = (lVentaCredito.PrecioDETotal - lVentaCredito.DescuentoCredTotal) * lVentaCredito.PorcEngancheTotal
                        End If
                    
                        
                    End If
                End If
            End If
            
            'ABBR Credito Inmediato Modificacion Febrero 2015
            'If bolCredInm And Not bolCredInmSKU Then
            
            'ABBR Credito Inmediato Motos. Abril/2015
            If bolCredInm Then
                txtEnganche = Round(lVentaCredito.EngancheTotal)
            
            Else
                txtEnganche = lVentaCredito.EngancheTotal
            End If
            
            If DecXRec > 0 And CDbl(txtEnganche.Text) > 0 Then
               txtEnganche.Text = CDbl(txtEnganche.Text) - DecXRec
            End If
            
            If lVentaCredito.PrecioDETotal > 0 Then
            
                'ABBR Credito Inmediato Modificacion Febrero 2015
                'If bolCredInm And Not bolCredInmSKU Then
                
                'ABBR Credito Inmediato Motos. Abril/2015
                If bolCredInm Then
                    txtPorcEnganche = Round(lVentaCredito.PorcEngancheTotal * 100, 1)
                Else
                    If adnProductoResPuente.BProducRec = True Then
                       txtPorcEnganche = Round(lVentaCredito.PorcEngancheTotal * 100)
                    Else
                       txtPorcEnganche = lVentaCredito.PorcEngancheTotal * 100
                    End If
                    
                End If
                If DecXRec > 0 And CDbl(txtPorcEnganche.Text) > 0 Then
                   txtPorcEnganche.Text = IIf(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3) >= 0, Format(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3), "###0.00"), 0)
                End If
            End If
            
            'ABBR ERV Credito Inmediato Febrero 2015
            'If bolCredInm And Not bolCredInmSKU Then
            
            'ABBR Credito Inmediato Motos. Abril/2015
    '        If bolCredInm Then
    '            'Me.txtEnganche.Locked = True
    '            Me.txtPorcEnganche.Locked = True
    '
    '            'Me.txtEnganche.Enabled = False
    '            Me.txtPorcEnganche.Enabled = False
    '
    '        End If
    '
                
        End If '3
    End Sub
    
    Private Sub MuestraTotales(lVentaCredito As Object)
        'Datos venta de contado
        txtChaz = Round(lVentaCredito.PrecioChazTotal)
        'txtPrecio = Round(lVentaCredito.PrecioDETotal)
        txtPrecio = Round(lVentaCredito.PrecioDETotalSinSeguro)
        txtDescuento = Round(lVentaCredito.DescuentoContTotal)
        txtOtrosDesc = objPrepGeneral.VentaCredito.DesctoPromContTot
        
        'Datos venta de apartado
        lVentaCredito.CalculaTotalApartado
        lVentaCredito.CalculaDatosApartado objPrepGeneral.ItemPorcMinApartado, objPrepGeneral.ObtieneDiasMaxApartado
        gbolMontoMinApart = lVentaCredito.MontoAnticipoMin
        txtApart = lVentaCredito.MontoAnticipoMin
        txtFechaPago = lVentaCredito.FechaLimitePAgo
        txtTotalApartado = lVentaCredito.PrecioAparTotal
        'txtDEApartado = lVentaCredito.PrecioDETotal
        txtDEApartado = Round(lVentaCredito.PrecioDETotalSinSeguro)
        txtDescApartado = lVentaCredito.DescuentoApaTotal
        
        If lVentaCredito.BienEntregado > 0 Then
            txtTarifaBEN(0).Visible = True
            txtTarifaBEN(1).Visible = True
            lblTarifaBen(0).Visible = True
            lblTarifaBen(1).Visible = True
            
            txtTarifaBEN(0).Text = lVentaCredito.TotTarifaBENCont
            txtTarifaBEN(1).Text = lVentaCredito.TotTarifaBENCred
        End If
            If gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS Then
            If gobjSoftGoods.HardGood = NO_TIENE_HARD_GOODS Then
                objPrepGeneral.VentaCredito.abono = 0
            Else
                If frmPrepa.grdCredito.rows > 1 Then
                    frmPrepa.grdCredito.Row = 1
                    frmPrepa.grdCredito.SetFocus
                End If
            End If
            CalculaPlazosDeSOFTGOODS
            
        End If
    
        
    End Sub
    Public Sub ActualizaPrecioTDC(ByVal pcolDetalle As Object)
        Dim lintContPartidas As Integer
        On Error GoTo ErrVB
        
        If Not pcolDetalle Is Nothing Then
            For lintContPartidas = 1 To pcolDetalle.Count
                grdPartidas.Row = lintContPartidas
                bolSituar = True
                grdPartidas.col = 2
                grdPartidas.Clip = pcolDetalle(lintContPartidas).producto.ProdPrecio
                grdPartidas.col = 5
                grdPartidas.Clip = pcolDetalle(lintContPartidas).DescuentoASCII
                grdPartidas.col = 7
                grdPartidas.Clip = pcolDetalle(lintContPartidas).PrecioChazxPartida - pcolDetalle(lintContPartidas).DesctoCredxPartida
            Next
        End If
        
        Exit Sub
ErrVB:
        objFuncionalidad.MuestraMensaje Err.Number & vbCrLf & Err.Description & vbCrLf & Err.Source, Informacion, Aceptar, Me.Caption
    End Sub
    Public Sub ActualizaTotales(Optional TAZ As Integer = 0)
        Dim lcolAbonos As Object
        Dim lVentaCredito As Object
        Dim pobjventa As Object
        
        ''16-12-2005 frps cambio para poder actualizar las tasas para el c√≥digo 888888
        ''04-01-2006 frps cambio para poder actualizar las tasas para los paquetes, no entran
        ''los art√≠culos de c√≥mputo ni celulares que son del depto 400
        Dim lintnarticulos As Integer
        Dim ldblPrecioPaquete As Double
        Dim lintContador As Integer
        'ROL001-I
        Dim CnPlazoSemanal As Integer
        Dim CnPlazoQuincenal As Integer
        Dim CnPlazoMensual As Integer
        'ROL001-F
        
       
        lintnarticulos = 0
        ldblPrecioPaquete = 0
        
    
    
        For Each pobjventa In objPrepGeneral.VentaCredito.ColDetalleVenta
        If pobjventa.producto.Depto = 700 And pobjventa.Cantidad > 1 Then
        'Mecanica de Llantas
           For lintContador = 1 To pobjventa.Cantidad
               ldblPrecioPaquete = ldblPrecioPaquete + pobjventa.producto.ProdPrecio
               lintnarticulos = lintnarticulos + 1
           Next
        Else
            For lintContador = 1 To pobjventa.Cantidad
                ''tampoco se deben de tomar en cuenta los SOFTGOODS
                If pobjventa.producto.Depto = 400 Or pobjventa.esSOFTGOOD Or (pobjventa.producto.EsSeguro = True) Then
                    'lintnarticulos = IIf(lintnarticulos > 0, lintnarticulos - 1, 0)
                Else
                    ldblPrecioPaquete = ldblPrecioPaquete + pobjventa.producto.ProdPrecio
                    lintnarticulos = lintnarticulos + 1
                End If
            Next
        End If
        Next
        
        'ROL001-I
         Call objPrepGeneral.ActualizaTasasProductos(ldblPrecioPaquete, lintnarticulos, TAZ)
    
         CnPlazoSemanal = objPrepGeneral.VentaCredito.CnPlazosSem
         CnPlazoQuincenal = objPrepGeneral.VentaCredito.CnPlazosQui
         CnPlazoMensual = objPrepGeneral.VentaCredito.CnPlazosMen
    
         If CnPlazoQuincenal <= 0 Then
            chkQuincenal.Value = False
            chkQuincenal.Visible = False
         End If
         
         If CnPlazoMensual <= 0 Then
            chkMensual.Value = False
            chkMensual.Visible = False
         End If
         
         If CnPlazoSemanal <= 0 Then
            chkSemanal.Value = False
            chkSemanal.Visible = False
         End If
         'ROL001-F
         'Fin
        
        Set lcolAbonos = objPrepGeneral.VentaCredito.ColAbonos
        Set lVentaCredito = objPrepGeneral.VentaCredito
        Dim lblnCreditoActivado As Boolean
        gbolRengonSel = grdCredito.Row 'Guarda Plazo Seleccionado
        
        lblnCreditoActivado = False
        
        ActivaFrames objPrepGeneral.VentaCredito.AnalizaTipoVenta
        
        ActivaTiposDeCredito objPrepGeneral.VentaCredito.AnalizaTipoCredito
        
        lblImprimir.Enabled = grdPartidas.rows > 1
        
        If objPrepGeneral.VentaCredito.TipoVenta = 2 Then
        
        
            If Not lcolAbonos Is Nothing Then
        
                'objPrepGeneral.ActualizaPorcEnganche (lVentaCredito.PorcEngancheTotal * 100), 1
            
                'Datos venta de credito
                '2 Se verifica que existan partidas
        
                If grdPartidas.rows > 1 Then
        
                    CargaAbonos lcolAbonos, lblnCreditoActivado, lVentaCredito
        
                End If '2
        
                If grdCredito.Visible And grdCredito.Enabled Then
        
        '            grdCredito.SetFocus
        
                End If
                
            End If '1 Verificaci√≥n
            
            'Si lblnCreditoActivado = false no se deben cargar los abonos en el list view de cr√©dito
            If lblnCreditoActivado Then
                frmCredito.Enabled = True
                
                'Permite asignar los datos del abono a la venta
                'grdCredito.Row = gintAbonoDefault
                 'grdCredito.Row = IIf((gbolRengonSel < grdCredito.Rows) And (gbolRengonSel <> gintAbonoDefault And gbolRengonSel > 0) And (objPrepGeneral.PlazoEtiquetado <> objPrepGeneral.VentaCredito.Plazo Or objPrepGeneral.VentaCredito.Plazo > 0), gbolRengonSel, gintAbonoDefault)
                If objPrepGeneral.VentaCredito.Plazo <> 0 Then
                  grdCredito.Row = IIf(gbolRengonSel <> gintAbonoDefault And gbolRengonSel < grdCredito.rows, gbolRengonSel, gintAbonoDefault)
                  'grdCredito.Row = IIf((gbolRengonSel < grdCredito.Rows) And (gbolRengonSel <> gintAbonoDefault And gbolRengonSel > 0) And (objPrepGeneral.PlazoEtiquetado <> objPrepGeneral.VentaCredito.Plazo Or objPrepGeneral.VentaCredito.Plazo > 0), gbolRengonSel, gintAbonoDefault)
                Else
                   grdCredito.Row = gintAbonoDefault
                End If
                
                'pepe madreador-I
                grdCredito_Click
                'grdCredito_DblClick
                'AjustaColumnasCredito
                'pepe madreador-F
            Else
                grdCredito.rows = 1
                frmCredito.Enabled = False
                frmPrepa.shpCredito.BackColor = &HF7F7F7
                frmPrepa.lblCredito.BackColor = &HF7F7F7
            End If
        End If
        
        'Muestra los totales de contado y apartado
        MuestraTotales lVentaCredito
        
        
        'MsgBox "abbr revisar"
        
        'ABBR Credito Inmediato Nuevo
        'If bolCredInm And Not bolCredInmSKU Then
        
        'ABBR Credito Inmediato Motos. Abril/2015
        If bolCredInm Then
            Dim val1 As String
            Dim Porcentaje As String
        
        If objPrepGeneral.VentaCredito.TotalEngFinan <> "" Then
        
            If objPrepGeneral.VentaCredito.TotalEngFinan = 0 Then
                val1 = frmPrepa.txtEnganche.Text
            Else
                val1 = objPrepGeneral.VentaCredito.TotalEngFinan
                frmPrepa.txtEnganche.Text = val1
            End If
            
    'MsgBox "ABBR REvisar..."
            If CDbl(objPrepGeneral.VentaCredito.PrecioAparTotal) > 0 Then
            'If CDbl(objPrepGeneral.VentaCredito.PrecioDETotalSinSeguro) > 0 Then
                Porcentaje = (CDbl(val1) * 100) / CDbl(objPrepGeneral.VentaCredito.PrecioAparTotal)
                'Porcentaje = (CDbl(Val1) * 100) / CDbl(objPrepGeneral.VentaCredito.PrecioDETotalSinSeguro)
                'objPrepGeneral.VentaCredito.ModificaEnganche CDbl(frmPrepa.txtEnganche.Text), 0, 0
            ModificaEngancheCreditoInm 2, 4, CDbl(Porcentaje), 1
         
            CargaAbonos lcolAbonos, lblnCreditoActivado, lVentaCredito
         
            If lblnCreditoActivado Then
                frmCredito.Enabled = True
                
                'Permite asignar los datos del abono a la venta
                'grdCredito.Row = gintAbonoDefault
                 'grdCredito.Row = IIf((gbolRengonSel < grdCredito.Rows) And (gbolRengonSel <> gintAbonoDefault And gbolRengonSel > 0) And (objPrepGeneral.PlazoEtiquetado <> objPrepGeneral.VentaCredito.Plazo Or objPrepGeneral.VentaCredito.Plazo > 0), gbolRengonSel, gintAbonoDefault)
                
                If gbolRengonSel <> gintAbonoDefault Then
                    Selecciona 1, False, grdCredito
                End If
                
                If objPrepGeneral.VentaCredito.Plazo <> 0 Then
                  grdCredito.Row = IIf(gbolRengonSel <> gintAbonoDefault And gbolRengonSel < grdCredito.rows, gbolRengonSel, gintAbonoDefault)
                  'grdCredito.Row = IIf((gbolRengonSel < grdCredito.Rows) And (gbolRengonSel <> gintAbonoDefault And gbolRengonSel > 0) And (objPrepGeneral.PlazoEtiquetado <> objPrepGeneral.VentaCredito.Plazo Or objPrepGeneral.VentaCredito.Plazo > 0), gbolRengonSel, gintAbonoDefault)
                Else
                   grdCredito.Row = gintAbonoDefault
                End If
                'pepe madreador-I
                grdCredito_Click
                'grdCredito_DblClick
                'AjustaColumnasCredito
                'pepe madreador-F
    
                
            Else
                grdCredito.rows = 1
                frmCredito.Enabled = False
                frmPrepa.shpCredito.BackColor = &HF7F7F7
                frmPrepa.lblCredito.BackColor = &HF7F7F7
            End If
            
            
         
         Dim liRow As Integer
                   
                   
         
    '     liRow = gintRenglonC
    '
    '     Selecciona 1, False, grdCredito
    '     Selecciona gintRenglonC, False, grdCredito
    '     Selecciona liRow, True, grdCredito
                
            End If
            
        End If
                               
         
         'CargaAbonos lcolAbonos, lblnCreditoActivado, lVentaCredito
         'txtEnganche_KeyDown vbKeyReturn, 1
        End If
        
    '     If bolCredInm And Not bolCredInmSKU Then
    '        Dim Val1 As String
    '        Val1 = objPrepGeneral.VentaCredito.TotalEngFinan
    '        Me.txtEnganche.Text = Val1
    '        txtEnganche_KeyDown vbKeyReturn, 1
    '
    '    End If
        
        '88710 actualiza combo vidamax
    '    Dim esConsumo As Boolean
    '    Dim Venta As Integer
    '    For Venta = 1 To objPrepGeneral.VentaCredito.ColDetalleVenta.Count
         '    Next
    '
    '    'ROLREQ88710-I No mostrar seguro si es producto de rescate
        If objPrepGeneral.VentaCredito.Cliente.Folio <> 0 And objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp <> 0 And adnProductoResPuente.BProducRec = False And objPrepGeneral.VentaCredito.Plazo <= 128 And lbolEsmoto = False Then
    '    'ROLREQ88710-F No mostrar seguro si es producto de rescate
    
           If bolSegVidamaxAgr = False Then
           
           
              FrCtrlSeguroVidamax.Visible = True
              FrCtrlSeguroVidamax.Enabled = True
              btnEliminarSeguroVida.Visible = True
              btnEliminarSeguroVida.Enabled = False
              btnAgregaVidamax.Visible = True
              btnAgregaVidamax.Enabled = True
              CtrlSeguroVidamax.Usuario = NvoEnv.Usuario
              CtrlSeguroVidamax.Password = NvoEnv.Password
              CtrlSeguroVidamax.EstacionTrabajo = NvoEnv.ObtenerEstacionTrabajoFisica
              CtrlSeguroVidamax.Periodo = objPrepGeneral.VentaCredito.Periodo
              CtrlSeguroVidamax.Plazo = objPrepGeneral.VentaCredito.Plazo
              CtrlSeguroVidamax.ProduictoID = objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID
              CtrlSeguroVidamax.CapacidadPago = (objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp - Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 4)))
              CtrlSeguroVidamax.PaisCU = objPrepGeneral.VentaCredito.Cliente.Pais
              CtrlSeguroVidamax.CanalCU = objPrepGeneral.VentaCredito.Cliente.Canal
              CtrlSeguroVidamax.SucursalCU = objPrepGeneral.VentaCredito.Cliente.SucursalOrigen
              CtrlSeguroVidamax.fiFolioCU = objPrepGeneral.VentaCredito.Cliente.Folio
              If Not CtrlSeguroVidamax.ExisteCombo Then
                 CtrlSeguroVidamax.DibujaCombo
              End If
           End If
        End If
    '    '88710 actualiza combo vidamax termina
            
    End Sub
    
    '' Validacion del codigo de keydown cuando valida el sku si  es italika,consumo o telefonia
    '' Jocampom
    '' ===============================================================
    Public Sub txtCodigo_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim lintNegocioBase As Integer
    Dim lintRepeticiones As Integer
    Dim lintTotalProductosDeRemate As Integer
    Dim lobjColRemates As Collection
    Dim lintProdId As Long
    Dim isTelefonia As Boolean
    isTelefonia = False
    On Error GoTo ErrVB
    
    
            'ABBR ERV Credito Inmediato Febrero 2015
            'If bolCredInm And Not bolCredInmSKU Then
            
            'ABBR Credito Inmediato Motos. Abril/2015
    '        If bolCredInm Then
    '            'Me.txtEnganche.Locked = True
    '            Me.txtPorcEnganche.Locked = True
    '
    '            'Me.txtEnganche.Enabled = False
    '            Me.txtPorcEnganche.Enabled = False
    '
    '        End If
    '
            
      If bolRemate Then 'En esta parte entraran productos cuando el se trata de remates, ya sea canje o presupuesto normal
          If frmPrepa.grdPartidas.Cols <> 9 Then
            AjustaColumnasPartidas
          End If
      
          lintRepeticiones = 0
          lintTotalProductosDeRemate = 0
          txtCodigo = ""
          
          'Solamente se muestra el grid para buscar remates cuando no se trata de canjes
          If StatusCanje <> CanjeProductoEncontrado Then
            Set lobjColRemates = ObtenColeccionDeRemates
          End If
          
          'Si StatusCanje = CanjeProductoEncontrado se trata de un canje
          If (Not lobjColRemates Is Nothing) Or (StatusCanje = CanjeProductoEncontrado) Then
          
              If Not lobjColRemates Is Nothing Then 'Es el total de productos obtenidos a traves del grid de remates para presupuesto
                lintTotalProductosDeRemate = lobjColRemates.Count
              Else
                If StatusCanje = CanjeProductoEncontrado Then 'Solamente es un producto que se obtuvo a traves del canje
                    lintTotalProductosDeRemate = 1
                End If
              End If
              
              For lintRepeticiones = 1 To lintTotalProductosDeRemate
                  MousePointer = vbHourglass
          
                  'Si StatusCanje = CanjeProductoEncontrado, gobjProductoRemate ya fue establecido en la funcion lblCanje_Click
                  If StatusCanje <> CanjeProductoEncontrado Then
                    Set gobjProductoRemate = lobjColRemates.Item(lintRepeticiones)
                  End If
          
                  txtCodigo = ""
                  
                  txtCodigo = gobjProductoRemate.ProdID
          
                  ObtenerCodigo
                  
                  ObtenerDatosPromocion
                  
                  gbol1Sem = True
                  'lblCredito_Click
                  ActivaVentaSeleccionada
                  'IluminaEtiqueta lbl1aSem, shp1aSem
      
                  MousePointer = vbArrow
              Next
          End If
          
      Else
          Select Case KeyCode
              Case vbKeyReturn
                  
                  MousePointer = vbHourglass
                  'ROL001-I
                  blnEsSemanal = chkSemanal.Value
                  blnEsQuincenal = chkQuincenal.Value
                  blnEsMensual = chkMensual.Value
                  'ROL001-I
                  
                  ''vALIDA SKU TELEFONIA
                  If IsNumeric(frmPrepa.txtCodigo.Text) Then
                    If VerificarCodigoSKUTelefonia(txtCodigo.Text) = True Then
                         isTelefonia = True
                         Else
                          isTelefonia = False
                      End If
                  End If
                  
                     If isTelefonia Then
                      muestraFormTelefonia
                     cargaTablaDesProductoTelefonia
                      Debug.Print
                        End If
                        
                  If isTelefonia = False Then
                  
                  'ROLREQ88710-I
                  If bolSegMotoAgrXBoton = False Then
                     If ObtenerCodigoSeguroAgr Then
                        MsgBox ("El seguro solo puede ir ligado a una moto o mercancia")
                        'MsgBox ("Codigo no valido")
                        frmPrepa.txtCodigo = ""
                        frmPrepa.txtCodigo.SetFocus
                        Exit Sub
                     End If
                  Else
                     bolSegMotoAgrXBoton = False
                  End If
                  'ROLREQ88710-F
                  
                  ObtenerCodigo
                  'If objPrepGeneral.VentaCredito.ColDetalleVenta.Count > 0 Then
                  '  If EsProdAdicionalPaq(objPrepGeneral.VentaCredito.ColDetalleVenta.Item(1).Producto.ColPromociones.ColPromociones) Then ObtenerCodigo True
                  'Else
                  '  Exit Sub
                  'End If
                  
                  gbol1Sem = True
                  'lblCredito_Click
                  ActivaVentaSeleccionada
                  'IluminaEtiqueta lbl1aSem, shp1aSem
               End If
                  MousePointer = vbArrow
          End Select
      End If
    Exit Sub
ErrVB:
    
        'Call AgregaError(App, "frmPrepa.txtCodigo_KeyDown", Err.Number, Err.Description, "", "")
    End Sub
    
    'ROLREQ88710-I
    Public Function ObtenerCodigoSeguroAgr() As Boolean
    'DeclaroVariables Locales
    Dim NRC_Conecta As ADODB.Connection
    Dim NRC_Reg As ADODB.Recordset
    Dim datospromo() As String
    Dim StrCadConsulta As String
    Dim lintSkuProdAgr As Long
    
    On Error GoTo errores
    
    lintSkuProdAgr = Val(frmPrepa.txtCodigo.Text)
    ObtenerCodigoSeguroAgr = False
    
    'StrCadConsulta = "select fiprodid from PRODUCTO P with(nolock) where fiProdId=" & lintSkuProdAgr & " and dbo.fnValidaSiAplicaReglaPorSku(419," & lintSkuProdAgr & ")=1"
    StrCadConsulta = "select fiprodid from PRODUCTO P with(nolock) inner join ProClasificacionFija pcf with(nolock) on p.fiDepto = pcf.fidepto and p.fisubdepto = pcf.fisubdepto and p.ficlase = pcf.ficlase and p.fisubclase = pcf.fisubclase where fiProdId= " & lintSkuProdAgr & " and pcf.fireglaid in ( 419,826)"
    
    
    Set NRC_Conecta = New ADODB.Connection
        
    If NRC_Conecta.State <> 0 Then
       NRC_Conecta.Close
    End If
    
    NRC_Conecta.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    NRC_Conecta.CursorLocation = adUseClient
      
    
    Set NRC_Reg = NRC_Conecta.Execute(StrCadConsulta)
      
    If NRC_Reg.RecordCount > 0 Then
    
        ObtenerCodigoSeguroAgr = True
    
    Else
        ObtenerCodigoSeguroAgr = False
    
    End If
        
    If NRC_Conecta.State = adStateOpen Then NRC_Conecta.Close
    If NRC_Reg.State = adStateOpen Then NRC_Reg.Close
    
    Exit Function
errores:
        MsgBox Err.Description
        If NRC_Conecta.State <> 0 Then
            NRC_Conecta.Close
        End If
        Exit Function
    End Function
    'ROLREQ88710-F
    
    
    
    Private Sub ActivaVentaSeleccionada()
     'If Not (gbol1aSemSel Or gbol10pcSel Or gbol5pcSel Or gbolCPlusSel) Then gbol1aSemSel = True
     'Se modifico para determinar que ficha se selecciona de entrada
     If Not (gbol1aSemSel Or gbol10pcSel Or gbol5pcSel Or gbolCPlusSel) Then
        gbol1aSemSel = IIf(objPrepGeneral.VentaCredito.TipoCredito = 1, True, False)
        gbol10pcSel = IIf(objPrepGeneral.VentaCredito.TipoCredito = 2, True, False)
        gbol5pcSel = IIf(objPrepGeneral.VentaCredito.TipoCredito = 3, True, False)
        gbolCPlusSel = IIf(objPrepGeneral.VentaCredito.TipoCredito = 5, True, False)
     End If
     If gbol1aSemSel Then lbl1aSem_Click
     If gbol10pcSel Then lbl10pc_Click
     If gbol5pcSel Then lbl5pc_Click
     If gbolCPlusSel Then lblCredPlus_Click
     ResaltaShpVenta shp10pc, True
    End Sub
    Public Sub OnKeyGoSub(KeyCode As Integer, Shift As Integer)
        'Esta funci√≥n es especial para McCabe
        'Se debe definir si se utilizar√° de esta forma o se modificar√° para que cumpla con los
        'est√°ndares de McCabe
        Dim lsCodigo As String
        If Shift = vbCtrlMask Then
            Select Case KeyCode
                Case vbKeyA
                    lblCatalogo_Click
    'ROLREM-I
    '            Case vbKeyB
    '            'Case vbKeyC
    '            Case vbKeyC
    '                lblCambaceo_Click
    'ROLREM-F
                Case vbKeyD
                    lblDatos_Click
                Case vbKeyE
                    lbl10pc_Click
                'Case vbKeyF
                Case vbKeyG
                    lblCatClientes_Click
                'Case vbKeyH
                Case vbKeyI
                    lblImprimir_Click
                Case vbKeyJ
                    lblCanje_Click
                'Case vbKeyK
                Case vbKeyL
                    lblLinExt_Click
                Case vbKeyM
                    lblSimilares_Click
                Case vbKeyN
                    lblComplementos_Click
                Case vbKeyO
                    lblInventarioOT_Click
                Case vbKeyP
                    lblPromociones_Click
                'Case vbKeyQ
                Case vbKeyR
                    lblCaracteristicas_Click
                'Case vbKeyS
                'Case vbKeyT
                Case vbKeyU
                    lblGrabar_Click
                'Case vbKeyV
                Case vbKey5
                    lbl5pc_Click
                Case vbKey6
                    lblCredito_Click
                Case vbKey7
                    lblContado_Click
                Case vbKey8
                    lblApartado_Click
                Case vbKey1
                    lbl1aSem_Click
            End Select
        Else
            Select Case KeyCode
                Case vbKeyEscape
                    lblSalir_Click
                Case vbKeyF1
                    'MsgBox ""
                Case vbKeyF2
                    If ActiveControl.Name = "txtCodigo" Then
                        lblCatalogo_Click
                    ElseIf ActiveControl.Name = "txtCliente" Then
                        lblCatClientes_Click
                    End If
                Case vbKeyF4
                    lsCodigo = objFuncionalidad.LeeCodigodeBarras()
                    If Val(lsCodigo) > 0 Then
                        txtCodigo.Text = Trim(lsCodigo)
                        txtCodigo_KeyDown vbKeyReturn, 1
                    End If
                Case vbKeyF9
                    lblGrabar_Click
                Case vbKeyF10
                    lblImprimir_Click
            End Select
        End If
    End Sub
    
    Public Sub InicializaControles()
        Dim lintCont As Integer
        'frmTip.Visible = False
        
        'ECG. ATM
        blnEsATM = False
        frmATM.Visible = False
        frmATM2.Visible = False
        frmATM.ZOrder vbSendToBack
        frmATM2.ZOrder vbSendToBack
        lblATM.Enabled = True
        
        frmPartidas.Visible = False
        frmPartidas.Enabled = True
        
        frmMenuPrincipal.Visible = True
        frmMenuPrincipal.Enabled = True
        
        frmApartado.Visible = False
        frmApartado.Enabled = True
        
        frmContado.Visible = False
        frmContado.Enabled = True
        
        If Not objFuncionalidad.EsPresupuestoCambaceo Then frmMenuCliente.Visible = False
        
        frmMenuCliente.Enabled = True
        txtSucCliente.Enabled = True
        txtSucCliente = ""
        txtCliente.Enabled = True
        txtCliente.Text = ""
        lblCliente.Caption = ""
        
        frmCredito.Visible = False
        frmCredito.Enabled = True
        lblCredPlus.Top = lbl5pc.Top
        lblCredPlus.Left = lbl5pc.Left
        lblCredPlus.Visible = False
        shpCredPlus.Visible = False
        shpCredPlus.Top = shp5pc.Top
        shpCredPlus.Left = shp5pc.Left
        
        lbl1aSem.Top = lbl5pc.Top
        lbl1aSem.Left = lbl5pc.Left
        lbl1aSem.Visible = False
        shp1aSem.Visible = False
        shp1aSem.Top = shp5pc.Top
        shp1aSem.Left = shp5pc.Left
        
        bytTipoVenta = tvCreditoConv
        lblAyuda.Caption = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
        
        'VHSG
        Me.Caption = NvoEnv.NumeroTienda & " " & NvoEnv.NombreTienda & " " & "Presupuesto"
        
        'Se modifica el grid de partidas con las columnas default
        AjustaColumnasPartidas
        
        'Se modifica el list view de cr√©dito con las columnas default
        AjustaColumnasCredito
        
        'Se modifica el list view de SOFTGOODS con las columnas default
        ConfiguraGridCreditoRopa
        
        imgElektra(0).Picture = LoadPicture(LOGO_JPG)
        imgRayo.Picture = LoadPicture(RAYO_JPG)
        
        For lintCont = 0 To imgBarra.Count - 1
            imgBarra(lintCont).Picture = LoadPicture(BARRA_JPG)
        Next
        
        picNavegador.Picture = LoadPicture(NAVEGADOR_JPG)
        If Not objFuncionalidad.EsPresupuestoCambaceo Then lblGrabar.Enabled = False
        'ReajustaColorOpcion frmPrepa.lblGrabar
        
        
        'ABBR Credito Inmediato Modificacion Febrero 2015
        PorcentajeCredInm = ""
        CantidadCredInm = ""
        bolCredInm = False
        bolCredInmSKU = False
        
        
        'Ajusta controles del grid de telefonia
        '===========================
        AjustaColumnasCreditoTelefonia
    End Sub
    
    Private Sub AjustaColumnasPartidas()
        bolSituar = True
        If bolRemate Then
            frmPrepa.grdPartidas.Cols = 9
        Else
            frmPrepa.grdPartidas.Cols = 8
        End If
        With frmPrepa.grdPartidas
        .Font.Size = 10
        .Row = 0
        
        .col = 0
        .Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1018")
        .ColWidth(0) = IIf(bolRemate, 800, 1000)
        
        .col = 1
        .Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1019")
        .ColWidth(1) = 3500
        
        .col = 2
        .Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1020")
        .CellAlignment = 6
        .ColWidth(2) = IIf(bolRemate, 800, 1500)
        
        .col = 3
        .Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1021")
        .CellAlignment = 6
        .ColWidth(3) = 750
        
        .col = 4
        .Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1022")
        .CellAlignment = 6
        .ColWidth(4) = 800
        
        .col = 5
        .Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1023")
        .CellAlignment = 6
        .ColWidth(5) = 1000
        
        .col = 6
        .Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1024")
        .CellAlignment = 6
        .ColWidth(6) = 1000
        
        .col = 7
        .Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1025")
        .CellAlignment = 6
        .ColWidth(5) = 1500
        
        If bolRemate Then
            .col = 8
            .Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1026")
            .ColWidth(0) = 1000
        End If
        End With
        bolSituar = False
    End Sub
    
    Public Sub AjustaColumnasCredito(Optional ByVal pTipoCredito As Byte = 2)
        Dim lblnCambiar As Boolean
        Dim lintColAnterior As Integer
        
    
    
        lintColAnterior = grdCredito.Row
    
        grdCredito.Font.Size = IIf(MUESTRAFORMASDEPAGO1530 = 1, 7, 10)   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
        grdCredito.Row = 0
    
        lstrADNSignoMoneda = lotermino.obtenTermino(ADNSignoMoneda, Descsingular)
    
        Select Case pTipoCredito
            Case 1
                If grdCredito.Cols <> 5 Then
                    grdCredito.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 8, 5)  ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                    grdCredito.col = 4
                    grdCredito.Clip = "Plazo+1" & lstrADNSignoMoneda
                    grdCredito.ColWidth(4) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 1000, 1200)  ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                    lblnCambiar = True
                End If
            Case 2
                If grdCredito.Cols <> 4 Then
                    grdCredito.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 8, 5)  ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                    lblnCambiar = True
                End If
            Case 3
                If grdCredito.Cols <> 4 Then
                    grdCredito.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 7, 4)  ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                    lblnCambiar = True
                End If
            Case 4  'NLFG correccion para evitar que se elimine la ultima columna al seleccionar algun plazo Enero 2012
                If grdCredito.Cols <> 4 Then
                    grdCredito.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 7, 5)   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                    lblnCambiar = True
                End If
            Case 5
                If grdCredito.Cols <> 6 Then
                    grdCredito.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 10, 6)   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    
                    grdCredito.col = 4
                    grdCredito.Clip = "AbonoCP" & lstrADNSignoMoneda
                    grdCredito.ColWidth(4) = 1200
    
                    grdCredito.col = 5
                    grdCredito.Clip = "UAbonoCP" & lstrADNSignoMoneda
                    grdCredito.ColWidth(5) = 1200
    
                    lblnCambiar = True
                End If
        End Select
    
        grdCredito.col = 0
        grdCredito.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1027")
        grdCredito.ColWidth(0) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 450, 750) '  ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    
    
        grdCredito.col = 1
        grdCredito.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1028") & lstrADNSignoMoneda
        grdCredito.CellAlignment = 6
        grdCredito.ColWidth(1) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 1000, 1200)  '  ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
        
        grdCredito.col = 2
        grdCredito.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1029") & lstrADNSignoMoneda
        grdCredito.ColWidth(2) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 800, 900)  '  ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
        'VHSG 14/10/2011 Se aumento el tama√±o de la columna
        
        grdCredito.col = 3
        grdCredito.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1030") & lstrADNSignoMoneda
        grdCredito.CellAlignment = 6
        grdCredito.ColWidth(3) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 800, 900)  '  ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
        'VHSG 14/10/2011 Se aumento el tama√±o de la columna
        
        'RIMT:
        If ValidarPagoPuntual Then 'pagop
        If grdCredito.Cols = 4 Then grdCredito.Cols = 5
          grdCredito.col = 4
          If PaisTraduc = 4 Then
            grdCredito.Clip = "Pago a Tiempo" & lstrADNSignoMoneda
            grdCredito.CellAlignment = 0
            grdCredito.ColWidth(4) = 1600
          Else
            grdCredito.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1031") & lstrADNSignoMoneda
            grdCredito.CellAlignment = 0
            grdCredito.ColWidth(4) = 1100
          End If
          
        End If
      
      
        If grdCredito.rows > 1 Then
            grdCredito.Row = 1
        End If
        grdCredito.Row = lintColAnterior
        DoEvents
    End Sub
    
    
    
    Private Sub txtDescuento_GotFocus()
        AjustarFrames 3
        MarcarTexto txtDescuento
    End Sub
    
    Private Sub txtDescuento_KeyDown(KeyCode As Integer, Shift As Integer)
        Select Case KeyCode
            Case vbKeyReturn
                txtChaz.SetFocus
        End Select
    End Sub
    
    
    Private Sub txtEnganche_Change()
        If Not gbolEngAut Then gbolEng = True
    End Sub
    
    Private Sub txtEngancheRopa_KeyDown(KeyCode As Integer, Shift As Integer)
    'On Error GoTo ManejaError
        Select Case KeyCode
            Case vbKeyReturn
    '            grdCredito_DblClick
    '            Exit Sub
                If gobjSoftGoods.HardGood = NO_TIENE_HARD_GOODS Then
                    objPrepGeneral.VentaCredito.abono = 0
                End If
            CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
            If IsNumeric(txtEngancheRopa) Then
            AplicaPromocion = True
            DecXRec = 0
            PorcEngTemp = Me.txtPorcEngancheRopa
            
            'ABBR...Promoci√≥n 21/11/2012... Se quito...
            'Si el presupuesto tiene algun SKU de Motos entonces no se aplica la promoci√≥n.
    '        For i = 1 To objPrepGeneral.VentaCredito.ColDetalleVenta.Count
    '            If VerificarDepto(CStr(objPrepGeneral.VentaCredito.ColDetalleVenta(i).Producto.ProdID)) Then
    '                AplicaPromocion = False
    '            End If
    '        Next i
            'EDMA 21/12/11 Se agrega el par√°metro plazo en la llamada del componente de la promoci√≥n
            If AplicaPromocion Then
                    DClienteUnico = objPrepGeneral.VentaCredito.Cliente.NoClienteUnico
                    DecXRec = PromoDescRec(Val(Mid(DClienteUnico, 1, 2)), Val(Mid(DClienteUnico, 3, 2)), Val(Mid(DClienteUnico, 5, 4)), Val(Mid(DClienteUnico, 9)), ObtenCapitalReal(objPrepGeneral.VentaCredito), Me.grdCreditoRopa.TextMatrix(grdCreditoRopa.RowSel, 0))
                    EngancheXCliente = CDbl(txtEngancheRopa.Text)
            End If
            
            If DecXRec > 0 Then
                    txtEngancheRopa.Text = DecXRec + Val(txtEngancheRopa.Text)
                    CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
                    If objPrepGeneral.VentaCredito.ColDetalleVenta(1).abono <= objPrepGeneral.VentaCredito.AbonoMinimo Then
                                    MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1136") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1137") & " " & objPrepGeneral.VentaCredito.AbonoMinimo & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1138"), vbInformation
                                    DecXRec = 0
                                    CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
                    Else
                        If DecXRec > CDbl(txtEngancheRopa.Text) Then
                            DecXRec = CDbl(txtEngancheRopa.Text)
                        End If
                        MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1139") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1140"), vbInformation
                        txtEngancheRopa.Text = CDbl(txtEngancheRopa.Text) - DecXRec
                        Me.txtPorcEngancheRopa = PorcEngTemp
                        'txtPorcEnganche.Text = IIf(Round(((txtEngancheRopa.Text) * 100) / (objPrepGeneral.objPresupuesto.ProductoCredito.ProdPrecio), 3) >= 0, Format(Round(((txtEngancheRopa.Text) * 100) / (objPrepGeneral.objPresupuesto.ProductoCredito.ProdPrecio), 3), "###0.00"), 0)
                    End If
            Else
                    CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
            End If
    
                Else
                    objFuncionalidad.MuestraMensaje "El enganche debe ser num√©rico" & vbCrLf & "Se asignar√° el 10% como enganche predeterminado", Informacion, Aceptar, Me.Caption
                    CalculaPlazosDeSOFTGOODS 10, 1
                End If
    grdCredito_DblClick
        End Select
    '    grdCredito_DblClick
    '    Exit Sub
    'ManejaError:
    '    objFuncionalidad.MuestraMensaje "Imposible actualizar el enganche de Soft Goods" & vbCrLf & Err.Description, Informacion, Aceptar, Me.Caption
    End Sub
    
    Private Sub txtEngancheRopa_KeyPress(keyascii As Integer)
        'Numeros con un punto decimal
        Static dotentered As Boolean
           
        If keyascii = 13 Then Exit Sub
        If InStr(txtEngancheRopa, ".") > 0 Then
            dotentered = True
        Else
            dotentered = False
        End If
    
        If keyascii = 46 And dotentered Then
            keyascii = 0
            Exit Sub
        End If
    
        If Chr(keyascii) Like "#" <> True And keyascii <> vbKeyBack And keyascii <> vbKeyDelete Then
            keyascii = 0
        End If
        If Not gbolEngAut Then gbolPorcEng = True
        
        If InStr(txtEngancheRopa, ".") Then
            If Len(Mid(txtEngancheRopa, InStr(txtEngancheRopa, "."))) >= 3 And IsNumeric(Chr(keyascii)) Then
                If txtEngancheRopa.SelLength <> Len(txtEngancheRopa.Text) Then
                    keyascii = 0
                End If
            End If
        End If
        Exit Sub
    End Sub


    Private Sub txtPorcEnganche_Change()
    '    If Not IsNumeric(txtPorcEnganche.Text) Then
    '        SendKeys "{BackSpace}"
    '        txtPorcEnganche.Text = 0
    '    End If
    '    If Not gbolEngAut Then gbolPorcEng = True
    End Sub
    
    'Evitar el error de type mismatch      AARD
    Private Sub txtPorcEnganche_LostFocus()
    
        If Trim(txtPorcEnganche.Text) = "" Then
            txtPorcEnganche.Text = 0
        End If
        
        If Not gbolEngAut Then
            If gbolPorcEng Then txtPorcEnganche_KeyDown vbKeyReturn, 0
            gbolEng = False
        Else
          gbolEngAut = False
        End If
        
    End Sub
    Private Sub txtEnganche_LostFocus()
        
        If Trim(txtEnganche.Text) = "" Then
            txtEnganche.Text = 0
        End If
        
        If Not gbolEngAut Then
            If gbolEng Then
                'txtEnganche_KeyDown vbKeyReturn, 0
               
            End If
            gbolEng = False
       Else
           gbolEngAut = False
        End If
    End Sub
    Private Sub txtEnganche_GotFocus()
    If Not blnCredito Then lblCredito_Click
        If shpCredito.BackColor <> ColorSeleccionado Then SeleccionaShp shpCredito
        objPrepGeneral.VentaCredito.TipoVenta = 2
        'AjustarFrames 2
        lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1043") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1038") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1044") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
        txtEnganche.SelStart = 0
        txtEnganche.SelLength = Len(Trim(txtEnganche))
    End Sub
    
    
    Private Sub txtEnganche_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim lstrMensError As String
    Dim lintTipoCredito As Integer
    On Error GoTo ErrVB
        gbolEngAut = False
        Select Case KeyCode
            Case vbKeyReturn
                 gbolEng = False
                 MousePointer = vbHourglass
                 If Len(Trim(txtEnganche.Text)) = 0 Then
                 
                 ElseIf IsNumeric(txtEnganche) Then
                    'Se actualiza el tipo de credito
                    lintTipoCredito = objPrepGeneral.VentaCredito.TipoCredito
                    If lintTipoCredito = 5 Then
                        objPrepGeneral.VentaCredito.TipoCredito = 6
                    Else
                        objPrepGeneral.VentaCredito.TipoCredito = 4
                    End If
                    'ECG. Actualiza el importe del enganche en el grid de la venta ATM
                    If blnEsATM Then
                       If Val(txtEnganche.Text) < Val(goVentaATM.Enganche) Then
                          objFuncionalidad.MuestraMensaje "El enganche ingresado no puede ser menor al solicitado por ATM Control: " & lstrADNSignoMoneda & goVentaATM.Enganche, Error, Aceptar, Me.Caption
                       Else
                          grdTotalesATM.Row = 1: grdTotalesATM.col = 0: grdTotalesATM.Clip = txtEnganche.Text
                       End If
                    End If
                    'EDMA 42033 - 16/09/11 : Implementacion de Promociones Decuento Por Recompra.
                    DecXRec = 0
                    AplicaPromocion = True
                    If AplicaPromocion Then
                       DClienteUnico = objPrepGeneral.VentaCredito.Cliente.NoClienteUnico
                       DecXRec = PromoDescRec(Val(Mid(DClienteUnico, 1, 2)), Val(Mid(DClienteUnico, 3, 2)), Val(Mid(DClienteUnico, 5, 4)), Val(Mid(DClienteUnico, 9)), ObtenCapitalReal(objPrepGeneral.VentaCredito), objPrepGeneral.VentaCredito.Plazo)
                       EngancheXCliente = CDbl(txtEnganche.Text)
                    End If
                    'VHSG 23/07/2013 Brasil
                    If VerificarDepto(CStr(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID)) And (VerificarPais Or lintPais = 11) Then
                       If objPrepGeneral.VentaCredito.ColDetalleVenta.Count > 1 Then
                          objPrepGeneral.VentaCredito.EngancheMoto = txtEnganche
                          objPrepGeneral.VentaCredito.PorcEngancheTotal = 0
                          objPrepGeneral.VentaCredito.DescEngMoto = 0
                       End If
                    End If
                            
                    If DecXRec > 0 Then
                       Dim variable As Double
                       variable = DecXRec
                       objPrepGeneral.VentaCredito.ModificaEnganche CDbl(txtEnganche.Text), 0, DecXRec
                       DecXRec = 0
                       ActualizaTotales
                       If objPrepGeneral.VentaCredito.ColAbonos(1).MontoAbono <= objPrepGeneral.VentaCredito.AbonoMinimo Then
                          MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1136") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1137") & " " & objPrepGeneral.VentaCredito.AbonoMinimo & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1138"), vbInformation
                          DecXRec = 0
                          objPrepGeneral.VentaCredito.ModificaEnganche CDbl(EngancheXCliente), 0, 0
                          ActualizaTotales
                       Else
                          If variable > CDbl(txtEnganche.Text) Then
                             variable = CDbl(txtEnganche.Text)
                          End If
                          DecXRec = variable
                          If txtEnganche.Text < 0 Then txtEnganche.Text = 0
                             
                          MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1139") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1140"), vbInformation
                          txtEnganche.Text = objPrepGeneral.VentaCredito.EngancheTotal - DecXRec
                          txtPorcEnganche.Text = IIf(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3) >= 0, Format(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3), "###0.00"), 0)
                          AplicaPromocion = True
                       End If
                    Else
                       objPrepGeneral.VentaCredito.ModificaEnganche CDbl(txtEnganche.Text), 0, 0
                       ActualizaTotales
                    End If
                    
                    If lintTipoCredito = 5 Then
                        objPrepGeneral.VentaCredito.TipoCredito = lintTipoCredito
                    End If
                    
                    objPrepGeneral.VentaCredito.CalculaTotalCredito
                 Else
                    objFuncionalidad.MuestraMensaje "Verifique el enganche tecleado", Error, Aceptar, Me.Caption
                 End If
                    
                 MousePointer = vbArrow
                 
                 If lblCliente.Caption <> "" Then
                    If paramActvAbonoMenMinimo Then
                       RecomprasAbonoMenorMinimo 'ajh20100428
                    End If
                 End If
                        
                 If bolCredInm Then
                    objPrepGeneral.VentaCredito.ModificaEnganche CDbl(txtEnganche.Text), 0, 0
                    objPrepGeneral.VentaCredito.CalculaTotalCredito
                    ActualizaTotales
                 Else
                    ActualizaTotales
                 End If
        End Select
        Exit Sub
    
ErrVB:
        'MsgBox "Imposible actualizar el enganche" & vbCrLf & Err.Description, vbInformation, Me.Caption
        If Mid(Err.Description, 1, 4) = "NEXT" Then
           lstrMensError = Mid(Err.Description, 5)
        ElseIf Mid(Err.Description, 1, 3) = "INF" Then
           lstrMensError = Mid(Err.Description, 4)
        Else
           lstrMensError = Err.Description
        End If
        objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1150") & vbCrLf & lstrMensError, Error, Aceptar, Me.Caption
        ActualizaTotales
        MousePointer = vbArrow
    End Sub
    
    
    
    Private Sub txtFechaPago_GotFocus()
        AjustarFrames 4
        If shpApartado.BackColor <> ColorSeleccionado Then lblApartado_Click
        MarcarTexto txtFechaPago
    End Sub
    
    Private Sub txtFechaPago_KeyDown(KeyCode As Integer, Shift As Integer)
        Select Case KeyCode
            Case vbKeyReturn
                lblApartado_Click
        End Select
    End Sub
    
    Private Sub txtLinea_GotFocus()
        MarcarTexto txtLinea
    End Sub
    Private Sub txtPorcEnganche_GotFocus()
        'AjustarFrames 2
        If Not blnCredito Then lblCredito_Click
        If shpCredito.BackColor <> ColorSeleccionado Then SeleccionaShp shpCredito
        MarcarTexto txtPorcEnganche
    End Sub
    
    
    Private Sub txtPorcEnganche_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim lstrMensError  As String
    Dim lintTipoCredito As Integer
    On Error GoTo ErrVB
        
    gbolEngAut = False
        
    'Credito Inmediato Motos. Abril/2015
    'If bolCredInm Then
    '   Me.txtPorcEnganche.Locked = True
    '   Me.txtPorcEnganche.Enabled = False
    '   Exit Sub
    'End If
    '
        
       Select Case KeyCode
          Case vbKeyReturn
               gbolPorcEng = False
               
               MousePointer = vbHourglass
               grdCredito.SetFocus
               
               'ROLCAPACIDAD
               VerificarControl
               
               'ROL001-I Creditalika
               If objPrepGeneral.VentaCredito.Plazo = 154 And objPrepGeneral.VentaCredito.EsCreditalika Then
                  'ROLPRU
                  If lintPais = 1 And lintCanal = 27 Then
                  'If lintPais = 1 Then
                     If txtPorcEnganche < 10 Then
                        MsgBox "Enganche m√≠nimo para promoci√≥n creditalika es del 10%"
                        'Exit Sub
                     End If
                  End If
               End If
               'ROL001-F Creditalika
         
               'ROLPORCENTAJE CASALEY-I
               'ROLPRU
    '           If lintPais = 1 And lintCanal = 7 Then
    '           'If lintPais = 1 Then
    '              If VerificarDepto(Str(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID)) Then
    '                 If txtPorcEnganche < 20 Then
    '                    MsgBox "El enganche m√≠nimo para motos en Casa Ley es del 20% " & vbCrLf & _
    '                           "Favor de modificar el porcentaje del enganche " & vbCrLf & _
    '                           "y seleccionar nuevamente el plazo."
    '                    'Exit Sub
    '                 End If
    '              End If
    '           End If
               'ROLPORCENTAJE CASALEY-I
        
               If frmCredito.Visible Then
                  'Se actualiza el tipo de credito
                  If VerificarDepto(CStr(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID)) And (VerificarPais Or lintPais = 11) Then
                     If objPrepGeneral.VentaCredito.ColDetalleVenta.Count > 1 Then
                        objPrepGeneral.VentaCredito.EngancheMoto = 0
                        objPrepGeneral.VentaCredito.PorcEngancheTotal = txtPorcEnganche
                        objPrepGeneral.VentaCredito.DescEngMoto = txtPorcEnganche
                     End If
                  End If
                    
                  lintTipoCredito = objPrepGeneral.VentaCredito.TipoCredito
                  If lintTipoCredito = 5 Then
                     'AjustarFrames 5
                     objPrepGeneral.VentaCredito.TipoCredito = 6
                  Else
                     'ROLPRU
                     If Not objPrepGeneral.VentaCredito.EsCreditalika Then
                        SwitchVenta bytTipoVenta
                     End If
                     AjustarFrames 1
                     bln10PorCiento = True
                     lbl10pc_MouseMove 0, 0, 0, 0
                     objPrepGeneral.VentaCredito.TipoCredito = 4
                  End If
                  objPrepGeneral.VentaCredito.TipoVenta = 2
    '             EDMA 42033 - 16/09/11 : Implementacion de Promociones Decuento Por Recompra.
    '             objPrepGeneral.ActualizaPorcEnganche Val(txtPorcEnganche), 1
    
                  If Trim(txtPorcEnganche.Text) = "" Then
                     txtPorcEnganche.Text = 0
                  End If
    
                  If objPrepGeneral.VentaCredito.BanCredIn Then
                      
                  Else
                     objPrepGeneral.VentaCredito.ModificaEnganche CDbl(txtPorcEnganche.Text), 1, 0
                  End If
    
                  ActualizaTotales
                  'EDMA 42033 - 16/09/11 : Implementacion de Promociones Decuento Por Recompra.
                  AplicaPromocion = True
                  DecXRec = 0
    
                  If AplicaPromocion Then
                     DClienteUnico = objPrepGeneral.VentaCredito.Cliente.NoClienteUnico
                     DecXRec = PromoDescRec(Val(Mid(DClienteUnico, 1, 2)), Val(Mid(DClienteUnico, 3, 2)), Val(Mid(DClienteUnico, 5, 4)), Val(Mid(DClienteUnico, 9)), ObtenCapitalReal(objPrepGeneral.VentaCredito), objPrepGeneral.VentaCredito.Plazo)
                     EngancheXCliente = CDbl(txtEnganche.Text)
                  End If
    
                  If DecXRec > 0 Then
                     objPrepGeneral.VentaCredito.ModificaEnganche CDbl(txtEnganche.Text), 0, DecXRec
                     ActualizaTotales
                     If objPrepGeneral.VentaCredito.ColAbonos(1).MontoAbono <= objPrepGeneral.VentaCredito.AbonoMinimo Then
                        MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1136") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1137") & " " & objPrepGeneral.VentaCredito.AbonoMinimo & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1138"), vbInformation
                        DecXRec = 0
                        objPrepGeneral.VentaCredito.ModificaEnganche CDbl(EngancheXCliente), 0, 0
                        ActualizaTotales
                     Else
                        If DecXRec > CDbl(txtEnganche.Text) Then
                           DecXRec = CDbl(txtEnganche.Text)
                        End If
                        MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1139") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1140"), vbInformation
                        txtEnganche.Text = CDbl(txtEnganche.Text) - DecXRec
                        txtPorcEnganche.Text = IIf(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3) >= 0, Format(Round(((objPrepGeneral.VentaCredito.EngancheTotal - DecXRec) * 100) / (objPrepGeneral.VentaCredito.PrecioDETotalSinGEXT), 3), "###0.00"), 0)
                     End If
                  Else
                  objPrepGeneral.VentaCredito.ModificaEnganche CDbl(txtEnganche.Text), 0, 0
                  ActualizaTotales
                  'pepe madreador-I
                  grdCredito_DblClick
                  AjustaColumnasCredito
                  'pepe madreador-F
               End If
    
               objPrepGeneral.VentaCredito.CalculaTotalCredito
               If Not objFuncionalidad.EsPaqueteEA Then
                  lbl10pc = "10 % &Enganche"
               Else
                  lbl10pc = objPrepGeneral.VentaCredito.ColDetalleVenta.Item(1).producto.EngSug * 100 & " % &Enganche"
               End If
               'Se actualiza el tipo de credito
               If lintTipoCredito = 5 Then
                  objPrepGeneral.VentaCredito.TipoCredito = lintTipoCredito
               End If
                 
               If Not AplicaPromocion Then
                  ActualizaTotales
               End If
                        
               If gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS Then
                  If gobjSoftGoods.HardGood = NO_TIENE_HARD_GOODS Then
                     objPrepGeneral.VentaCredito.abono = 0
                  End If
                  CalculaPlazosDeSOFTGOODS
               End If
            End If
            MousePointer = vbArrow
       End Select
        
       If lblCliente.Caption <> "" Then
          If paramActvAbonoMenMinimo Then
             RecomprasAbonoMenorMinimo 'ajh20100428
          End If
       End If
    
    Exit Sub
ErrVB:
       If Mid(Err.Description, 1, 4) = "NEXT" Then
          lstrMensError = Mid(Err.Description, 5)
       ElseIf Mid(Err.Description, 1, 3) = "INF" Then
          lstrMensError = Mid(Err.Description, 4)
       Else
          lstrMensError = Err.Description
       End If
       objFuncionalidad.MuestraMensaje "Imposible actualizar el enganche" & vbCrLf & lstrMensError, Error, Aceptar, Me.Caption
       ActualizaTotales
       MousePointer = vbArrow
    End Sub
    
    Private Sub txtPorcEnganche_KeyPress(keyascii As Integer)
        'Numeros con un punto decimal
        Static dotentered As Boolean
        If keyascii = 13 Then Exit Sub
        If InStr(txtPorcEnganche, ".") > 0 Then
            dotentered = True
        Else
            dotentered = False
        End If
    
        If keyascii = 46 And dotentered Then
            keyascii = 0
            Exit Sub
        End If
    
        If Chr(keyascii) Like "#" <> True And keyascii <> vbKeyBack And keyascii <> vbKeyDelete Then
            keyascii = 0
        End If
        If Not gbolEngAut Then gbolPorcEng = True
        
       
         
        
        If InStr(txtPorcEnganche, ".") Then
            If Len(Mid(txtPorcEnganche, InStr(txtPorcEnganche, "."))) >= 3 And IsNumeric(Chr(keyascii)) Then
                If txtPorcEnganche.SelLength <> Len(txtPorcEnganche.Text) Then
                    keyascii = 0
                End If
            End If
        End If
        Exit Sub
    
    End Sub
    
    
    
    Private Sub txtPorcEngancheRopa_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode
     Case vbKeyReturn
                CalculaPlazosDeSOFTGOODS Val(txtPorcEngancheRopa), 1 ' ISM MODIFICAR EL PORCENTAJE DE ENGANCHE 30/05/2005
                If gobjSoftGoods.HardGood = NO_TIENE_HARD_GOODS Then
                    objPrepGeneral.VentaCredito.abono = 0
                End If
                If IsNumeric(txtPorcEngancheRopa) Then
                    CalculaPlazosDeSOFTGOODS Val(txtPorcEngancheRopa), 1
                     If IsNumeric(txtEngancheRopa) Then
                            AplicaPromocion = True
                            DecXRec = 0
                            PorcEngTemp = Me.txtPorcEngancheRopa
                            
                            'ABBR...Promoci√≥n 21/11/2012... Se quito...
                            'Si el presupuesto tiene algun SKU de Motos entonces no se aplica la promoci√≥n.
    '                        For i = 1 To objPrepGeneral.VentaCredito.ColDetalleVenta.Count
    '                        If VerificarDepto(CStr(objPrepGeneral.VentaCredito.ColDetalleVenta(i).Producto.ProdID)) Then
    '                            AplicaPromocion = False
    '                        End If
    '                        Next i
                            'EDMA 21/12/11 Se agrega el par√°metro plazo en la llamada del componente de la promoci√≥n
                        If AplicaPromocion Then
                                DClienteUnico = objPrepGeneral.VentaCredito.Cliente.NoClienteUnico
                                DecXRec = PromoDescRec(Val(Mid(DClienteUnico, 1, 2)), Val(Mid(DClienteUnico, 3, 2)), Val(Mid(DClienteUnico, 5, 4)), Val(Mid(DClienteUnico, 9)), ObtenCapitalReal(objPrepGeneral.VentaCredito), Me.grdCreditoRopa.TextMatrix(grdCreditoRopa.RowSel, 0))
                                EngancheXCliente = CDbl(txtEngancheRopa.Text)
                        End If
                        If DecXRec > 0 Then
                                txtEngancheRopa.Text = DecXRec + Val(txtEngancheRopa.Text)
                                CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
                                    If objPrepGeneral.VentaCredito.ColDetalleVenta(1).abono <= objPrepGeneral.VentaCredito.AbonoMinimo Then
                                            MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1136") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1137") & " " & objPrepGeneral.VentaCredito.AbonoMinimo & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1138"), vbInformation
                                            DecXRec = 0
                                        CalculaPlazosDeSOFTGOODS Val(txtEngancheRopa.Text), 0
                                    Else
                                    If DecXRec > CDbl(txtEngancheRopa.Text) Then
                                            DecXRec = CDbl(txtEngancheRopa.Text)
                                    End If
                                        MsgBox traduc.ConsultaLeyendasporApp(IDAplicacion & ",1139") & " " & DecXRec & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1140"), vbInformation
                                    txtEngancheRopa.Text = CDbl(txtEngancheRopa.Text) - DecXRec
                                            Me.txtPorcEngancheRopa = PorcEngTemp
                                    End If
                        End If
                    End If
                        grdCredito_DblClick
                Else
                    objFuncionalidad.MuestraMensaje "El enganche debe ser num√©rico" & vbCrLf & "Se asignar√° el 10% como enganche predeterminado", Informacion, Aceptar, Me.Caption
                    CalculaPlazosDeSOFTGOODS 10, 1
                    
                End If
        End Select
    End Sub
    Private Sub txtPorcEngancheRopa_KeyPress(keyascii As Integer)
        'NLFG Numeros con un punto decimal
        Static dotentered As Boolean
        If keyascii = 13 Then Exit Sub
        If InStr(txtPorcEngancheRopa, ".") > 0 Then
            dotentered = True
        Else
            dotentered = False
        End If
    
        If keyascii = 46 And dotentered Then
            keyascii = 0
            Exit Sub
        End If
        
        If Chr(keyascii) Like "#" <> True And keyascii <> vbKeyBack And keyascii <> vbKeyDelete Then
            keyascii = 0
        End If
        'If Not gbolEngAut Then gbolPorcEng = True
    
        If InStr(txtPorcEngancheRopa, ".") Then
            If Len(Mid(txtPorcEngancheRopa, InStr(txtPorcEngancheRopa, "."))) >= 3 And IsNumeric(Chr(keyascii)) Then
                If txtPorcEngancheRopa.SelLength <> Len(txtPorcEngancheRopa.Text) Then
                    keyascii = 0
                End If
            End If
        End If
    End Sub
    Private Sub txtPrecio_Change()
        'ECG. Seguros. Para que no truen en el CP se valida que exista el registro en el detalle de la venta.
        If grdPartidas.Row > 0 And objPrepGeneral.VentaCredito.ColDetalleVenta.Count >= grdPartidas.Row Then
            bolSituar = True
            grdPartidas.col = 7
            'grdPartidas.Clip = objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).Producto.ProdPrecio * objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).Cantidad
            'agregamos el descuento
            'grdPartidas.Clip = (objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).Producto.ProdPrecio - objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoCredxPartida) * objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).Cantidad
            'ROL007-I
            'If Not VerificarDepto(objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.ProdID) Then
            '    grdPartidas.Clip = (objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.ProdPrecio - objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoCredxPartida) * objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).Cantidad
            'Else
            '    'grdPartidas.Clip = (ObtenerPrecioItalika(pcolDetalle(lintContPartidas).Producto.ProdID) - pcolDetalle(lintContPartidas).DesctoCredxPartida) * pcolDetalle(lintContPartidas).Cantidad
            '    grdPartidas.Clip = (ObtenerPrecioItalika(objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.ProdID) - objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoCredxPartida) * objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).Cantidad
            'End If
            grdPartidas.Clip = (objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.ProdPrecio - objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoCredxPartida) * objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).Cantidad
            'ROl007-F
            grdPartidas.col = 3
            bolSituar = False
        End If
    End Sub
    
    Private Sub txtPrecio_GotFocus()
        AjustarFrames 3
        MarcarTexto txtPrecio
    End Sub
    
    Private Sub txtPrecio_KeyDown(KeyCode As Integer, Shift As Integer)
        Select Case KeyCode
            Case vbKeyReturn
                txtDescuento.SetFocus
        End Select
    End Sub
    
    Private Sub txtSucCliente_Change()
        If IsNumeric(txtSucCliente.Text) And Len(txtSucCliente.Text) = 4 Then
             objPrepGeneral.VentaCredito.Cliente.NoTienda = txtSucCliente
        End If
    End Sub
    
    Private Sub txtSucCliente_GotFocus()
        lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1045") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1044") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
    End Sub
    
    Private Sub txtSucCliente_KeyDown(KeyCode As Integer, Shift As Integer)
        Select Case KeyCode
            Case vbKeyReturn
                 txtCliente.SetFocus
        End Select
                   
    End Sub
    Private Sub DesactivaMenuPrincipal()
        lblCaracteristicas.Enabled = False
        lblPromociones.Enabled = False
        lblSimilares.Enabled = False
        lblComplementos.Enabled = False
        lblInventarioOT.Enabled = False
        'ReajustaColorOpcion lblCaracteristicas
        'ReajustaColorOpcion lblPromociones
        'ReajustaColorOpcion lblSimilares
        'ReajustaColorOpcion lblComplementos
        'ReajustaColorOpcion lblInventarioOT
    End Sub
    Private Sub ActivaMenuPrincipal()
        lblCaracteristicas.Enabled = True
        lblPromociones.Enabled = True
        If Not bolRemate Then lblSimilares.Enabled = True
        lblComplementos.Enabled = False
        'If Not bolRemate Then lblInventarioOT.Enabled = True
        ReajustaColorOpcion lblCaracteristicas
        ReajustaColorOpcion lblPromociones
        ReajustaColorOpcion lblSimilares
        ReajustaColorOpcion lblComplementos
        ReajustaColorOpcion lblInventarioOT
        AyudagrdPartidas grdPartidas.col
    End Sub
    
    Private Sub txtSucCliente_KeyPress(keyascii As Integer)
        Select Case keyascii
            Case 13, 8
            Case Else
              If Not IsNumeric(Chr(keyascii)) Then keyascii = 0
            
        End Select
    
    End Sub
    
    Private Sub txtValorPartidaAux_GotFocus()
        ActivaMenuPrincipal
        txtValorPartidaAux = grdPartidas.Clip
        MarcarTexto txtValorPartidaAux
        Exit Sub
    End Sub
    Private Sub CambiarColumnaAnterior()
        If grdPartidas.col >= 6 Then
            grdPartidas.col = 3
        ElseIf grdPartidas.col >= 3 Then
            grdPartidas.col = 0
        End If
    End Sub
    Private Sub CambiarColumnaSiguiente()
        If grdPartidas.col = 0 Then
            grdPartidas.col = 3
        ElseIf grdPartidas.col <= 3 Then
            grdPartidas.col = 6
        ElseIf grdPartidas.col <= 6 Then
            grdPartidas.col = 0
        End If
    End Sub
    
    Private Sub MoverPartidaAnterior()
        If grdPartidas.col = 0 Then
            grdPartidas.col = 3
        End If
        If grdPartidas.Row > 1 Then
            grdPartidas.Row = grdPartidas.Row - 1
        Else
            grdPartidas.Row = grdPartidas.rows - 1
        End If
        txtValorPartidaAux.SelStart = Len(txtValorPartidaAux)
    End Sub
    
    Private Sub MoverPartidaSiguiente()
        If grdPartidas.col = 0 Then
            grdPartidas.col = 3
        End If
        If grdPartidas.Row = grdPartidas.rows - 1 Then
            grdPartidas.Row = 1
        Else
            grdPartidas.Row = grdPartidas.Row + 1
        End If
        txtValorPartidaAux.SelStart = Len(txtValorPartidaAux)
    End Sub
    
    
    Private Sub txtValorPartidaAux_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim lstrSerie As String
    Dim llngFolio As Long
    'ROLREQ88710-I
    Dim bolEliminaSegMoto As Boolean
    'ROLREQ88710-F
    
    On Error GoTo ErrVB
        
        Select Case KeyCode
            Case vbKeyReturn
                
                If IsNumeric(txtValorPartidaAux) Then
                    '' ERV - Guia - Productos de Rescate
                    If adnProductoResPuente.BProducRec = True Then
                        Dim lsBanderaEnganche As Boolean
                        If adnProductoResPuente.DMontoEngRec >= IsNumeric(txtValorPartidaAux) Then
                            txtValorPartidaAux.Text = adnProductoResPuente.DMontoEngRec
                           Exit Sub
                        End If
                    End If
                    '' ERV - Guia - Productos de Rescate
                    
                    If txtValorPartidaAux > 0 Then
                        MousePointer = vbHourglass
                        If txtValorPartidaAux <> "" And grdPartidas.Row > 0 And grdPartidas.col = 3 Then
                            If grdPartidas.TextMatrix(grdPartidas.Row, 6) > 0 Then
                                'MsgBox "La cantidad debe ser 1 para poder aplicar un descuento especial", vbInformation, Me.Caption
                                'ROLREM-I
                                'If Trim(objPrepGeneral.VentaCredito.CanalExterno) = "S" Then
                                'ROLREM-F
                                    objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1147"), Informacion, Aceptar, Me.Caption
                                'ROLREM-I
    '                            Else
    '                                objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1148"), Informacion, Aceptar, Me.Caption
    '                                txtValorPartidaAux = 1
    '                            End If
                                'ROLREM-F
                                MousePointer = vbDefault
                                Exit Sub
                            End If
                            grdPartidas.Clip = ValidaCapturaPartidas(grdPartidas.col, txtValorPartidaAux)
                            txtValorPartidaAux = grdPartidas.Clip
                            grdPartidas.Clip = txtValorPartidaAux
                            
                         ' omf
                          ElseIf txtValorPartidaAux <> "" And grdPartidas.Row > 0 And grdPartidas.col = 2 Then
                                If gdblPrecioMinimo = 0 Then gdblPrecioMinimo = objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.ProdPrecio
    
                                If grdPartidas.TextMatrix(grdPartidas.Row, 6) > 0 Then
                                    'ROLREM-I
                                    'If Trim(objPrepGeneral.VentaCredito.CanalExterno) = "S" Then
                                    'ROLREM-F
                                        objFuncionalidad.MuestraMensaje "El producto tiene un descuento especial asignado no puede cambiar el precio.", Informacion, Aceptar, Me.Caption
                                        MousePointer = vbDefault
                                        Exit Sub
                                    'ROLREM-I
                                    'End If
                                    'ROLREM-F
                                End If
                                grdPartidas.Clip = txtValorPartidaAux
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.ProdPrecio = txtValorPartidaAux
                                
                                If Not objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).esSOFTGOOD Then
                                     objPrepGeneral.VentaCredito.ActualizaCantidad grdPartidas.TextMatrix(grdPartidas.Row, 3), grdPartidas.Row
                                End If
                
                                objPrepGeneral.VentaCredito.CalculaTotalPrecioChaz
                                objPrepGeneral.VentaCredito.CalculaTotalApartado
                                objPrepGeneral.VentaCredito.CalculaTotalCredito
                                ActualizaTotales
                                'frps 10-04-2012
                                If lblCliente.Caption <> "" Then
                                    If paramActvAbonoMenMinimo Then
                                        RecomprasAbonoMenorMinimo 'ajh20100428
                                    End If
                                End If
                            
                            
                        ElseIf txtValorPartidaAux <> "" And grdPartidas.Row > 0 And grdPartidas.col = 6 Then
                            If bolRemate Then
                                  objFuncionalidad.msCodigoRemate = Trim(grdPartidas.TextMatrix(grdPartidas.Row, 8))
                            Else
                                  objFuncionalidad.msCodigoRemate = ""
                            End If
                            llngFolio = objFuncionalidad.DescuentoEspecial(grdPartidas.TextMatrix(grdPartidas.Row, 0), txtValorPartidaAux, lstrSerie, objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row))
                            If llngFolio > 0 Then
                                grdPartidas.Clip = txtValorPartidaAux
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoTienda = txtValorPartidaAux
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoTiendaCRED = txtValorPartidaAux
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoTiendaAPART = 0
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.NumSerie = lstrSerie
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).FolioDesctoTienda = IIf(bolRemate, IIf(llngFolio > 0 And llngFolio = 1, llngFolio, 0), llngFolio)
                                objPrepGeneral.VentaCredito.CalculaTotalPrecioChaz
                                objPrepGeneral.VentaCredito.CalculaTotalApartado
                                objPrepGeneral.VentaCredito.CalculaTotalCredito
                                ActualizaTotales
                            End If
                            If llngFolio < 0 Then
                                grdPartidas.Clip = txtValorPartidaAux
                                grdPartidas.col = 7 'VHSG 29/01/2012 Para descuento en la posicion correcta
                                grdPartidas.Clip = (objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.ProdPrecio - txtValorPartidaAux)
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoTienda = txtValorPartidaAux
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoTiendaCRED = txtValorPartidaAux
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).DesctoTiendaAPART = 0
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).producto.NumSerie = lstrSerie
                                objPrepGeneral.VentaCredito.ColDetalleVenta(grdPartidas.Row).FolioDesctoTienda = IIf(bolRemate, IIf(llngFolio > 0 And llngFolio = 1, llngFolio, 0), llngFolio)
                                objPrepGeneral.VentaCredito.CalculaTotalPrecioChaz
                                objPrepGeneral.VentaCredito.CalculaTotalApartado
                                objPrepGeneral.VentaCredito.CalculaTotalCredito
                                ActualizaTotales
                            End If
                            'frps 10-04-2012
                            If lblCliente.Caption <> "" Then
                                    If paramActvAbonoMenMinimo Then
                                        RecomprasAbonoMenorMinimo 'ajh20100428
                                    End If
                                End If
                        End If
                        MousePointer = vbArrow
                    Else
                        txtValorPartidaAux = grdPartidas.Clip
                    End If
                Else
                    txtValorPartidaAux = grdPartidas.Clip
                End If
                ActualizaGridPartidas
                
                If txtEnganche.Visible And txtEnganche.Enabled Then
                    txtEnganche_KeyDown vbKeyReturn, 1 'VHSG Para que tome la promocion al cambiar precio
                ElseIf txtPorcEnganche.Visible And txtPorcEnganche.Enabled Then
                    txtPorcEnganche.SetFocus
                ElseIf txtChaz.Visible And txtChaz.Enabled Then
                    lblContado_Click
                    txtChaz.SetFocus
                ElseIf txtFechaPago.Visible And txtFechaPago.Enabled Then
                    txtFechaPago.SetFocus
                End If
                
            Case vbKeyDelete
                'ROLREQ88710-I
                bolEliminaSegMoto = False
                'ROLREQ88710-F
            
                If grdPartidas.col <> 3 And grdPartidas.col <> 6 Then
                    'VHSG 17/05/2012 seguros Valida si el si es seguro opcional
                    Dim strCelda As String
                    Dim lngSKUS As Long
                    
                    strCelda = grdPartidas.TextMatrix(grdPartidas.RowSel, 0)
                    'ROLREQ88710-I Quita seguro moto manual
                    If bolSegMotoAgr = True Then
                       If strCelda = SkuSeguroMoto Then
                          bolEliminaSegMoto = True
                       Else
                          bolEliminaSegMoto = False
                       End If
                    End If
                    'ROLREQ88710-F Quita seguro moto manual
                    
                    
                    Set objSKUSeguro = CreateObject("ADN2CtrlPresup.ctrlPresupuesto")
                    If VerificarPais Then
                        lngSKUS = objSKUSeguro.ObtenerSKUSeguros
    'ROLREM-I
    '                ElseIf lintPais = 11 Then 'VHSG 23/07/2013 Brasil
    '                    lngSKUS = objPrepGeneral.VentaCredito.CodigoDelIOF
    'ROLREM-F
                    End If
                
                    'VHSG 17/05/2012 Valida si el es seguro opcional
                    If strCelda = CStr(lngSKUS) Then
    '                    If Not lintPais = 11 Then
                            If ValidaSeguro Then
                                If EliminarPartida Then
                                    ActualizaGridPartidas
                                    If objPrepGeneral.VentaCredito.BienEntregado = 0 Then HabilitaEntregaOT
                                    ConfiguraBienEntregado
                                End If
                            Else
                                MsgBox "El Seguro es Obligatorio."
                            End If
    '                    Else
    '                        MsgBox "IOF Obrigat√≥rio"
    '                    End If
                    Else
                        If EliminarPartida Then
                            ActualizaGridPartidas
                            If objPrepGeneral.VentaCredito.BienEntregado = 0 Then HabilitaEntregaOT
                            ConfiguraBienEntregado
                        End If
                    End If
                    'ROLREQ88710-I Quita seguro moto manual
                    If bolEliminaSegMoto = True Then
                       FrCtrlSeguroMotos.Enabled = True
                       btnSeguroMotos.Enabled = True
                       btnEliminarSeguroMotos.Enabled = False
                       bolSegMotoAgr = False
                    End If
                    'ROLREQ88710-F Quita seguro moto manual
                End If
                
            Case vbKeyLeft
                CambiarColumnaAnterior
                grdPartidas.SetFocus
                
            Case vbKeyRight
                CambiarColumnaSiguiente
                grdPartidas.SetFocus
                
            Case vbKeyUp
                MoverPartidaAnterior
                grdPartidas.SetFocus
                
            Case vbKeyDown
                MoverPartidaSiguiente
                grdPartidas.SetFocus
                
        End Select
        
            'ABBR ERV Credito Inmediato Febrero 2015
            'If bolCredInm And Not bolCredInmSKU Then
            
            'ABBR Credito Inmediato Motos. Abril/2015
    '        If bolCredInm Then
    '            'Me.txtEnganche.Locked = True
    '            Me.txtPorcEnganche.Locked = True
    '
    '            'Me.txtEnganche.Enabled = False
    '            Me.txtPorcEnganche.Enabled = False
    '
    '        End If
        
        
        
        Exit Sub
ErrVB:
        If Mid(Err.Description, 1, 4) = "NEXT" Then
            objFuncionalidad.MuestraMensaje "Imposible actualizar el enganche" & vbCrLf & Mid(Err.Description, 5), Error, Aceptar, Me.Caption
        ElseIf Mid(Err.Description, 1, 3) = "INF" Then
            objFuncionalidad.MuestraMensaje "Imposible actualizar el enganche" & vbCrLf & Mid(Err.Description, 4), Error, Aceptar, Me.Caption
        Else
            objFuncionalidad.MuestraMensaje "Imposible actualizar el enganche" & vbCrLf & Err.Description, Error, Aceptar, Me.Caption
        End If
    End Sub
    
    Private Sub txtValorPartidaAux_KeyPress(keyascii As Integer)
        Dim lngHwnd As Long
        Dim lngReturn As Long
        Static DecimalesRevisados As Boolean
        'PermitirDecimales = True
        
        If DecimalesRevisados = False Then
            If Not PermitirDecimales Then
                lngHwnd = GetWindowLong(txtValorPartidaAux.hwnd, GWL_STYLE)
                lngReturn = SetWindowLong(txtValorPartidaAux.hwnd, GWL_STYLE, lngHwnd Or ES_NUMBER)
            End If
            DecimalesRevisados = True
        End If
        
        If (keyascii = vbKeyDelete Or keyascii = vbKeyBack) And Chr(keyascii) <> "." Then Exit Sub
        
        If grdPartidas.col = 2 Then
            If PermitirDecimales Then
                If Not IsNumeric(txtValorPartidaAux & Chr(keyascii)) Then
                    keyascii = 0
                End If
                If InStr(txtValorPartidaAux & Chr(keyascii), ".") Then
                    If Len(Mid(txtValorPartidaAux & Chr(keyascii), InStr(txtValorPartidaAux & Chr(keyascii), "."))) > gintNumDecimales + 1 Then 'gintNumDecimales Then
                    ''FRPS 17-02-2006 Esta validaci√≥n tampoco permit√≠a el uso del punto decimal
                        keyascii = 0
                    End If
                End If
            End If
        Else
            If Not InStr("0123456789", Chr(keyascii)) > 0 Then
                keyascii = 0
            End If
        End If
    
    End Sub
    
    Private Sub txtValorPartidaAux_LostFocus()
    
        DesactivaMenuPrincipal
        txtValorPartidaAux.Visible = False
        Exit Sub
    End Sub
    
    Public Sub ConfiguraGridCreditoRopa()
        bPPuntual = False
        With frmPrepa.grdCreditoRopa
            .Row = 0
            .col = 0
            .Clip = "Plazo"
            .CellAlignment = 6
            .ColWidth(0) = 510
            
            .col = 1
            .Clip = "Desc"
            .CellAlignment = 6
            .ColWidth(1) = 600
            
            .col = 2
            .Clip = "Abono" & lstrADNSignoMoneda
            .CellAlignment = 6
            .ColWidth(2) = 900
            
            If ValidarPagoPuntual Then ' HOOT - A. Puntual 11/04/2008
                bPPuntual = True
                .Cols = .Cols + 1
                '
                .col = 3
                .Clip = "A.Puntual " & lstrADNSignoMoneda
                .CellAlignment = 6
                .ColWidth(3) = 1300
            End If
            
            .col = IIf(bPPuntual, 4, 3)
            .Clip = "Ultimo" & lstrADNSignoMoneda
            .CellAlignment = 6
            .ColWidth(IIf(bPPuntual, 4, 3)) = 800
            
            
            'nlfg oculta plazos quincenales
    '        .Col = IIf(bPPuntual, 5, 4)
    '        .Clip = "Plazo Q"
    '        .CellAlignment = 6
    '        .ColWidth(IIf(bPPuntual, 5, 4)) = 900
    '
    '        .Col = IIf(bPPuntual, 6, 5)
    '        .Clip = "Abono Q" & lstrADNSignoMoneda
    '        .CellAlignment = 6
    '        .ColWidth(IIf(bPPuntual, 6, 5)) = 1000
    '
    '        .Col = IIf(bPPuntual, 7, 6)
    '        .Clip = "Ultimo Q" & lstrADNSignoMoneda
    '        .CellAlignment = 6
    '        .ColWidth(IIf(bPPuntual, 7, 6)) = 1000
                 
    
            
        End With
        
        With frmPrepa.grdResumen
            .col = 0
            .Font.Bold = True
            .CellAlignment = 6
            .col = 1
            .Font.Bold = True
            .CellAlignment = 6
            .ColWidth(0) = 2500
            .ColWidth(1) = 1500
        End With
        
    End Sub
    
    Private Sub lblATM_Click()
        'ECG.
        Dim lstrMsgAviso As String
        If objPrepGeneral.VentaCredito.ColDetalleVenta.Count > 0 Then
            lstrMsgAviso = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1059") & vbNewLine & _
            traduc.ConsultaLeyendasporApp(IDAplicacion & ",1060")
            objFuncionalidad.MuestraMensaje lstrMsgAviso, Informacion, Aceptar, frmPrepa.Caption
            Exit Sub
        End If
    
        lblAyuda.Caption = vbCrLf & _
        traduc.ConsultaLeyendasporApp(IDAplicacion & ",1046") & vbCrLf & _
        traduc.ConsultaLeyendasporApp(IDAplicacion & ",1047")
        
        ATMFuncionalidad
    End Sub
    
    
    Private Sub ATMBloqueaControles()
        frmApartado.Enabled = False
        frmApartado.Visible = False
        frmContado.Enabled = False
        frmContado.Visible = False
        'frmCredito.Enabled = False
        grdPartidas.Enabled = False
        blnYaPaso1VezATM = True
        frmATM.Visible = True
        lblPLAN.BackColor = ColorShpSeleccionado
        Label9.BackColor = ColorShpSeleccionado
        txtSucCliente_GotFocus
        'Label2.Visible = False
        'txtPorcEnganche.Visible = False
        'grdPartidasATM.Enabled = False
        'grdTotalesATM.Enabled = False
        'frmATM.ZOrder vbBringToFront
    End Sub
    Private Sub ATMFuncionalidad()
        'ECG
    '    Dim goVentaATM As cVentapospago
        Dim loPlan As cPlanPosPago
        Dim loEquipo As cEquipoPosPago
        Dim loServicio As cServicioPosPago
        Dim loColServicios As Collection
        Dim i As Integer
        
        If Not blnEsATM Then Set goVentaATM = Nothing
        
        Set goVentaATM = objFuncionalidad.ModeladoATM()
        If goVentaATM Is Nothing Then
            blnEsATM = False
            Call InicializaControles
            Exit Sub
        End If
        blnEsATM = True
        blnYaPaso1VezATM = True
        grdPartidasATM.Enabled = True
        frmATM.Enabled = True
        frmATM.Visible = True
        frmATM2.Enabled = True
        frmATM2.Visible = True
        frmATM.ZOrder vbBringToFront
        frmATM2.ZOrder vbBringToFront
        
        With grdPartidasATM
            .Clear: .ColWidth(0) = 4000: .Cols = 2: .ColWidth(1) = 1100
            .rows = 1: .Row = 0: .col = 0: .Clip = "DESCRIPCION": .col = 1: .Clip = "IMPORTE"
        End With
        
        With grdTotalesATM
            .Cols = 5: .rows = 1: .Row = 0
            .ColWidth(0) = 1000: .col = 0: .Clip = "ENGANCHE"
            .ColWidth(1) = 1000: .col = 1: .Clip = "SEMANAS"
            .ColWidth(2) = 1000: .col = 2: .Clip = "TOTAL"
            .ColWidth(3) = 1300: .col = 3: .Clip = "PAGOSEMANAL"
            .ColWidth(4) = 1050: .col = 4: .Clip = "ULTPAGO"
        End With
        
        lnCargoServicio = 1:  lnCargoEquipo = 1: liPlazo = 1
        
        With goVentaATM
            Set loPlan = .Plan
            Set loEquipo = .Equipo
            
            lblPLAN.Caption = UCase$("PLAN " & loPlan.descripcion) & " A   " & goVentaATM.PlazoADN & " SEMANAS"
            lblPLAN2.Caption = loPlan.Caracteristicas
            
            lblPlan3.Caption = "Incluye " & lstrADNSignoMoneda & loPlan.RentaMensual & _
            " mensuales para hacer llamadas a telefonos fijos, celulares iusacell, celulares de otras compa√±ias, " & _
            vbCrLf & " recados escritos y otros servicios."
            
            grdPartidasATM.AddItem loPlan.descripcion & Chr(9) & _
            IIf(goVentaATM.PlazoADN = 53, (loPlan.RentaSemanal * goVentaATM.PlazoADN), (loPlan.RentaMensual * goVentaATM.PlazoIUS))
            
            'ECG. Todo en semanas
            'grdPartidasATM.AddItem loPlan.Descripcion & Chr(9) & (loPlan.RentaSemanal * goVentaATM.PlazoADN)
            'grdPartidasATM.AddItem loEquipo.Descripcion & Chr(9) & loEquipo.CargoxPlan
            
            Set loColServicios = loPlan.Servicios
            For i = 1 To loColServicios.Count
                Set loServicio = loColServicios.Item(i)
                grdPartidasATM.AddItem loServicio.descripcion & Chr(9) & (loServicio.CargoSemanal * goVentaATM.PlazoADN)
                Set loServicio = Nothing
            Next i
            grdTotalesATM.AddItem .Enganche & Chr(9) & .PlazoADN & Chr(9) & .TotalxPlazo & Chr(9) & .PagoSemanal & Chr(9) & .UltPago & Chr(9)
        End With
        
        'Le pasa a la forma del presupuesto:
        'ECG. Seguros.
        objPrepGeneral.EsATM = True
        objPrepCom.EsATM = True
        objPrepTel.EsATM = True
        
        txtCodigo.Text = loEquipo.idEquipo          'El id del telefono
        txtCodigo_KeyDown vbKeyReturn, 1            'enter
        
        txtValorPartidaAux.Text = 1                 'Cantidad de productos = 1
        txtValorPartidaAux_KeyDown vbKeyReturn, 1
        If lbl10pc.Enabled = True Then lbl10pc_Click
        txtEngancheReqEK.Text = txtEnganche.Text 'Respalda el enganche que pide el prepa
        
        'Asi queda para que recompras valide.
        Label2.Visible = False: txtPorcEnganche.Visible = False
    '    txtEnganche.Text = Val(goVentaATM.Enganche)       'Coloca el enganche de ATM
       
        If objPrepGeneral.ProductoCredito.EngSug <> 0 Then
            'ECG. Para que exiga el porcentaje minimo de enganche + el cargo que tenga el telefono
            txtEnganche.Text = Val(goVentaATM.Enganche) + Val(txtEngancheReqEK.Text)       'Coloca el enganche de ATM
        Else
            txtEnganche.Text = Val(goVentaATM.Enganche)
        End If
        txtEnganche_KeyDown vbKeyReturn, 1                'enter
        
        'Del grid de plazos selecciona el plazo 53
        With grdCredito
            For i = 1 To .rows - 1
                .Row = i
                If Val(.TextMatrix(.Row, 0)) = 52 Then
                    Exit For
                End If
            Next i
        End With
        grdCredito_DblClick
        ATMBloqueaControles
    End Sub
    Private Sub lblATM_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
        ResaltaColor lblATM, True
    End Sub
    Private Sub ATMEliminaObjetos()
        frmATM.ZOrder vbSendToBack
        frmATM.Visible = False
        frmATM.Enabled = False
        frmATM2.ZOrder vbSendToBack
        frmATM2.Visible = False
        frmATM2.Enabled = False
        
        Label2.Visible = True
        txtPorcEnganche.Visible = True
        blnEsATM = False
        blnYaPaso1VezATM = False
        bytNegocio = 255
        objFuncionalidad.ReiniciaModeladoATM
        Set goVentaATM = Nothing
        objPrepGeneral.VentaCredito.VentaATM = Nothing
        objPrepGeneral.VentaCredito.EsATM = False
        Set objPrepGeneral.ProductoCredito = Nothing
        
        objPrepGeneral.EsATM = False
        objPrepGeneral.Plan = 0
        objPrepGeneral.PlazoATM = 0
                
        Call InicializaControles    'Reinicia todo para un nuevo presupuesto
    End Sub
    'HLP
    Public Function ValidarParametroAlnova() As Boolean
    On Error GoTo ErrValidarParametroAlnova
    
    Dim strSQL, strmsj As String
    Dim conexion As New ADODB.Connection
    Dim rs As ADODB.Recordset
    
    'VHSG
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    strSQL = "SELECT fcPrmVal FROM parametro WITH (NOLOCK) WHERE fiPrmID=5078"
    Set rs = New ADODB.Recordset
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = strSQL
    rs.Open
    
      If rs.RecordCount > 0 Then
        If CInt(rs(0)) = 1 Then
        ValidarParametroAlnova = True
    '    Else
    '     strmsj = "No esta prendido el par√°metro ALNOVA en la Base de Datos"
    '     GoTo ErrValidarParametroAlnova
        End If
      Else
         'strmsj = "No existe el registro del par√°metro ALNOVA en la Base de Datos"
         GoTo ErrValidarParametroAlnova
      End If
    
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Function
    
ErrValidarParametroAlnova:
        If strmsj = "" Then strmsj = "Hubo un error en la consulta del par√°metro ALNOVA"
        MsgBox strmsj, vbCritical + vbOKOnly, Me.Caption
        If conexion.State = adStateOpen Then conexion.Close
        If rs.State = adStateOpen Then rs.Close
        Set conexion = Nothing
        Set rs = Nothing
        ValidarParametroAlnova = False
    
    End Function
    'ROLHON10-I Parametro para 10% descuento clientes nuevos
    Public Function ValParam10PDescCliNue() As Boolean
    On Error GoTo ErrValParam10PDescCliNue
    
    Dim strSQL, strmsj As String
    Dim conexion As New ADODB.Connection
    Dim rs As ADODB.Recordset
    
    'VHSG
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    strSQL = "SELECT fcValorLcr FROM catparametroslcr WITH (NOLOCK) WHERE fiFolioLcr = 2414"
    Set rs = New ADODB.Recordset
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = strSQL
    rs.Open
    
      If rs.RecordCount > 0 Then
        If CInt(rs(0)) = 1 Then
           ValParam10PDescCliNue = True
        Else
           ValParam10PDescCliNue = False
        End If
      Else
         ValParam10PDescCliNue = False
      End If
    
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Function
    
ErrValParam10PDescCliNue:
        If strmsj = "" Then strmsj = "Hubo un error en la consulta del par√°metro 10% desc cliente Nuevo"
        MsgBox strmsj, vbCritical + vbOKOnly, Me.Caption
        If conexion.State = adStateOpen Then conexion.Close
        If rs.State = adStateOpen Then rs.Close
        Set conexion = Nothing
        Set rs = Nothing
        ValParam10PDescCliNue = False
    End Function
    'ROLHON10-F Parametro para 10% descuento clientes nuevos
    
    
    
    'ROLHON10-I Parametro para 10% descuento clientes nuevos
    Public Function Val10PDescCliForaneoNue() As Boolean
    On Error GoTo ErrVal10PDescCliForaneoNue
    
    Dim strSQL, strmsj As String
    Dim conexion As New ADODB.Connection
    Dim rs As ADODB.Recordset
    
    'VHSG
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    strSQL = "SELECT fcValorLcr FROM catparametroslcr WITH (NOLOCK) WHERE fiFolioLcr = 2414"
    Set rs = New ADODB.Recordset
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = strSQL
    rs.Open
    
      If rs.RecordCount > 0 Then
        If CInt(rs(0)) = 1 Then
           Val10PDescCliForaneoNue = True
        Else
           Val10PDescCliForaneoNue = False
        End If
      Else
         Val10PDescCliForaneoNue = False
      End If
    
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Function
    
ErrVal10PDescCliForaneoNue:
        If strmsj = "" Then strmsj = "Hubo un error en la consulta del par√°metro 10% desc cliente Nuevo"
        MsgBox strmsj, vbCritical + vbOKOnly, Me.Caption
        If conexion.State = adStateOpen Then conexion.Close
        If rs.State = adStateOpen Then rs.Close
        Set conexion = Nothing
        Set rs = Nothing
        Val10PDescCliForaneoNue = False
    End Function
    'ROLHON10-F Parametro para 10% descuento clientes nuevos
    
    
    
    
    'ROL001-I Parametro alnova para M√©xico
    Public Function ValidarParametroAlnovaMex() As Boolean
    On Error GoTo ErrValidarParametroAlnovaMex
    
    Dim strSQL, strmsj As String
    Dim conexion As New ADODB.Connection
    Dim rs As ADODB.Recordset
    
    'VHSG
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    strSQL = "SELECT fcValorLcr FROM catparametroslcr WITH (NOLOCK) WHERE fiFolioLcr = 2273"
    Set rs = New ADODB.Recordset
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = strSQL
    rs.Open
    
      If rs.RecordCount > 0 Then
        If CInt(rs(0)) = 1 Then
           ValidarParametroAlnovaMex = True
        Else
           ValidarParametroAlnovaMex = False
        End If
      Else
         ValidarParametroAlnovaMex = False
      End If
    
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Function
    
ErrValidarParametroAlnovaMex:
        If strmsj = "" Then strmsj = "Hubo un error en la consulta del par√°metro ALNOVA MEX"
        MsgBox strmsj, vbCritical + vbOKOnly, Me.Caption
        If conexion.State = adStateOpen Then conexion.Close
        If rs.State = adStateOpen Then rs.Close
        Set conexion = Nothing
        Set rs = Nothing
        ValidarParametroAlnovaMex = False
    
    End Function
    'ROL001-F Parametro Alnova para M√©xico
    
    'ROL001-I Parametro Creditalika
    Public Function ValidarParametroCreditalika() As Boolean
    On Error GoTo ErrValidarParametroCreditalika
    
    Dim strSQL, strmsj As String
    Dim conexion As New ADODB.Connection
    Dim rs As ADODB.Recordset
    
    'VHSG
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    strSQL = "SELECT fcValorLcr FROM catparametroslcr WITH (NOLOCK) WHERE fiFolioLcr = 2287"
    Set rs = New ADODB.Recordset
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = strSQL
    rs.Open
    
      If rs.RecordCount > 0 Then
        If CInt(rs(0)) = 1 Then
           ValidarParametroCreditalika = True
        Else
           ValidarParametroCreditalika = False
        End If
      Else
         ValidarParametroCreditalika = False
      End If
    
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Function
    
ErrValidarParametroCreditalika:
        If strmsj = "" Then strmsj = "Hubo un error en la consulta del par√°metro CREDITALIKA"
        MsgBox strmsj, vbCritical + vbOKOnly, Me.Caption
        If conexion.State = adStateOpen Then conexion.Close
        If rs.State = adStateOpen Then rs.Close
        Set conexion = Nothing
        Set rs = Nothing
        ValidarParametroCreditalika = False
    
    End Function
    'ROL001-F Parametro para Creditalika
    
    'ROL001-I Parametro para Validar Pagos Quincenales y Menusales
    Public Function ValidarPagosQuincenalesMenusales() As Boolean
    On Error GoTo ErrValidarPagosQuincenalesMenusales
    
    Dim strSQL, strmsj As String
    Dim conexion As New ADODB.Connection
    Dim rs As ADODB.Recordset
    
    'VHSG
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    strSQL = "SELECT fcValorLcr FROM catparametroslcr WITH (NOLOCK) WHERE fiFolioLcr = 2272"
    Set rs = New ADODB.Recordset
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = strSQL
    rs.Open
    
      If rs.RecordCount > 0 Then
        If CInt(rs(0)) = 1 Then
           ValidarPagosQuincenalesMenusales = True
        Else
           ValidarPagosQuincenalesMenusales = False
        End If
      Else
         ValidarPagosQuincenalesMenusales = False
      End If
    
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Function
    
ErrValidarPagosQuincenalesMenusales:
        If strmsj = "" Then strmsj = "No se enconpar√°metro para pagos quincenales y mensuales"
        MsgBox strmsj, vbCritical + vbOKOnly, Me.Caption
        If conexion.State = adStateOpen Then conexion.Close
        If rs.State = adStateOpen Then rs.Close
        Set conexion = Nothing
        Set rs = Nothing
        ValidarPagosQuincenalesMenusales = False
    
    End Function
    'ROL001-F Parametro para Validar Pagos Quincenales y Menusales
    
    'HLP
    Public Function ValidarOrigenCliente(ObjOrigenCliente As Object) As Boolean
    On Error GoTo ErrValidarOrigenCliente
    
    Dim strSQL, strmsj As String
    Dim conexion As New ADODB.Connection
    Dim rs As ADODB.Recordset
    
    'VHSG
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    strSQL = "SELECT FIORIGENLCR FROM TACRORIGENCTELCR WITH(NOLOCK)"
    strSQL = strSQL & " WHERE  FIFOLIO = " & ObjOrigenCliente.Folio & " AND FISUCURSAL = " & ObjOrigenCliente.SucursalOrigen
    strSQL = strSQL & " AND FICANAL = " & ObjOrigenCliente.Canal & " AND fiPais = " & ObjOrigenCliente.Pais
    
    Set rs = New ADODB.Recordset
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = strSQL
    rs.Open
    
    
        If rs.RecordCount > 0 Then
            If CInt(rs(0)) = 1 Or CInt(rs(0)) = 3 Then
                ValidarOrigenCliente = True
            Else
                strmsj = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1129")
                GoTo ErrValidarOrigenCliente
            End If
        Else
            strmsj = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1130")
            GoTo ErrValidarOrigenCliente
        End If
    
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Function
    
ErrValidarOrigenCliente:
        If strmsj = "" Then strmsj = "Hubo un error en la consulta de Origen Cliente"
        MsgBox strmsj, vbCritical + vbOKOnly, Me.Caption
        If conexion.State = adStateOpen Then conexion.Close
        If rs.State = adStateOpen Then rs.Close
        Set conexion = Nothing
        Set rs = Nothing
        ValidarOrigenCliente = False
    End Function
    
    'EDMA Nuevas Reglas de Credito 13/12/2010
    Public Function fnNRC() As Boolean
    'ROLREM2-I
    ''DeclaroVariables Locales
    'Dim NRC_Conecta As ADODB.Connection
    'Dim NRC_Reg As ADODB.Recordset
    'Dim pr As Integer
    'Dim MRec As Object
    'On Error GoTo errores
    '    PRecompras.EsMensajeinformativo = True
    '
    '    fnNRC = False
    '    Set NRC_Conecta = New ADODB.Connection
    '    If NRC_Conecta.State <> 0 Then
    '        NRC_Conecta.Close
    '    End If
    '    'VHSG
    '    NRC_Conecta.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    '    NRC_Conecta.CursorLocation = adUseClient
    '    Set NRC_Reg = NRC_Conecta.Execute("SELECT ISNULL(fiPrmId,0)  FROM PARAMETRO WITH(NOLOCK) WHERE fiPrmId = 5075 and fcPrmVal  ='1'")
    '    If NRC_Reg.RecordCount > 0 Then
    '        Set NRC_Reg = NRC_Conecta.Execute("EXEC PACRLLSLimReglasCredito 0,0,0")
    '        PRecompras.aceptolcrs = 1
    '        If Val(objPrepGeneral.VentaCredito.PrecioDETotal) <= Val(NRC_Reg.Fields(0)) And Val(objPrepGeneral.VentaCredito.abono) <= Val(NRC_Reg.Fields(1)) Then
    '            If MsgBox(PRecompras.gsMensajesError, vbQuestion + vbYesNo) = vbYes Then
    '                    PRecompras.aceptolcrs = 2
    '                If NRC_Conecta.State <> 0 Then
    '                    NRC_Conecta.Close
    '                End If
    '                fnNRC = True
    '                Set NRC_Conecta = Nothing
    '                Set NRC_Reg = Nothing
    '            End If
    '        End If
    '    End If
    'Exit Function
    'errores:
    '    fnNRC = False
    '    MsgBox Err.Description
    '    If NRC_Conecta.State <> 0 Then
    '        NRC_Conecta.Close
    '    End If
    '    Exit Function
    'ROLREM2-I
    End Function
    
    Sub comprueba_puntuales()
    ''EDMA
    Dim cplazo As Integer
    Dim objventa, abono As Object
    'ROLREQ88710-I  Posible movimiento para abono
    
    For Each objventa In objPrepGeneral.VentaCredito.ColDetalleVenta
        For Each abono In objventa.producto.colTazas
        
            If objventa.producto.EsSeguro Then Exit Sub
            
            If gobjSoftGoods.RevisaSiEsDeptoSoftGOODS(objventa.producto.Depto) Then objventa.esSOFTGOOD = True
            
            If objventa.esSOFTGOOD Then
                'ROL001-I
                'If abono.Plazo = Val(grdCreditoRopa.TextMatrix(grdCreditoRopa.RowSel, 0)) Then
                If abono.Plazo = Val(grdCreditoRopa.TextMatrix(grdCreditoRopa.RowSel, 0)) And abono.Periodo = NumPeriodoPago Then
                'ROL001-F
                    objventa.AbonoMas1 = abono.MontoPagoP
                    objventa.abono = abono.MtoPAbono
                    
                    ''# REQ 72044 OT 161308 Pasar Plazo elejido ERV    #
                    'objventa.PlazoEleCli = Val(grdCredito.TextMatrix(grdCredito.RowSel, 0))
                    
                End If
            Else
                'ROL001-I
                'If abono.Plazo = Val(grdCredito.TextMatrix(grdCredito.RowSel, 0)) Then
                 If abono.Plazo = Val(grdCredito.TextMatrix(grdCredito.RowSel, 0)) And abono.Periodo = NumPeriodoPago Then
                'ROL001-F
                    objventa.AbonoMas1 = abono.MontoPagoP
                    
                    ''# REQ 72044 OT 161308 Pasar Plazo elejido ERV    #
                    'objventa.PlazoEleCli = Val(grdCredito.TextMatrix(grdCredito.RowSel, 0))
                                    
                End If
            End If
        Next
    Next
    Exit Sub
    
    End Sub
    
    'VHSG 17/06/2011 Validad si es motos
    Public Function VerificarDepto(pstrCodigo As String) As Boolean
    'DeclaroVariables Locales
    Dim NRC_Conecta As ADODB.Connection
    Dim NRC_Reg As ADODB.Recordset
    
    On Error GoTo errores
        VerificarDepto = False
        
        Set NRC_Conecta = New ADODB.Connection
        If NRC_Conecta.State <> 0 Then
            NRC_Conecta.Close
        End If
        'VHSG
        NRC_Conecta.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
        NRC_Conecta.CursorLocation = adUseClient
        Set NRC_Reg = NRC_Conecta.Execute("Exec PACRLLSValidaDepto " & pstrCodigo)
        If NRC_Reg.RecordCount > 0 Then
            VerificarDepto = CBool(NRC_Reg.Fields(0))
        End If
        
        If NRC_Conecta.State = adStateOpen Then NRC_Conecta.Close
        If NRC_Reg.State = adStateOpen Then NRC_Reg.Close
    Exit Function
errores:
        MsgBox Err.Description
        If NRC_Conecta.State <> 0 Then
            NRC_Conecta.Close
        End If
        Exit Function
    End Function
    
    'VHSG 17/06/2011 Verifica se tienen capacidad para imprimir documento
    Public Function VerificarCapacidad() As Boolean
    On Error GoTo errores
        VerificarCapacidad = False
        
        If objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp > objPrepGeneral.VentaCredito.Cliente.CapDispCONSobregiro Then
            If objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp >= objPrepGeneral.VentaCredito.AbonoMas1 Then
                VerificarCapacidad = True
            End If
        Else
            If objPrepGeneral.VentaCredito.Cliente.CapDispCONSobregiro >= objPrepGeneral.VentaCredito.AbonoMas1 Then
                VerificarCapacidad = True
            End If
        End If
            
    Exit Function
errores:
        MsgBox Err.Description
        Exit Function
    End Function
    
    'VHSG 17/06/2011 Funcion para llamado de componente de impresion de carta instruccion
    Public Function ImprimirCartaInstruccion() As Boolean
    On Error GoTo errores
        If InicializaComponentes Then
            Dim objImpPrepa As AhoComprobanteI61.IntComprobante
            Adm.CtrMen.Mostrar 5, "Imprimiendo Carta Instruccion... Espere un momento", 200
            DoEvents
            Set objImpPrepa = CreateObject("CrLCRMotCtaInstr.CtrLCRCLSCtaInstr")
            Adm.CrearObjeto objImpPrepa, "CrLCRMotCtaInstr.CtrLCRCLSCtaInstr", False, True
            objImpPrepa.Reimpresion = False
            objImpPrepa.TipoArchivo = 1
            objImpPrepa.TipoDispositivo = 1
            
            objImpPrepa.Imprimir objPrepGeneral
            
            objImpPrepa.Destruir
            Set objImpPrepa = Nothing
            Adm.CtrMen.Ocultar
            
            DoEvents
            
            Adm.CtrMen.Ocultar
        End If
        Set Adm = Nothing
    Exit Function
errores:
        MsgBox Err.Description
        Exit Function
    End Function
    
    'VHSG 17/06/2011 Funcion para inicializar el administrador que ocupa el componente de impresion
    Public Function InicializaComponentes() As Boolean
    On Error GoTo errores
        InicializaComponentes = False
        
        Set Adm = New AdnAdmonAplC65.CtrAdmApl
        If Adm.CrearObjeto(Adm, "AdnAdmonAplC65.CtrAdmApl", False, False) Then
            Adm.aplicacion = App.Title
            Adm.CtrErr.RegistrarErrores = True
            
            Adm.Ejecutar Command, 0
            
            Adm.CtrPar.ObtenerParametros 1, 15
        End If
        
        InicializaComponentes = True
    Exit Function
errores:
        MsgBox Err.Description
        Exit Function
    End Function
    
    Private Function PromoDescRec(Pais As Integer, Canal As Integer, Sucursal As Integer, Folio As Long, Capital As Double, Optional Plazo As Long = 0) As Double
    On Error GoTo ErrVB
       PromoDescRec = 0
       'Implementacion de componente de promociones
      Dim objPromociones As Object
       
       If Folio = 0 Then Exit Function
      
       '/*Compra a credito y paga de contado */
       Call subDatosPromociones
       '/*Compra a credito y paga de contado */
      
     If gsBanderaPromo114 = False Then
      
      Set objPromociones = CreateObject("CRLCRAdmonPromoCE.CLRCRClsAPromo")
            objPromociones.fcCU = Format(CStr(Pais), "00") & Format(CStr(Canal), "00") & Format(CStr(Sucursal), "0000") & CStr(Folio)
            objPromociones.pnCapital = Capital
            objPromociones.Plazo = Plazo
            objPromociones.ConsultarPromocion "PRESUPUESTO"
            'FIX
            'PromoDescRec = Redondea(objPromociones.MontoDescuento)
            PromoDescRec = Round(objPromociones.MontoDescuento)
            'FIX
        Set objPromociones = Nothing
        
     End If
    
    Exit Function
ErrVB:
        PromoDescRec = 0
    End Function
    
    '/* ERV Compra a credito y paga de contado */
    Sub subDatosPromociones()
    Dim strSQL, strmsj      As String
    Dim conexion            As New ADODB.Connection
    Dim rs                  As ADODB.Recordset
    Dim lsTipoPromo         As String
    Dim lsProductos         As String
    Dim lsProductosCad      As String
    Dim strclasif           As String
    Dim liRestricCadena     As Integer
    Dim ColumnaInicio       As Integer
    Dim lsvaloProdIDGrid    As String
    
    
    On Error GoTo ErrDatosPromociones
    
    gsBanderaPromo114 = True
    'VHSG
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    strSQL = "SELECT c.fiTipoProm, c.fiIdCampanha, t.fiProducto from credpromocionesce c WITH (NOLOCK)  inner join TACRLCONDPROMCE t WITH (NOLOCK) " & _
             "ON c.fiIdCampanha=t.fiIdCampanha WHERE getdate() between fdIniciocmp " & _
             "AND fdfincmp AND fiTipoProm in (103,114) AND fiProducto<>'0'"
    
        Set rs = New ADODB.Recordset
        rs.ActiveConnection = conexion
        rs.CursorLocation = adUseClient
        rs.CursorType = adOpenDynamic
        rs.LockType = adLockReadOnly
        rs.Source = strSQL
        rs.Open
    
        If rs.RecordCount > 0 Then
            lsTipoPromo = rs("fiTipoProm").Value
            lsProductosCad = rs("fiProducto").Value
            
            '/* ERV Compra a credito y paga de contado */
            liRestricCadena = InStr(1, lsProductosCad, "-")
            
            If liRestricCadena <> 0 Then
            
                    If CInt(lsTipoPromo) = 114 And lsProductosCad <> "" Then
                     
                     ColumnaInicio = 1
                        Do While frmPrepa.grdPartidas.Row >= ColumnaInicio
                            lsvaloProdIDGrid = frmPrepa.grdPartidas.TextMatrix(ColumnaInicio, 0)
                            lsProductos = lsProductosCad
                            'Compara los productos si se encuentra dentro de la promocion
                            '/* trae el valor de la cadena de la promocion */
                                 While Len(lsProductos) > 0
                                     
                                    strclasif = Left(lsProductos, IIf(InStr(1, lsProductos, "-", vbTextCompare) > 0, InStr(1, lsProductos, "-", vbTextCompare) - 1, Len(lsProductos)))
                                     
                                     If Trim(lsvaloProdIDGrid) = Trim(strclasif) Then
                                         gsBanderaPromo114 = False
                                         Exit Sub
                                     End If
                                     
                                    strclasif = Left(lsProductos, IIf(InStr(1, lsProductos, "-", vbTextCompare) > 0, InStr(1, lsProductos, "-", vbTextCompare) - 1, Len(lsProductos)))
                                    
                                    If Len(lsProductos) = Len(strclasif) Then
                                        lsProductos = ""
                                    Else
                                        lsProductos = Right(lsProductos, Len(lsProductos) - Len(strclasif) - 1)
                                    End If
                                 Wend
                            ColumnaInicio = ColumnaInicio + 1
                        Loop
                     
    '                        '/* trae el valor de la cadena de la promocion */
    '                         While Len(lsProductos) > 0
    '
    '                            strclasif = Left(lsProductos, IIf(InStr(1, lsProductos, "-", vbTextCompare) > 0, InStr(1, lsProductos, "-", vbTextCompare) - 1, Len(lsProductos)))
    '
    '
    '
    '
    '
    '                            strclasif = Left(lsProductos, IIf(InStr(1, lsProductos, "-", vbTextCompare) > 0, InStr(1, lsProductos, "-", vbTextCompare) - 1, Len(lsProductos)))
    '
    '
    '                            If Len(lsProductos) = Len(strclasif) Then
    '                                lsProductos = ""
    '                            Else
    '                                lsProductos = Right(lsProductos, Len(lsProductos) - Len(strclasif) - 1)
    '                            End If
    '                         Wend
    '
                    
                    Else
                       gsBanderaPromo114 = False
                    End If
            Else
              gsBanderaPromo114 = False
            End If
        Else
           gsBanderaPromo114 = False
        End If
    
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Sub
    
ErrDatosPromociones:
    '    If strmsj = "" Then strmsj = "Hubo un error en la consulta de Origen Cliente"
    '    MsgBox strmsj, vbCritical + vbOKOnly, Me.Caption
        If conexion.State = adStateOpen Then conexion.Close
        If rs.State = adStateOpen Then rs.Close
        Set conexion = Nothing
        Set rs = Nothing
    '    ValidarOrigenCliente = False
    gsBanderaPromo114 = True
    End Sub
    
    Private Function ObtenCapitalReal(objPrepGeneral As Object) As Double
    
    Dim objPromociones As Object
    Dim objClasif As Object
    
    On Error GoTo ErrVB
        ObtenCapitalReal = 0
        
    Set objPromociones = CreateObject("CRLCRAdmonPromoCE.CLRCRClsAPromo")
    'Set objPromociones = New CRLCRAdmonPromoCE.CLRCRClsAPromo
    objPromociones.VerificaRestriccionPromoDesc
        
    'frps 26/10/2012 agregamos la parte de la restriccion
        
    If Not gobjSoftGoods.SoftGood = TIENE_SOFT_GOODS Then
        For i = 1 To objPrepGeneral.ColDetalleVenta.Count
                If Not objPrepGeneral.ColDetalleVenta(i).producto.EsSeguro Then
                        If Not objPromociones.Clasificaciones Is Nothing Then
                            For Each objClasif In objPromociones.Clasificaciones
                            
                                If objClasif.Subdepartamento = 0 Then
                                    If objClasif.Departamento = objPrepGeneral.ColDetalleVenta(i).producto.Depto Then
                                        ObtenCapitalReal = ObtenCapitalReal + _
                                        (objPrepGeneral.ColDetalleVenta(i).PrecioChazxPartida * objPrepGeneral.ColDetalleVenta(i).Cantidad)
                                    End If
                                Else
                                    If objClasif.Clase = 0 Then
                                        If objClasif.Departamento = objPrepGeneral.ColDetalleVenta(i).producto.Depto And _
                                        objClasif.Subdepartamento = objPrepGeneral.ColDetalleVenta(i).producto.Subdepto Then
                                            ObtenCapitalReal = ObtenCapitalReal + _
                                            (objPrepGeneral.ColDetalleVenta(i).PrecioChazxPartida * objPrepGeneral.ColDetalleVenta(i).Cantidad)
                                        End If
                                    Else
                                        If objClasif.Subclase = 0 Then
                                            If objClasif.Departamento = objPrepGeneral.ColDetalleVenta(i).producto.Depto And _
                                            objClasif.Subdepartamento = objPrepGeneral.ColDetalleVenta(i).producto.Subdepto And _
                                            objClasif.Clase = objPrepGeneral.ColDetalleVenta(i).producto.Clase Then
                                                ObtenCapitalReal = ObtenCapitalReal + _
                                                (objPrepGeneral.ColDetalleVenta(i).PrecioChazxPartida * objPrepGeneral.ColDetalleVenta(i).Cantidad)
                                            End If
                                        Else
                                            If objClasif.Departamento = objPrepGeneral.ColDetalleVenta(i).producto.Depto And _
                                            objClasif.Subdepartamento = objPrepGeneral.ColDetalleVenta(i).producto.Subdepto And _
                                            objClasif.Clase = objPrepGeneral.ColDetalleVenta(i).producto.Clase And _
                                            objClasif.Subclase = objPrepGeneral.ColDetalleVenta(i).producto.Subclase Then
                                                ObtenCapitalReal = ObtenCapitalReal + _
                                                (objPrepGeneral.ColDetalleVenta(i).PrecioChazxPartida * objPrepGeneral.ColDetalleVenta(i).Cantidad)
                                            End If
                                        
                                        End If
                                    End If
                                End If
                            Next
                        Else
                            ObtenCapitalReal = ObtenCapitalReal + _
                            (objPrepGeneral.ColDetalleVenta(i).PrecioChazxPartida * objPrepGeneral.ColDetalleVenta(i).Cantidad)
                        End If
                End If
        Next i
    Else
        For i = 1 To objPrepGeneral.ColDetalleVenta.Count
            If Not objPrepGeneral.ColDetalleVenta(i).producto.EsSeguro Then
                    ObtenCapitalReal = ObtenCapitalReal + (objPrepGeneral.ColDetalleVenta(i).producto.ProdPrecio * objPrepGeneral.ColDetalleVenta(i).Cantidad)
            End If
        Next i
    End If
        Exit Function
    Set objPromociones = Nothing
ErrVB:
        Set objPromociones = Nothing
        ObtenCapitalReal = 0
    End Function
    
    Public Function SaldosAlnova() As Boolean
     'HLP
     On Error GoTo ManejaError
     
     Dim ActSaldos As New CredActSaldosRNPP.clsConsultaPedido
     
     
     
     Dim strSQL, strmsj As String
     Dim conexion As New ADODB.Connection
     'Dim rs As ADODB.Recordset
    
     'VHSG
     conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
     
     If conexion.State = adStateClosed Then
     End If
      
              If conexion.State Then
                        ActSaldos.conexion = conexion
                        ActSaldos.fiPaisCU = objPrepGeneral.VentaCredito.Cliente.Pais
                        ActSaldos.fiCanalCU = objPrepGeneral.VentaCredito.Cliente.Canal
                        ActSaldos.fiSucursalCU = objPrepGeneral.VentaCredito.Cliente.SucursalOrigen
                        ActSaldos.fiFolioCU = objPrepGeneral.VentaCredito.Cliente.Folio
                        ActSaldos.fcUsuario = NvoEnv.Usuario
                        ActSaldos.fcPassword = NvoEnv.Password
    
                            If ActSaldos.ConsultaPedidoCliente = True Then
                                   SaldosAlnova = True
                               Exit Function
                            Else
                               MsgBox ActSaldos.msgError, vbInformation + vbOKOnly, "Consulta Saldos Alnova"
                            End If
                End If
        Exit Function
    
ManejaError:
        'Set ObjCliente = Nothing
        Err.Raise Err.Number, Err.Source, Err.Description
    End Function
    
    'VHSG 17/06/2011 Verifica se tienen capacidad para imprimir documento
    Public Function ObtenerColor(strcolor As String) As Long
    On Error GoTo errores
        ObtenerColor = vbBlack
        
        strcolor = UCase(strcolor)
        
        Select Case strcolor
        Case "NEGRO", "BLACK"
            ObtenerColor = vbBlack
        Case "AZUL", "BLUE"
            ObtenerColor = vbBlue
        Case "VERDE", "GREEN"
            ObtenerColor = vbGreen
        Case "ROJO", "RED"
            ObtenerColor = vbRed
        Case "BLANCO", "WHITE"
            ObtenerColor = vbWhite
        Case "AMARILLO", "YELLOW"
            ObtenerColor = vbYellow
        End Select
            
    Exit Function
errores:
        MsgBox Err.Description
        Exit Function
    End Function
    
    
    Public Function funValidaCreditoInmediato(viPais As Integer, viCanal As Integer, viSucursal As Integer, viFolio As Long) As Boolean
    funValidaCreditoInmediato = False
    Dim NRC_Conecta As ADODB.Connection
    Dim Reg As ADODB.Recordset
    Dim PorcEnganche As String
    Dim FolioParam As String
    On Error GoTo errores
    
       Set Reg = New ADODB.Recordset
    
       Set NRC_Conecta = New ADODB.Connection
       If NRC_Conecta.State <> 0 Then
          NRC_Conecta.Close
       End If
       
       NRC_Conecta.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
       NRC_Conecta.CursorLocation = adUseClient
       Set Reg = NRC_Conecta.Execute("Exec PACRLLSCreditoInmediatoCE " & viPais & "," & viCanal & "," & viSucursal & "," & viFolio)
       If Reg.RecordCount > 0 Then
          funValidaCreditoInmediato = Reg!CreditoInmediato
          PorcEnganche = Reg!PorcEnganche
          FolioParam = Reg!FolioParam
       End If
        
        Dim lsParametro As String
        Dim lsParametroCanti As String      ''ABBR Credito Inmediato Nuevo
        
       If funValidaCreditoInmediato = True Then
          LeeParametro 5686, lsParametro, lsParametroCanti
        
          If bolCredInmSKU Then
             If Trim(lsParametro) = "" Or Trim(lsParametroCanti) = "" Then
                MsgBox ("No se encuentra el parametro 5686")
             Else
                CantidadCredInm = Trim(lsParametroCanti)
                               
                If PorcEnganche = "" Then
                   PorcentajeCredInm = CInt(Trim(lsParametro))
                Else
                   If FolioParam = 0 Then
                      PorcentajeCredInm = CInt(Trim(PorcEnganche))
                   Else
                      PorcentajeCredInm = CInt(Trim(lsParametro))
                   End If
                End If
             End If
          Else
             If Trim(lsParametro) = "" Or Trim(lsParametroCanti) = "" Then
                MsgBox ("No se encuentra el parametro 5686")
             Else
                CantidadCredInm = Trim(lsParametroCanti)
                                
                If PorcEnganche = "" Then
                   PorcentajeCredInm = CInt(Trim(lsParametro))
                Else
                   If FolioParam = 0 Then
                      PorcentajeCredInm = CInt(Trim(PorcEnganche))
                   Else
                      PorcentajeCredInm = CInt(Trim(lsParametro))
                   End If
                End If
             End If
          End If  'If bolCredInmSKU Then
       End If
        
       If NRC_Conecta.State = adStateOpen Then NRC_Conecta.Close
       If Reg.State = adStateOpen Then Reg.Close
       
       Exit Function
       
errores:
       MsgBox Err.Description
       If NRC_Conecta.State <> 0 Then
          NRC_Conecta.Close
       End If
       Exit Function
    End Function
    
    'ABBR ERV Credito Inmediato Febrero 2015
    
    '/* Trae el valor de los parametros que se envie*/
    Public Function LeeParametro(ByVal parametro As Long, ByRef valor As String, ByRef valorCanti As String) As Boolean   'rtf100
    
    LeeParametro = False
    'DeclaroVariables Locales
    Dim NRC_Conecta As ADODB.Connection
    Dim Reg As ADODB.Recordset
    Dim PValor() As String      ''ABBR Credito Inmediato Nuevo
    Dim i As Integer
    
    On Error GoTo errores
        'VerificarDepto = False
    
        Set Reg = New ADODB.Recordset
    
        Set NRC_Conecta = New ADODB.Connection
        If NRC_Conecta.State <> 0 Then
            NRC_Conecta.Close
        End If
        'VHSG
        NRC_Conecta.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
        NRC_Conecta.CursorLocation = adUseClient
        Set Reg = NRC_Conecta.Execute("SELECT fcPrmVal FROM PARAMETRO WITH(NOLOCK) WHERE fiPrmId = " & parametro)
        If Reg.RecordCount > 0 Then
            PValor = Split(Trim(Reg!fcPrmVal), "/") ''ABBR Credito Inmediato Nuevo
            'valor = Trim(Reg!fcPrmVal)  --> Antes.
            LeeParametro = True
        End If
        
        'ABBR Credito Inmediato Nuevo
        'valor = Trim(PValor(0))
        'valorCanti = Trim(PValor(1))
        
        
        
        'ABBR Credito Inmediato Motos. Abril/2015
        If objPrepGeneral.VentaCredito.BanCredInSKU Then
            valor = Trim(PValor(5))
            valorCanti = Trim(PValor(6))
        Else
            valor = Trim(PValor(1))
            valorCanti = Trim(PValor(2))
        End If
    
    
    
        
    
        If NRC_Conecta.State = adStateOpen Then NRC_Conecta.Close
        If Reg.State = adStateOpen Then Reg.Close
    Exit Function
errores:
        MsgBox Err.Description
        If NRC_Conecta.State <> 0 Then
            NRC_Conecta.Close
        End If
        Exit Function
    End Function
    
    'ROL005-I
    Public Function BorraLog(lstrRutaABorrar As String)
        On Error Resume Next
          Kill (lstrRutaABorrar)
    End Function
    'ROL005-F
    
    'ROL005-I
    Public Function Log(pstrLog As String)
        Dim hnd As Long
        On Error Resume Next
          hnd = FreeFile
          Open "C:\Windows\Temp\CEPresupuesto_" & Format(Date$, "ddmmyyyy") & ".log" For Append As #hnd
          Print #hnd, Date$ & " " & Time$ & " " & pstrLog
          Close #hnd
    End Function
    'ROL005-F
    
    
    '/* ERV -- REQ86631 OT208334 Calculo de Nuevas Tasas*/
    Public Function funTraeTasaAbonos()
    Dim strSQL, strmsj As String
    Dim conexion As New ADODB.Connection
    Dim rs As ADODB.Recordset
    Dim lsParametroTasa As String
    Dim lsRespuestaTiposCli As String
    Dim lsProduc As String
    Dim ldMontoFinanciarClienteTasa As Double
    Dim liPlazoClienteTasa As Integer
    Dim ldAbonoPuntualSinProm As Double
    Dim lsCodigosGenericosSKU As String
    Dim lsPlazoNVOTasaCli As Double
    Dim lsANormalNVOTasaCli As Double
    Dim lsAPuntualNVOTasaCli As Double
    Dim lsUlAbonoNVOTasaCli As Double
    Dim lobjTasaPlazo As New TasaPlazo
    Dim ldFechaServer As Date
    
    
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
    If conexion.State = adStateClosed Then
    End If
    
    Set rs = New ADODB.Recordset
    
    StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Entra al parametro 1665 19"
    Call Log(StrLog)
    
    strSQL = "SELECT fiSubItemStat FROM CATALOGO_GENERICO WITH(NOLOCK) WHERE fiItemId = 1665 AND fiSubItemId = 19"
    
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = strSQL
    rs.Open
    
    
        If rs.RecordCount > 0 Then
          lsParametroTasa = rs.Fields("fiSubItemStat").Value
        Else
          lsParametroTasa = 0
        End If
    
    StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Valor del parametro 1665 19: " & lsParametroTasa
    Call Log(StrLog)
    
    
    If CInt(lsParametroTasa) = 1 Then
    
        If rs.State = adStateOpen Then rs.Close
                                                                                                                                                                                                           StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Entra a la Fecha "
        Call Log(StrLog)
    
        strSQL = "select getdate() as FechaServer"
        
        rs.ActiveConnection = conexion
        rs.CursorLocation = adUseClient
        rs.CursorType = adOpenDynamic
        rs.LockType = adLockReadOnly
        rs.Source = strSQL
        rs.Open
            
        
            If rs.RecordCount > 0 Then
              ldFechaServer = rs.Fields("FechaServer").Value
            Else
              ldFechaServer = ""
            End If
            
        StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Sale de la Fecha "
        Call Log(StrLog)
    
    
        If rs.State = adStateOpen Then rs.Close
        
        StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Entra a parametro 1665 24 "
        Call Log(StrLog)
    
        strSQL = "SELECT fcCatDesc FROM CATALOGO_GENERICO WITH(NOLOCK) WHERE fiItemId = 1665 AND fiSubItemId = 24"
        
        rs.ActiveConnection = conexion
        rs.CursorLocation = adUseClient
        rs.CursorType = adOpenDynamic
        rs.LockType = adLockReadOnly
        rs.Source = strSQL
        rs.Open
            
        
            If rs.RecordCount > 0 Then
              lsCodigosGenericosSKU = rs.Fields("fcCatDesc").Value
            Else
              lsCodigosGenericosSKU = 0
            End If
            
        StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Valor del parametro 1665 24: " & lsRespuestaTiposCli
        Call Log(StrLog)
    
        If rs.State = adStateOpen Then rs.Close
        
        StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Entra a parametro 1665 20 "
        Call Log(StrLog)
    
        strSQL = "SELECT fcCatDesc FROM CATALOGO_GENERICO WITH(NOLOCK) WHERE fiItemId = 1665 AND fiSubItemId = 20"
        
        rs.ActiveConnection = conexion
        rs.CursorLocation = adUseClient
        rs.CursorType = adOpenDynamic
        rs.LockType = adLockReadOnly
        rs.Source = strSQL
        rs.Open
        
        
            If rs.RecordCount > 0 Then
              lsRespuestaTiposCli = rs.Fields("fcCatDesc").Value
            Else
              lsRespuestaTiposCli = 0
            End If
            
        StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Valor del parametro 1665 20: " & lsRespuestaTiposCli
        Call Log(StrLog)
        
        
        If InStr(lsRespuestaTiposCli, adnProductoResPuente.ITipoCliRecom) Then
            
            lsProduc = "null"
            lsProduc = Trim(STR(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID))
            
            If InStr(lsCodigosGenericosSKU, lsProduc) Then
              lsProduc = "null"
            Else
              'lsProduc = Str(objPrepGeneral.VentaCredito.ColDetalleVenta(1).producto.ProdID)
              lsProduc = "null"
            End If
            
            StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Valor del lsProduc: " & lsProduc
            Call Log(StrLog)
            
            ldMontoFinanciarClienteTasa = 0
            liPlazoClienteTasa = 0
            ldAbonoPuntualSinProm = 0
            'ldMontoFinanciarClienteTasa = adnProductoResPuente.MontoFinanciarTasa
            ldMontoFinanciarClienteTasa = objPrepGeneral.VentaCredito.PrecioDETotal - objPrepGeneral.VentaCredito.DescuentoCredTotal - objPrepGeneral.VentaCredito.EngancheTotal
            liPlazoClienteTasa = objPrepGeneral.VentaCredito.Plazo
            'ldAbonoPuntualSinProm = adnProductoResPuente.AbonoPuntualTasa  ''' Coregir
            ldAbonoPuntualSinProm = objPrepGeneral.VentaCredito.AbonoMas1
            
            StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: ldMontoFinanciarClienteTasa: " & ldMontoFinanciarClienteTasa & " liPlazoClienteTasa: " & liPlazoClienteTasa & " ldAbonoPuntualSinProm: " & ldAbonoPuntualSinProm
            Call Log(StrLog)
            
            If rs.State = adStateOpen Then rs.Close
            'strSQL = "SELECT fcPromocion 'PROMOCION',fiPlazo 'PLAZO',fiPeriodo 'PERIODO',fnAbonoNormal 'ABONO NORMAL',fnAbonoPuntual 'ABONO PUNTUAL',fnUltimoAbono 'ULTIMO ABONO' " & _
                     " FROM FNCRLTasasAbonos (1," & adnProductoResPuente.ITipoCliRecom & ",'" & adnProductoResPuente.TipoProdTasa & "','" & Format(ldFechaServer, "yyyy-MM-dd hh:mm:ss") & "'," & ldMontoFinanciarClienteTasa & "," & lsProduc & ",1," & liPlazoClienteTasa & "," & objPrepGeneral.VentaCredito.Plazo & ",null)"
            
            strSQL = "EXEC PACRLLSTasasAbonos 1," & adnProductoResPuente.ITipoCliRecom & ",'" & adnProductoResPuente.TipoProdTasa & "'," & ldMontoFinanciarClienteTasa & "," & lsProduc & ",1," & liPlazoClienteTasa & "," & objPrepGeneral.VentaCredito.Plazo & ",null"
            
            StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Armado de Stored: " & strSQL
            Call Log(StrLog)
            
            rs.ActiveConnection = conexion
            rs.CursorLocation = adUseClient
            rs.CursorType = adOpenDynamic
            rs.LockType = adLockReadOnly
            rs.Source = strSQL
            rs.Open
         
            If rs.RecordCount > 0 Then
              
              StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Entra a validacion de asignacion de datos "
              Call Log(StrLog)
                    
              lsPlazoNVOTasaCli = rs.Fields("PLAZO").Value
              lsANormalNVOTasaCli = rs.Fields("ABONO NORMAL").Value
              lsAPuntualNVOTasaCli = rs.Fields("ABONO PUNTUAL").Value
              lsUlAbonoNVOTasaCli = rs.Fields("ULTIMO ABONO").Value
              
              StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Valor de la Funcion: lsPlazoNVOTasaCli" & lsPlazoNVOTasaCli & " lsANormalNVOTasaCli: " & lsANormalNVOTasaCli & " lsAPuntualNVOTasaCli: " & lsAPuntualNVOTasaCli & " lsUlAbonoNVOTasaCli: " & lsUlAbonoNVOTasaCli
              Call Log(StrLog)
             
              'Sin Promocion
              frmOfertaPlazo.LblmontoSin.Caption = Format(ldMontoFinanciarClienteTasa, "$###,###")
              frmOfertaPlazo.LblplazoSin.Caption = liPlazoClienteTasa
              frmOfertaPlazo.LblpagoSin.Caption = Format(ldAbonoPuntualSinProm, "$###,###")
              frmOfertaPlazo.LbltotalSin.Caption = Format((liPlazoClienteTasa * ldAbonoPuntualSinProm), "$###,###")
              
                  
              'Con Promocion
              frmOfertaPlazo.LblmontoCon.Caption = Format(ldMontoFinanciarClienteTasa, "$###,###")
              frmOfertaPlazo.LblplazoCon.Caption = liPlazoClienteTasa
              frmOfertaPlazo.LblpagoCon.Caption = Format(lsAPuntualNVOTasaCli, "$###,###")
              frmOfertaPlazo.LbltotalCon.Caption = Format((liPlazoClienteTasa * lsAPuntualNVOTasaCli), "$###,###")
                
              frmOfertaPlazo.lblAhorroPesos.Caption = Format((liPlazoClienteTasa * ldAbonoPuntualSinProm) - (liPlazoClienteTasa * lsAPuntualNVOTasaCli), "$###,###")
              
              'Llena variables de actualizacion de Abonos y envia parametro de actualizacion de funcionalidad
                lobjTasaPlazo.NVOTasaCliPAbono = lsANormalNVOTasaCli
                lobjTasaPlazo.NVOTasaCliUAbono = lsUlAbonoNVOTasaCli
                lobjTasaPlazo.NVOTasaCliPPuntual = lsAPuntualNVOTasaCli
                lobjTasaPlazo.ParametroTasa = lsParametroTasa
                  
             
             StrLog = "Adn2Presupuesto->frmprepa->funTraeTasaAbonos: Armado de Stored: " & strSQL
             Call Log(StrLog)
                  
             frmOfertaPlazo.Show vbModal
            
            Else
              lsPlazoNVOTasaCli = 0
              lsANormalNVOTasaCli = 0
              lsAPuntualNVOTasaCli = 0
              lsUlAbonoNVOTasaCli = 0
              lobjTasaPlazo.ParametroTasa = 0
            End If
            
        Else
           lobjTasaPlazo.ParametroTasa = 0
        End If
    
    End If
    
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
    
    Exit Function
errores:
        MsgBox Err.Description
        If rs.State <> 0 Then
            rs.Close
        End If
    End Function
    
    '' Valida si el sku es de telefonia
    '================================
    Public Function validaSKUTelefonia() As Boolean
    Dim isSkuTelefonia As Boolean
    isSkuTelefonia = False
        Set lCN2 = New ADODB.Connection
              Set lRS2 = New ADODB.Recordset
              lCN2.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
              lCN2.CursorLocation = adUseClient
              Set lRS2 = lCN2.Execute("SELECT fcprmval FROM PARAMETRO WITH(NOLOCK) WHERE fiprmid=5398")
                
              If Not lRS2 Is Nothing Then
                 If lRS2.RecordCount > 0 Then
                    isSkuTelefonia = CBool(lRS2!fcPrmVal)
                    lRS2.Close
                    Set lRS2 = Nothing
                 End If
              End If
    End Function

    
    '' VerificarCodigoSKUTelefonia para determinar si es de telefonia
    'JOCAMPOM
    '=========================================================
    Public Function VerificarCodigoSKUTelefonia(pstrCodigo As String) As Boolean
        VerificarCodigoSKUTelefonia = False
        Dim descripcion As String
        Dim lsSQL As String
        
        Dim valorTelefonia As Integer
              Set lCN2 = New ADODB.Connection
              Set lRS2 = New ADODB.Recordset
              lCN2.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
              lCN2.CursorLocation = adUseClient
              'lsSQL = "Exec spValidaProdDepto " & pstrCodigo
             lsSQL = "Exec PACRLLSValidaprodDeptoCE " & pstrCodigo
              Debug.Print lsSQL
              Set lRS2 = lCN2.Execute(lsSQL)
            
              If Not lRS2 Is Nothing Then
                 If lRS2.RecordCount > 0 Then
                 descripcion = lRS2.Fields(0)
                    'valorTelefonia = IIf(IsNull(lRS2!bandera), 0, lRS2!bandera)
'                    descripcion = IIf(IsNull(lRS2!descripcion), 0, lRS2!descripcion)
                    lRS2.Close
                    Set lRS2 = Nothing
                 End If
              End If
              If descripcion = 1 Then
              VerificarCodigoSKUTelefonia = True
              
                End If
                
    End Function
    
    ' ocultar frame de telefonia una vez que carga el evento
    '===================================================================================================================
    Public Sub ocultaFormTelefonia()
    FrameTelefonia.Visible = False
    End Sub
    
    ' ocultar frame de telefonia una vez que carga el evento
    '===================================================================================================================
    Public Sub muestraFormTelefonia()
    FrameTelefonia.Visible = True
    End Sub
    
    ' insertarDatosIMEITelefonia
    '===================================================================================================================
    Public Sub insertarDatosIMEITelefonia()
'    Dim IMEI As String
'    Dim a As Integer
'    Dim Contador As Integer
'
'   IMEI = txtIMEIProducto.Text
'  ListBoxIMEI.AddItem IMEI
'   If ListBoxIMEI.ListCount > 4 Then
'   Contador = ListBoxIMEI.ListCount
''    Debug.Print Contador
'   For a = 0 To Contador
''    IMEI = ListBoxIMEI.List(a)
'
''    lsSQL = " exec spINSERTATELEPRESUP 70000028, '1645897832651546', 167975 "
''    Set rs = New ADODB.Recordset
''    rs.ActiveConnection = conexion
''    rs.CursorLocation = adUseClient
''    rs.CursorType = adOpenDynamic
''    rs.LockType = adLockReadOnly
''    rs.Source = lsSQL
''    rs.Open
'
'    Set lCN2 = New ADODB.Connection
'    Set lRS2 = New ADODB.Recordset
'    lCN2.Open NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
'    lCN2.CursorLocation = adUseClient
'    Set lRS2 = lCN2.Execute("EXEC spINSERTATELEPRESUP 70000028, '1645897832651546', 167975")
'     If lRS2.RecordCount > 0 Then
'     Debug.Print "Se ejecuto correctamente la consulta" & lRS2.RecordCount
'        End If
'   Next a
'   End If
'
    End Sub
    
        
    '' Carga la tabla del Grid de telefonia
    '========================================================================================================================0
Public Sub cargaTablaDesProductoTelefonia()
Dim lintCont As Integer
Dim strCelda As String
Dim col_wid() As Single
Dim c As Integer

     GridTablaProductoTelefonia.Cols = 8
    GridTablaProductoTelefonia.TextMatrix(0, 0) = "Codigo"
    GridTablaProductoTelefonia.TextMatrix(0, 1) = "Descripcion"
    GridTablaProductoTelefonia.TextMatrix(0, 2) = "Precio"
    GridTablaProductoTelefonia.TextMatrix(0, 3) = "Cant"
    GridTablaProductoTelefonia.TextMatrix(0, 4) = "Exist"
    GridTablaProductoTelefonia.TextMatrix(0, 5) = "Descuento"
    GridTablaProductoTelefonia.TextMatrix(0, 6) = "D.Espec"
    GridTablaProductoTelefonia.TextMatrix(0, 7) = "SubTotal"
    GridTablaProductoTelefonia.TextMatrix(1, 3) = 1
    GridTablaProductoTelefonia.TextMatrix(1, 4) = 100
    GridTablaProductoTelefonia.TextMatrix(1, 5) = 0
    GridTablaProductoTelefonia.TextMatrix(1, 6) = 0
    
    Dim conexion    As New ADODB.Connection
    Dim rs       As ADODB.Recordset

    Dim consultaSQL As String
    conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
     If conexion.State = adStateClosed Then
     End If

    consultaSQL = "select prom.fiprodid,prod.fcProdDesc,prod.fnProdPrecio from prod_prom as prom inner join producto as prod on prom.fiprodid=prod.fiprodid where prom.fivigente=1 and prod.fidepto=500 and prod.fiprodid=740473"
    Set rs = New ADODB.Recordset
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = consultaSQL
    rs.Open
    
    If rs.RecordCount > 0 Then
           rs.MoveFirst
            While Not rs.EOF
            Debug.Print "primer " & rs.Fields(0).Value
            Debug.Print "segundo" & rs.Fields(1).Value
            Debug.Print "tercer" & rs.Fields(2).Value
            
            GridTablaProductoTelefonia.TextMatrix(1, 0) = rs!fiprodid
        GridTablaProductoTelefonia.TextMatrix(1, 1) = rs!fcProdDesc
        GridTablaProductoTelefonia.TextMatrix(1, 2) = Format(rs!fnProdPrecio, "$###,###")
        rs.MoveNext
            Wend
    End If
        
    GridTablaProductoTelefonia.TextMatrix(1, 7) = Format(GridTablaProductoTelefonia.TextMatrix(1, 2) * GridTablaProductoTelefonia.TextMatrix(1, 3), "$###,###")
    AjustaColumnasGridTelefonia
    'cargaTablaPlazosTelefonia
    strCelda = GridTablaProductoTelefonia.TextMatrix(GridTablaProductoTelefonia.Row, 1)
    
    For lintCont = 0 To GridTablaProductoTelefonia.rows - 1
            Debug.Print GridTablaProductoTelefonia.TextMatrix(lintCont, 0)
        Next
 ' Set the column widths.
    For c = 0 To GridTablaProductoTelefonia.Cols - 1
        GridTablaProductoTelefonia.ColWidth(c) = col_wid(c) + 240
    Next c
    
End Sub

    ' AjustaColumnasGridTelefonia
    '===================================================================================================================
Private Sub AjustaColumnasGridTelefonia()
       GridTablaProductoTelefonia.Cols = 8
        With GridTablaProductoTelefonia
        .Font.Size = 10
        .Row = 0
        
        .col = 0
        .Clip = "Codigo"
        .ColWidth(0) = 900
        
        .col = 1
        .Clip = "Descripcion"
        .ColWidth(1) = 3500
        
        .col = 2
        .Clip = "Precio"
        .CellAlignment = 6
        .ColWidth(2) = 750
        
        .col = 3
        .Clip = "Cant"
        .CellAlignment = 6
        .ColWidth(3) = 750
        
        .col = 4
        .Clip = "Exist"
        .CellAlignment = 6
        .ColWidth(4) = 800
        
        .col = 5
        .Clip = "Descuento"
        .CellAlignment = 6
        .ColWidth(5) = 1000
        
        .col = 6
        .Clip = "D.Espec"
        .CellAlignment = 6
        .ColWidth(6) = 1000
        
        .col = 7
        .Clip = "SubTotal"
        .CellAlignment = 6
        .ColWidth(5) = 1500
        End With

    End Sub
    'Eventos telefonia
    '==================================
Private Sub txtEngancheTelefonia_Change()
txtEngancheTelefonia_KeyDown 1, 1
End Sub

    'Eventos telefonia
     '=========================
    Private Sub txtEngancheTelefonia_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim lstrMensError As String
    Dim lintTipoCredito As Integer
    On Error Resume Next
    If KeyCode = vbKeyReturn Then
             MousePointer = vbHourglass
             If Len(Trim(txtEngancheTelefonia.Text)) = 0 Then
             ElseIf IsNumeric(txtEngancheTelefonia) Then
           Debug.Print "Porcentaje" & txtEngancheTelefonia
             MousePointer = vbArrow
             End If
             End If
    End Sub
    
        'Eventos telefonia
        '=========================
    Private Sub txtEngancheTelefonia_LostFocus()
        If Trim(txtEngancheTelefonia.Text) = "" Then
        txtEngancheTelefonia.Text = 0
    End If
    End Sub
    
    
    Private Sub txtEngancheTelefonia_GotFocus()
     txtEngancheTelefonia.SelStart = 0
    txtEngancheTelefonia.SelLength = Len(Trim(txtEngancheTelefonia))
End Sub
    
    
    
    
            'Eventos telefonia
        '=========================
Private Sub GridTablaPlazosTelefonia_Click()

Dim PlazoSelActual As Integer
Dim CapacidadPago As Double
Dim CapacidadpagoDisp As Double
Dim PlazoConSeguro As Double
Dim dblAbonoSinSeg As Double
Dim dblUltimoAbonoSinSeg As Double
Dim dblAbonoPuntualSinSeg As Double
Dim abonoPuntualTelefonia As Double

CapacidadpagoDisp = 24.3
PlazoSelActual = Val(Me.grdCredito.TextMatrix(Me.grdCredito.RowSel, 0))
'la capacidad de pago es la resta de la capacidad de pago disponible -el abono puntual
CapacidadPago = (CapacidadpagoDisp - Val(GridTablaPlazosTelefonia.TextMatrix(GridTablaPlazosTelefonia.RowSel, 4)))
GridTablaPlazosTelefonia.ColSel = GridTablaPlazosTelefonia.Cols - 1

PlazoConSeguro = Val(GridTablaPlazosTelefonia.TextMatrix(GridTablaPlazosTelefonia.RowSel, 0))
dblAbonoSinSeg = Val(GridTablaPlazosTelefonia.TextMatrix(GridTablaPlazosTelefonia.RowSel, 2))
dblUltimoAbonoSinSeg = Val(GridTablaPlazosTelefonia.TextMatrix(GridTablaPlazosTelefonia.RowSel, 3))
dblAbonoPuntualSinSeg = Val(GridTablaPlazosTelefonia.TextMatrix(GridTablaPlazosTelefonia.RowSel, 4))
abonoPuntualTelefonia = Val(GridTablaPlazosTelefonia.TextMatrix(GridTablaPlazosTelefonia.RowSel, 4))

Debug.Print "plazo actual" & PlazoSelActual

End Sub

Private Sub GridTablaPlazosTelefonia_EnterCell()
If gbolCambiaRenglon = False Then
    If GridTablaPlazosTelefonia.Row <> gintRenglonC Then
      'GridTablaPlazosTelefonia_Click
    End If
End If
End Sub


Private Sub GridTablaPlazosTelefonia_GotFocus()
    AjustarFrames 2, objPrepGeneral.VentaCredito.TipoCredito
    'ActualizaTotales
    GridTablaPlazosTelefonia.col = 0
    GridTablaPlazosTelefonia.RowSel = GridTablaPlazosTelefonia.Row
    GridTablaPlazosTelefonia.ColSel = GridTablaPlazosTelefonia.Cols - 1
    lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1032") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
End Sub

Private Sub AsciendeRenglonTel()
    If GridTablaPlazosTelefonia.Row > 1 Then
        GridTablaPlazosTelefonia.Row = GridTablaPlazosTelefonia.Row - 1
    Else
        GridTablaPlazosTelefonia.Row = GridTablaPlazosTelefonia.rows - 1
    End If
End Sub

Private Sub DesciendeRenglonTel()
    If GridTablaPlazosTelefonia.Row = GridTablaPlazosTelefonia.rows - 1 Then
        GridTablaPlazosTelefonia.Row = 1
    Else
        GridTablaPlazosTelefonia.Row = GridTablaPlazosTelefonia.Row + 1
    End If
End Sub

Private Sub GridTablaPlazosTelefonia_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode
        Case vbKeyReturn
        'GridTablaPlazosTelefonia_Click
        'GridTablaPlazosTelefonia_DblClick
    Case vbKeyUp
        AsciendeRenglon
    Case vbKeyDown
        DesciendeRenglon
    End Select
End Sub

        'Eventos telefonia
        '=========================
    Private Sub GridTablaPlazosTelefonia_DblClick()
VerificarControl
 Dim LCLIENTE As Long
        frmMenuCliente.Visible = True
        txtCliente.SetFocus
End Sub

Private Sub checkMensualTelefonia_Click()
    isPagoSemanalTelefonia = checkSemanalTelefonia.Value
    isPagoQuincenalTelefonia = checkQuincenalTelefonia.Value
    isPagoMensualTelefonia = checkMensualTelefonia.Value
    PeriodoDePagoTelefonia = "Mensual"
    'Periodo de pagos
    NumPeriodoPagoTelefonia = 14
    objPrepGeneral.VentaCredito.Periodo = 14
    objPrepGeneral.VentaCredito.EsPerPagSem = blnEsSemanal
    objPrepGeneral.VentaCredito.EsPerPagQui = blnEsQuincenal
    objPrepGeneral.VentaCredito.EsPerPagMen = blnEsMensual
    ActualizaTotales
End Sub

Private Sub checkQuincenalTelefonia_Click()
    isPagoSemanalTelefonia = checkSemanalTelefonia.Value
    isPagoQuincenalTelefonia = checkQuincenalTelefonia.Value
    isPagoMensualTelefonia = checkMensualTelefonia.Value
    PeriodoDePagoTelefonia = "Quincenal"
    'Periodo de pagos
    NumPeriodoPagoTelefonia = 13
    objPrepGeneral.VentaCredito.Periodo = 13
    objPrepGeneral.VentaCredito.EsPerPagSem = blnEsSemanal
    objPrepGeneral.VentaCredito.EsPerPagQui = blnEsQuincenal
    objPrepGeneral.VentaCredito.EsPerPagMen = blnEsMensual
    ActualizaTotales
End Sub


Private Sub checkSemanalTelefonia_Click()
    isPagoSemanalTelefonia = checkSemanalTelefonia.Value
    isPagoQuincenalTelefonia = checkQuincenalTelefonia.Value
    isPagoMensualTelefonia = checkMensualTelefonia.Value
    PeriodoDePagoTelefonia = "Semanal"
    'Periodo de pagos
    NumPeriodoPagoTelefonia = 1
    objPrepGeneral.VentaCredito.Periodo = 1
    objPrepGeneral.VentaCredito.EsPerPagSem = blnEsSemanal
    objPrepGeneral.VentaCredito.EsPerPagQui = blnEsQuincenal
    objPrepGeneral.VentaCredito.EsPerPagMen = blnEsMensual
    ActualizaTotales
End Sub


Public Function VerificarCapacidadTel() As Boolean
On Error GoTo errores
    Dim VerificarCapacidad As Boolean
    VerificarCapacidad = False
    
    If objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp > objPrepGeneral.VentaCredito.Cliente.CapDispCONSobregiro Then
        If objPrepGeneral.VentaCredito.Cliente.CapacidadpagoDisp >= objPrepGeneral.VentaCredito.AbonoMas1 Then
            VerificarCapacidad = True
        End If
    Else
        If objPrepGeneral.VentaCredito.Cliente.CapDispCONSobregiro >= objPrepGeneral.VentaCredito.AbonoMas1 Then
            VerificarCapacidad = True
        End If
    End If
        
Exit Function
errores:
    MsgBox Err.Description
    Exit Function
End Function


Public Sub AjustaColumnasCreditoTelefonia(Optional ByVal pTipoCredito As Byte = 2)
    Dim lblnCambiar As Boolean
    Dim lintColAnterior As Integer

    lintColAnterior = GridTablaPlazosTelefonia.Row

    GridTablaPlazosTelefonia.Font.Size = IIf(MUESTRAFORMASDEPAGO1530 = 1, 7, 10)   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    GridTablaPlazosTelefonia.Row = 0

    lstrADNSignoMoneda = lotermino.obtenTermino(ADNSignoMoneda, Descsingular)

    Select Case pTipoCredito
        Case 1
            If GridTablaPlazosTelefonia.Cols <> 5 Then
                GridTablaPlazosTelefonia.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 8, 5)  ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                GridTablaPlazosTelefonia.col = 4
                GridTablaPlazosTelefonia.Clip = "Plazo+1" & lstrADNSignoMoneda
                GridTablaPlazosTelefonia.ColWidth(4) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 1000, 1200)  ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                lblnCambiar = True
            End If
        Case 2
            If GridTablaPlazosTelefonia.Cols <> 4 Then
                GridTablaPlazosTelefonia.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 8, 5)  ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                lblnCambiar = True
            End If
        Case 3
            If GridTablaPlazosTelefonia.Cols <> 4 Then
                GridTablaPlazosTelefonia.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 7, 4)  ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                lblnCambiar = True
            End If
        Case 4  'NLFG correccion para evitar que se elimine la ultima columna al seleccionar algun plazo Enero 2012
            If GridTablaPlazosTelefonia.Cols <> 4 Then
                GridTablaPlazosTelefonia.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 7, 5)   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
                lblnCambiar = True
            End If
        Case 5
            If GridTablaPlazosTelefonia.Cols <> 6 Then
                GridTablaPlazosTelefonia.Cols = IIf(MUESTRAFORMASDEPAGO1530 = 1, 10, 6)   ' ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES

                GridTablaPlazosTelefonia.col = 4
                GridTablaPlazosTelefonia.Clip = "AbonoCP" & lstrADNSignoMoneda
                GridTablaPlazosTelefonia.ColWidth(4) = 1200

                GridTablaPlazosTelefonia.col = 5
                GridTablaPlazosTelefonia.Clip = "UAbonoCP" & lstrADNSignoMoneda
                GridTablaPlazosTelefonia.ColWidth(5) = 1200

                lblnCambiar = True
            End If
    End Select

    GridTablaPlazosTelefonia.col = 0
    GridTablaPlazosTelefonia.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1027")
    GridTablaPlazosTelefonia.ColWidth(0) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 450, 750) '  ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES


    GridTablaPlazosTelefonia.col = 1
    GridTablaPlazosTelefonia.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1028") & lstrADNSignoMoneda
    GridTablaPlazosTelefonia.CellAlignment = 6
    GridTablaPlazosTelefonia.ColWidth(1) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 1000, 1200)  '  ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    
    GridTablaPlazosTelefonia.col = 2
    GridTablaPlazosTelefonia.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1029") & lstrADNSignoMoneda
    GridTablaPlazosTelefonia.ColWidth(2) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 800, 900)  '  ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    'VHSG 14/10/2011 Se aumento el tama√±o de la columna
    
    GridTablaPlazosTelefonia.col = 3
    GridTablaPlazosTelefonia.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1030") & lstrADNSignoMoneda
    GridTablaPlazosTelefonia.CellAlignment = 6
    GridTablaPlazosTelefonia.ColWidth(3) = IIf(MUESTRAFORMASDEPAGO1530 = 1, 800, 900)  '  ISM 18/04/2005 1530 PLAN DE PAGOS QUINCENALES
    'VHSG 14/10/2011 Se aumento el tama√±o de la columna
    
    'RIMT:
    If ValidarPagoPuntual Then 'pagop
    If GridTablaPlazosTelefonia.Cols = 4 Then GridTablaPlazosTelefonia.Cols = 5
      GridTablaPlazosTelefonia.col = 4
      If PaisTraduc = 4 Then
        GridTablaPlazosTelefonia.Clip = "Pago a Tiempo" & lstrADNSignoMoneda
        GridTablaPlazosTelefonia.CellAlignment = 0
        GridTablaPlazosTelefonia.ColWidth(4) = 1600
      Else
        GridTablaPlazosTelefonia.Clip = traduc.ConsultaLeyendasporApp(IDAplicacion & ",1031") & lstrADNSignoMoneda
        GridTablaPlazosTelefonia.CellAlignment = 0
        GridTablaPlazosTelefonia.ColWidth(4) = 1100
      End If
      
    End If
  
  
    If GridTablaPlazosTelefonia.rows > 1 Then
        GridTablaPlazosTelefonia.Row = 1
    End If
    GridTablaPlazosTelefonia.Row = lintColAnterior
    DoEvents
End Sub

Public Sub ActualizaPrecioTelefonia(ByVal pcolDetalle As Object)
    Dim lintContPartidas As Integer
    On Error GoTo ErrVB
    
    If Not pcolDetalle Is Nothing Then
        For lintContPartidas = 1 To pcolDetalle.Count
            GridTablaProductoTelefonia.Row = lintContPartidas
            bolSituar = True
            GridTablaProductoTelefonia.col = 2
            GridTablaProductoTelefonia.Clip = pcolDetalle(lintContPartidas).producto.ProdPrecio
            GridTablaProductoTelefonia.col = 5
            GridTablaProductoTelefonia.Clip = pcolDetalle(lintContPartidas).DescuentoASCII
            GridTablaProductoTelefonia.col = 7
            GridTablaProductoTelefonia.Clip = pcolDetalle(lintContPartidas).PrecioChazxPartida - pcolDetalle(lintContPartidas).DesctoCredxPartida
        Next
    End If
    
    Exit Sub
ErrVB:
    objFuncionalidad.MuestraMensaje Err.Number & vbCrLf & Err.Description & vbCrLf & Err.Source, Informacion, Aceptar, Me.Caption
End Sub

 Private Sub SeleccionaPlazoDefaultTelefonia(ByVal pobjAbono As Object, ByVal intRenglon As Integer, ByVal intColumnas As Integer)
    Dim lintCont As Integer
        If pobjAbono.Plazo = objPrepGeneral.PlazoEtiquetado Then
            If gintAbonoDefault <> 0 Then
                GridTablaPlazosTelefonia.Row = gintAbonoDefault
                For lintCont = 0 To intColumnas
                    GridTablaPlazosTelefonia.col = lintCont
                    GridTablaPlazosTelefonia.CellBackColor = vbWhite
                    GridTablaPlazosTelefonia.CellFontBold = False
                    GridTablaPlazosTelefonia.CellForeColor = vbBlack
                Next
            End If
            GridTablaPlazosTelefonia.Row = intRenglon
            gintAbonoDefault = intRenglon
            For lintCont = 0 To intColumnas
                GridTablaPlazosTelefonia.col = lintCont
                GridTablaPlazosTelefonia.CellBackColor = &HF8E6DE
                GridTablaPlazosTelefonia.CellFontBold = True
                GridTablaPlazosTelefonia.CellForeColor = &H800000
            Next
        ElseIf gintAbonoDefault = 0 Then
            gintAbonoDefault = intRenglon
            For lintCont = 0 To intColumnas
                GridTablaPlazosTelefonia.col = lintCont
                GridTablaPlazosTelefonia.CellBackColor = &HF8E6DE
                GridTablaPlazosTelefonia.CellFontBold = True
                GridTablaPlazosTelefonia.CellForeColor = &H800000
            Next
        End If
    End Sub

'=================================================

'/* ERV Desgloce del descuento italika */
Public Function funDesgloceDescuentoTelefonia(ProductoId As Long) As Long
Dim strSQL              As String
Dim conexion            As New ADODB.Connection
Dim rs                  As ADODB.Recordset
Dim lsTipoPromo         As String
Dim lsProductos         As String
Dim lsProductosCad      As String
Dim strclasif           As String
Dim liRestricCadena     As Integer
Dim ColumnaInicio       As Integer
Dim lsvaloProdIDGrid    As String
Dim funDesgloceDescuento As Double

On Error GoTo ErrDesgloceDescuento

conexion.Open "DSN=" & NvoEnv.DSN, NvoEnv.Usuario, NvoEnv.Password
If conexion.State = adStateClosed Then
End If

strSQL = "SELECT ISNULL(fnPrdPrmDesc,0) AS DESCUENTO FROM PROD_PROM WITH(NOLOCK) WHERE fiProdId = " & ProductoId & " AND fiVigente = 1"

    Set rs = New ADODB.Recordset
    rs.ActiveConnection = conexion
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenDynamic
    rs.LockType = adLockReadOnly
    rs.Source = strSQL
    rs.Open

    If rs.RecordCount > 0 Then
        funDesgloceDescuento = rs("DESCUENTO").Value
    Else
        funDesgloceDescuento = 0
    End If


If conexion.State = adStateOpen Then conexion.Close
If rs.State = adStateOpen Then rs.Close
Set conexion = Nothing
Set rs = Nothing

Exit Function

ErrDesgloceDescuento:
    If conexion.State = adStateOpen Then conexion.Close
    If rs.State = adStateOpen Then rs.Close
    Set conexion = Nothing
    Set rs = Nothing
End Function


Private Sub AyudaGridTablaProductoTelefonia(pColumna As Integer)
    If pColumna = 0 Then
        lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1035") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1038") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
    ElseIf pColumna = 3 Then
        lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1036") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1038") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
    ElseIf pColumna = 6 Then
        lblAyuda = vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1037") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1038") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1033") & vbCrLf & traduc.ConsultaLeyendasporApp(IDAplicacion & ",1034")
    End If
End Sub


    Private Sub GridTablaProductoTelefonia_EnterCell()
    Dim liRow As Integer
    Dim liCol As Integer
    
    If gbolCambiaRenglon = False Then
        If GridTablaProductoTelefonia.RowHeight(GridTablaProductoTelefonia.Row) = 0 Then Exit Sub
        liRow = GridTablaProductoTelefonia.Row
        gintColumna = GridTablaProductoTelefonia.col
        If liRow <> gintRenglon Then
           Selecciona gintRenglon, False, GridTablaProductoTelefonia
           Selecciona liRow, True, GridTablaProductoTelefonia
        End If
        gintRenglon = liRow
        GridTablaProductoTelefonia.col = gintColumna
    
        'Si el grid tiene partidas se realizan las operaciones
        If GridTablaProductoTelefonia.Row <> 0 Then
            
            'bolSituar es una bandera, cuando no est√° activa permite que el txt se sit√∫e en la parte del grid correspondiente a la celda seleccionada
            If Not bolSituar Then
                
                AyudaGridTablaProductoTelefonia GridTablaProductoTelefonia.col
                
                'Solamente se muestra el txt cuando se sit√∫a en la columna 3 o 6
                If GridTablaProductoTelefonia.col = 3 Or (GridTablaProductoTelefonia.col = 2 And (Val(GridTablaProductoTelefonia.TextMatrix(GridTablaProductoTelefonia.Row, 0)) = 888888) Or Val(GridTablaProductoTelefonia.TextMatrix(GridTablaProductoTelefonia.Row, 0)) = 777777) Then
                
                    ManejaColumnas3y6Telefonia
                    If gbolSaleTxt = False Then gbolEntragrid = True
                    gbolSaleTxt = False
                ElseIf GridTablaProductoTelefonia.col = 0 Then
                    GridTablaProductoTelefonia.CellBackColor = &HEED2C1
                    txtValorPartidaAux.Visible = False
                End If
                ActivaMenuPrincipal
            End If
        End If
    End If
    End Sub
    
    Private Sub GridTablaProductoTelefonia_GotFocus()
    
    GridTablaProductoTelefonia_EnterCell
    End Sub
    
    
    Private Sub GridTablaProductoTelefonia_KeyDown(KeyCode As Integer, Shift As Integer)
        Select Case KeyCode
            Case vbKeyReturn, vbKeyDelete
                txtValorPartidaAux_KeyDown KeyCode, Shift
        End Select
    End Sub
    
    Private Sub GridTablaProductoTelefonia_LeaveCell()
        If GridTablaProductoTelefonia.col = 0 Then
            If Not GridTablaProductoTelefonia.CellBackColor = &HFFFFFF And GridTablaProductoTelefonia.Row > 0 Then
                GridTablaProductoTelefonia.CellBackColor = &HFAF0E2
            End If
        End If
    End Sub
    
    Private Sub GridTablaProductoTelefonia_LostFocus()
        'If GridTablaProductoTelefonia.Row > 0 Then
            'GridTablaProductoTelefonia.CellBackColor = vbWhite
        'End If
        DesactivaMenuPrincipal
    End Sub
    
    
    Private Sub GridTablaProductoTelefonia_Scroll()
        If txtValorPartidaAux.Visible Then
            If GridTablaProductoTelefonia.Row < 4 And GridTablaProductoTelefonia.RowIsVisible(GridTablaProductoTelefonia.Row) Then
                GridTablaProductoTelefonia_EnterCell
            ElseIf Not GridTablaProductoTelefonia.RowIsVisible(GridTablaProductoTelefonia.Row) Then
                txtValorPartidaAux.Visible = False
                Exit Sub
            End If
            txtValorPartidaAux.Visible = GridTablaProductoTelefonia.Row < 4
        End If
    End Sub
    
        Private Sub ManejaColumnas3y6Telefonia()
        If GridTablaProductoTelefonia.col = 6 Then
            txtValorPartidaAux.MaxLength = 9
            'ROLREM-I
            'If Trim(objPrepGeneral.VentaCredito.CanalExterno) = "S" Then
            'ROLREM-F
                If IsNumeric(GridTablaProductoTelefonia.Clip) Then
                    If GridTablaProductoTelefonia.Clip > 0 Then
                        objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1144"), Informacion, Aceptar, Me.Caption
                        'MsgBox "El descuento especial solamente puede asignarse una vez", vbInformation, Me.Caption
                        GridTablaProductoTelefonia.col = 3
                    End If
                End If
            'ROLREM-I
    '        Else
    '            'no se debe modificar el descuento especial cuando la cantidad de art√≠culos sea diferente de 1
    '            If GridTablaProductoTelefonia.TextMatrix(GridTablaProductoTelefonia.Row, 3) <> 1 Then
    '                objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1148"), Informacion, Aceptar, Me.Caption
    '                GridTablaProductoTelefonia.Col = 3
    '                'MsgBox "La cantidad debe ser 1 para poder aplicar un descuento especial", vbInformation, Me.Caption
    '            ElseIf IsNumeric(GridTablaProductoTelefonia.Clip) Then
    '                If GridTablaProductoTelefonia.Clip > 0 Then
    '                    objFuncionalidad.MuestraMensaje traduc.ConsultaLeyendasporApp(IDAplicacion & ",1144"), Informacion, Aceptar, Me.Caption
    '                    'MsgBox "El descuento especial solamente puede asignarse una vez", vbInformation, Me.Caption
    '                    GridTablaProductoTelefonia.Col = 3
    '                End If
    '            End If
    '        End If
            'ROLREM-F
        Else
            txtValorPartidaAux.MaxLength = 7
        End If
                        
        If GridTablaProductoTelefonia.ColSel <> GridTablaProductoTelefonia.col Then
            GridTablaProductoTelefonia.ColSel = GridTablaProductoTelefonia.col
        End If
        If GridTablaProductoTelefonia.RowSel <> GridTablaProductoTelefonia.Row Then
            GridTablaProductoTelefonia.RowSel = GridTablaProductoTelefonia.Row
        End If
        
        txtValorPartidaAux = GridTablaProductoTelefonia.Clip
        Debug.Print txtValorPartidaAux
        If GridTablaProductoTelefonia.Row > 0 Then
            If GridTablaProductoTelefonia.RowIsVisible(GridTablaProductoTelefonia.Row) And txtValorPartidaAux.Enabled Then
                txtValorPartidaAux.Visible = True
               ' txtValorPartidaAux.SetFocus
                txtValorPartidaAux.Width = GridTablaProductoTelefonia.CellWidth
                txtValorPartidaAux.Height = GridTablaProductoTelefonia.CellHeight
                txtValorPartidaAux.Top = GridTablaProductoTelefonia.CellTop
                txtValorPartidaAux.Left = GridTablaProductoTelefonia.CellLeft
            End If
        End If
        
    End Sub

' Carga la tabla de de plazos y abonos TELEFONIA

Public Sub cargaTablaPlazosTelefonia()
Dim lintCont As Integer
Dim strCelda As String
Dim col_wid() As Single
Dim c As Integer
GridTablaPlazosTelefonia.Visible = True
     GridTablaPlazosTelefonia.Cols = 5
    GridTablaPlazosTelefonia.TextMatrix(0, 0) = "Plazo"
    GridTablaPlazosTelefonia.TextMatrix(0, 1) = "Descuento$"
    GridTablaPlazosTelefonia.TextMatrix(0, 2) = "Abono$"
    GridTablaPlazosTelefonia.TextMatrix(0, 3) = "Ultimo$"
    GridTablaPlazosTelefonia.TextMatrix(0, 4) = "PagoPuntual"
    
    GridTablaPlazosTelefonia.rows = 20
    
    
    GridTablaPlazosTelefonia.TextMatrix(1, 0) = 26
    GridTablaPlazosTelefonia.TextMatrix(1, 1) = 0
    GridTablaPlazosTelefonia.TextMatrix(1, 2) = 212
    GridTablaPlazosTelefonia.TextMatrix(1, 3) = 201
    GridTablaPlazosTelefonia.TextMatrix(1, 4) = 180
    
      GridTablaPlazosTelefonia.TextMatrix(2, 0) = 26
    GridTablaPlazosTelefonia.TextMatrix(2, 1) = 0
    GridTablaPlazosTelefonia.TextMatrix(2, 2) = 212
    GridTablaPlazosTelefonia.TextMatrix(2, 3) = 201
    GridTablaPlazosTelefonia.TextMatrix(2, 4) = 180
    
      GridTablaPlazosTelefonia.TextMatrix(2, 0) = 26
    GridTablaPlazosTelefonia.TextMatrix(2, 1) = 0
    GridTablaPlazosTelefonia.TextMatrix(2, 2) = 212
    GridTablaPlazosTelefonia.TextMatrix(2, 3) = 201
    GridTablaPlazosTelefonia.TextMatrix(2, 4) = 180
    
          GridTablaPlazosTelefonia.TextMatrix(3, 0) = 26
    GridTablaPlazosTelefonia.TextMatrix(3, 1) = 0
    GridTablaPlazosTelefonia.TextMatrix(2, 2) = 212
    GridTablaPlazosTelefonia.TextMatrix(2, 3) = 201
    GridTablaPlazosTelefonia.TextMatrix(2, 4) = 180

    'GridTablaProductoTelefonia.TextMatrix(1, 7) = Format(GridTablaProductoTelefonia.TextMatrix(1, 2) * GridTablaProductoTelefonia.TextMatrix(1, 3), "$###,###")
    'AjustaColumnasPlazosTelefonia
    
    strCelda = GridTablaPlazosTelefonia.TextMatrix(GridTablaPlazosTelefonia.Row, 1)
    
    For lintCont = 0 To GridTablaPlazosTelefonia.rows - 1
            Debug.Print GridTablaPlazosTelefonia.TextMatrix(lintCont, 0)
        Next
 ' Set the column widths.
    For c = 0 To GridTablaPlazosTelefonia.Cols - 1
        GridTablaPlazosTelefonia.ColWidth(c) = col_wid(c) + 240
    Next c
End Sub

 ' AjustaColumnasGridTelefonia
    '===================================================================================================================
Private Sub AjustaColumnasPlazosTelefonia()
       GridTablaPlazosTelefonia.Cols = 5
        With GridTablaPlazosTelefonia
        .Font.Size = 10
        .Row = 0
        
        .col = 0
        .Clip = "Plazo"
        .ColWidth(0) = 900
        
        .col = 1
        .Clip = "Descuento$"
        .ColWidth(1) = 3500
        
        .col = 2
        .Clip = "Abonos$"
        .CellAlignment = 6
        .ColWidth(2) = 750
        
        .col = 3
        .Clip = "Ultimo$"
        .CellAlignment = 6
        .ColWidth(3) = 750
        
        .col = 4
        .Clip = "PagoPuntual"
        .CellAlignment = 6
        .ColWidth(4) = 800
        End With

    End Sub
    
    
    ' activa venta seleccionada
    Private Sub ActivaVentaSeleccionadaTelefonia()
    
Dim isFlagTelefonia10porciento As Boolean
Dim isFlagTelefonia5porcentaje As Boolean
Dim isFlagTelefonia1aSemanalidad As Boolean
Dim isFlagTelefoniaCredPlus As Boolean

 If Not (isFlagTelefonia10porciento Or isFlagTelefonia5porcentaje Or isFlagTelefonia1aSemanalidad Or isFlagTelefoniaCredPlus) Then
    isFlagTelefonia1aSemanalidad = IIf(objPrepGeneral.VentaCredito.TipoCredito = 1, True, False)
    isFlagTelefonia10porciento = IIf(objPrepGeneral.VentaCredito.TipoCredito = 2, True, False)
    isFlagTelefonia5porcentaje = IIf(objPrepGeneral.VentaCredito.TipoCredito = 3, True, False)
    isFlagTelefoniaCredPlus = IIf(objPrepGeneral.VentaCredito.TipoCredito = 5, True, False)
 End If
 If isFlagTelefonia1aSemanalidad Then lbl1aSem_Click
 If isFlagTelefonia10porciento Then lbl10pc_Click
 If isFlagTelefonia5porcentaje Then lbl5pc_Click
 If isFlagTelefoniaCredPlus Then lblCredPlus_Click
 ResaltaShpVenta shp10pc, True
End Sub
    
Private Function VerificarEstadoConexion() As Boolean
    Dim bolConectado As Boolean
    Dim conexion            As New ADODB.Connection
    bolConectado = conexion.State = adStateOpen
    
    If Not bolConectado Then
        conexion.CursorLocation = adUseClient
    conexion.Open "DSN=" & NvoEnv.DSN & ";UId=" & NvoEnv.Usuario & ";Pwd=" & NvoEnv.Password
    bolConectado = conexion.State = adStateOpen
    End If
    VerificarEstadoConexion = bolConectado
End Function
